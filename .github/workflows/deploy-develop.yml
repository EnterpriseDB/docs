name: Deploy Develop to Netlify
on:
  push:
    branches:
      - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup disk
        uses: curoky/cleanup-disk-action@v2.0

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch whole repo so git-restore-mtime can work
          lfs: true
      - name: Adjust file watchers limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: update npm
        run: npm install -g npm@7
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
      - name: Install dependencies
        run: |
          npm run presetup
          npm ci
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: "2.14.1"
      - name: Install wkhtmltopdf
        run: |
          curl -L https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb > wkhtmltopdf.deb
          sudo apt-get install ./wkhtmltopdf.deb

      - name: Build all pdfs
        run: npm run pdf:build-all-ci

      - name: Checking Gatsby cache
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-develop-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-develop-

      - name: Fix mtimes
        run: npm run fix-mtimes --force
      - name: Gatsby build
        run: npm run build
        env:
          APP_ENV: staging
          NODE_ENV: ${{ secrets.NODE_ENV }}
          NODE_OPTIONS: --max-old-space-size=4096
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_INDEX_NAME: edb-docs-staging
          INDEX_ON_BUILD: true

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.2.2
        with:
          publish-dir: "./public"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
          enable-pull-request-comment: false
          production-deploy: true
          production-branch: develop # this isn't needed because production-deploy is set to true, but could be used instead to force a production build when building against develop
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEVELOP_SITE_ID }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
