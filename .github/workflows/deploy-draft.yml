name: Deploy branch draft on Netlify
on:
  pull_request:
    types: [labeled, opened, synchronize]

concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'deploy') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'deploy'))
    runs-on: ubuntu-latest
    steps:
    - name: inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: compose a name for the build environment
      run: echo "BUILD_ENV_NAME=pr-${{ github.event.number }}-${{ env.GITHUB_HEAD_REF_SLUG }}" >> $GITHUB_ENV

    # creates a deployment so that a status is immediately visible on the PR
    # this deployment will be completed by the netlify deploy step below
    - name: create a github deployment
      id: deployment
      uses: avakar/create-deployment@v1
      with:
        ref: ${{ github.head_ref }}
        environment: ${{ env.BUILD_ENV_NAME }}
        transient_environment: true
        auto_merge: false
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}    

    - uses: avakar/set-deployment-status@v1
      with:
        state: in_progress
        deployment_id: ${{ steps.deployment.output.deployment_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0 # fetch whole repo so git-restore-mtime can work

    - name: Adjust file watchers limit
      run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    # ref: https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: Get yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"    

    - name: Checking Yarn cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
  
    - name: Yarn install
      run: npx yarn install --immutable
      env:
        NODE_ENV: ${{ secrets.NODE_ENV }}

    - name: Checking Gatsby cache
      id: gatsby-cache-build
      uses: actions/cache@v2
      with:
        path: |
          public
          .cache
        key: ${{ runner.os }}-gatsby-build-draft-${{ github.head_ref }}

    - name: Fix mtimes
      run: yarn fix-mtimes --force
      
    - name: Gatsby build
      run: yarn build
      env:
        APP_ENV: staging
        NODE_ENV: ${{ secrets.NODE_ENV }}
        NODE_OPTIONS: --max-old-space-size=4096
        ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
        ALGOLIA_INDEX_NAME: edb-docs-staging
        INDEX_ON_BUILD: false

    - name: Netlify deploy
      run: |
        sudo yarn global add netlify-cli
        netlify deploy --dir=public --json | tee deploy_results.json
        echo "NETLIFY_DRAFT_URL=`jq -r '.deploy_url' deploy_results.json`" >> $GITHUB_ENV
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEVELOP_SITE_ID }}

    - name: update the github deployment status
      uses: bobheadxi/deployments@v0.5.2
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: ${{ steps.netlify-deploy.outputs.deploy-url }}