
# yaml-language-server: $schema=https://raw.githubusercontent.com/EnterpriseDB/docs/refs/heads/develop/tools/automation/generators/relgen/relnote-schema.json
product: EDB Postgres Distributed
version: 5.8.0
date: 22 May 2025
components:
  "BDR": 5.8.0
  "PGD CLI": 5.8.0
  "PGD Proxy": 5.8.0
  "Utilities": 5.8.0
intro: |
 EDB Postgres Distributed 5.8.0 includes a number of enhancements and bug fixes.
highlights: |
  - Highlights here
relnotes:
- relnote: Use primary_conninfo GUC instead of trying to read from shared memory
  component: BDR
  details: |
      The shared memory information may get obfuscated and hence become
      useless. So instead of reading from there, simply use the GUC which is
      now available on all supported PG versions.
  jira: BDR-5923
  addresses: "41776"
  type: Bug fix
  impact: High

- relnote: Ensure commit scope logic only runs on data nodes
  component: BDR
  details: |
      While commit scope processing does not have any direct affect on
      non-data nodes, by skipping it altogether we can avoid potentially
      confusing error messages.
  jira: BDR-6325
  addresses: ""
  type: Enhancement
  impact: Medium

- relnote: Update to non-unique index needs to compare tuple on lookup to ensure it is the same
  component: BDR
  jira: BDR-5811 CP-43523 CP-43802 CP-45244 CP-47815
  addresses: "43523, 43802, 45244, 47815, 48007"
  type: Bug fix
  impact: Highest

- relnote: Prevent segfault in bdr.taskmgr_set_leader
  component: BDR
  details: |    
      Add a note in test 00200 to at least give a hint about which
      function may be to blame.
  jira: BDR-6401
  addresses: ""
  type: Bug fix
  impact: Medium


- relnote: Replacing TRUNCATEs with DELETEs from all BDR catalogs on local node drop (#3685)
  component: BDR
  details: |    
      This is to avoid deadlock in bdr_init_physical IF customer happens to run monitoring
      queries during node joining / cleaning unwanted source node data.
  jira: BDR-6313
  addresses: "46952"
  type: Bug fix
  impact: Medium


- relnote: Ensure new joiner processes watermark message in the CATCHUP phase
  component: BDR
  details: |    
      Setting nci->min_lsn to XactLastCommitEnd of watermark message Tx to ensure
      CATCHUP phase finishes on new joiner only after watermark is processed.
  jira: BDR-6397
  addresses: ""
  type: Bug fix
  impact: Medium


- relnote: Add safety nets for CDC failover
  details: |
    CDC failover now has additional safety nets to ensure that the consumer
    does not start replication from a node that is not the creator of the
    replication slot. This is to prevent data loss or duplicate transactions.
    The changes also add additional checks to ensure that the consumer does
    not start replication from a node that does not have the required WAL
    files to decode the transactions that are missing on the consumer but
    were included in the initial snapshot that the newly joined node had
    obtained (physical or logical).
  component: BDR  
  jira: BDR-6125
  addresses: ""
  type: Bug fix
  impact: Highest

- relnote: Added `bdr.galloc_chunk_info()` function to simplify sequences
  description: |
    The `bdr.galloc_chunk_info()` function provides information about the chunk
    allocation for a given sequence. This function returns the chunk ID, the
    sequence ID, and the chunk size. This function is useful for debugging and
    understanding how sequences are allocated in BDR.
  component: BDR
  impact: Medium
  jira: BDR-6144
  addresses: ""
  type: Enhancement
- relnote: Use primary_conninfo GUC instead of trying to read from shared memory
  component: BDR
  details: |
      The shared memory information may get obfuscated and hence become
      useless. So instead of reading from there, simply use the GUC which is
      now available on all supported PG versions.
  jira: BDR-5923
  addresses: "41776"
  type: Bug fix
  impact: High

- relnote: Ensure commit scope logic only runs on data nodes
  component: BDR
  details: |
      While commit scope processing does not have any direct affect on
      non-data nodes, by skipping it altogether we can avoid potentially
      confusing error messages.
  jira: BDR-6325
  addresses: ""
  type: Enhancement
  impact: Medium

- relnote: Update to non-unique index needs to compare tuple on lookup to ensure it is the same
  component: BDR
  jira: BDR-5811 CP-43523 CP-43802 CP-45244 CP-47815
  addresses: "43523, 43802, 45244, 47815, 48007"
  type: Bug fix
  impact: Highest

- relnote: Prevent segfault in bdr.taskmgr_set_leader
  component: BDR
  details: |    
      Add a note in test 00200 to at least give a hint about which
      function may be to blame.
  jira: BDR-6401
  addresses: ""
  type: Bug fix
  impact: Medium


- relnote: Replacing TRUNCATEs with DELETEs from all BDR catalogs on local node drop (#3685)
  component: BDR
  details: |    
      This is to avoid deadlock in bdr_init_physical IF customer happens to run monitoring
      queries during node joining / cleaning unwanted source node data.
  jira: BDR-6313
  addresses: "46952"
  type: Bug fix
  impact: Medium


- relnote: Ensure new joiner processes watermark message in the CATCHUP phase
  component: BDR
  details: |    
      Setting nci->min_lsn to XactLastCommitEnd of watermark message Tx to ensure
      CATCHUP phase finishes on new joiner only after watermark is processed.
  jira: BDR-6397
  addresses: ""
  type: Bug fix
  impact: Medium


- relnote: Add safety nets for CDC failover
  details: |
    CDC failover now has additional safety nets to ensure that the consumer
    does not start replication from a node that is not the creator of the
    replication slot. This is to prevent data loss or duplicate transactions.
    The changes also add additional checks to ensure that the consumer does
    not start replication from a node that does not have the required WAL
    files to decode the transactions that are missing on the consumer but
    were included in the initial snapshot that the newly joined node had
    obtained (physical or logical).
  component: BDR  
  jira: BDR-6125
  addresses: ""
  type: Bug fix
  impact: Highest
