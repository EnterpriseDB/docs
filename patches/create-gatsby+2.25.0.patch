diff --git a/node_modules/create-gatsby/lib/index.js b/node_modules/create-gatsby/lib/index.js
index aaa9d66..e5ca12e 100644
--- a/node_modules/create-gatsby/lib/index.js
+++ b/node_modules/create-gatsby/lib/index.js
@@ -1,4 +1,4 @@
-var e=require("assert"),a=require("events"),p=require("readline"),t=require("child_process"),i=require("path"),d=require("fs"),s=require("os"),r=require("buffer"),n=require("stream"),l=require("util"),o=require("constants"),m=require("crypto"),u=require("tty"),c=require("http"),h=require("url"),f=require("punycode"),v=require("https"),w=require("zlib");function g(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var y=/*#__PURE__*/g(e),b=/*#__PURE__*/g(a),S=/*#__PURE__*/g(p),E=/*#__PURE__*/g(t),N=/*#__PURE__*/g(i),_=/*#__PURE__*/g(d),T=/*#__PURE__*/g(s),D=/*#__PURE__*/g(r),A=/*#__PURE__*/g(n),V=/*#__PURE__*/g(l),C=/*#__PURE__*/g(o),O=/*#__PURE__*/g(m),I=/*#__PURE__*/g(u),x=/*#__PURE__*/g(c),R=/*#__PURE__*/g(h),P=/*#__PURE__*/g(f),k=/*#__PURE__*/g(v),L=/*#__PURE__*/g(w),j="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function B(e){var a={exports:{}};return e(a,a.exports),a.exports}var F=B(function(e){const a="Hyper"===process.env.TERM_PROGRAM,p="win32"===process.platform,t="linux"===process.platform,i={ballotDisabled:"‚òí",ballotOff:"‚òê",ballotOn:"‚òë",bullet:"‚Ä¢",bulletWhite:"‚ó¶",fullBlock:"‚ñà",heart:"‚ù§",identicalTo:"‚â°",line:"‚îÄ",mark:"‚Äª",middot:"¬∑",minus:"Ôºç",multiplication:"√ó",obelus:"√∑",pencilDownRight:"‚úé",pencilRight:"‚úè",pencilUpRight:"‚úê",percent:"%",pilcrow2:"‚ù°",pilcrow:"¬∂",plusMinus:"¬±",section:"¬ß",starsOff:"‚òÜ",starsOn:"‚òÖ",upDownArrow:"‚Üï"},d=Object.assign({},i,{check:"‚àö",cross:"√ó",ellipsisLarge:"...",ellipsis:"...",info:"i",question:"?",questionSmall:"?",pointer:">",pointerSmall:"¬ª",radioOff:"( )",radioOn:"(*)",warning:"‚Äº"}),s=Object.assign({},i,{ballotCross:"‚úò",check:"‚úî",cross:"‚úñ",ellipsisLarge:"‚ãØ",ellipsis:"‚Ä¶",info:"‚Ñπ",question:"?",questionFull:"Ôºü",questionSmall:"Ôπñ",pointer:t?"‚ñ∏":"‚ùØ",pointerSmall:t?"‚Ä£":"‚Ä∫",radioOff:"‚óØ",radioOn:"‚óâ",warning:"‚ö†"});e.exports=p&&!a?d:s,Reflect.defineProperty(e.exports,"common",{enumerable:!1,value:i}),Reflect.defineProperty(e.exports,"windows",{enumerable:!1,value:d}),Reflect.defineProperty(e.exports,"other",{enumerable:!1,value:s})});const $=/[\u001b\u009b][[\]#;?()]*(?:(?:(?:[^\W_]*;?[^\W_]*)\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g,M=()=>{const e={enabled:!0,visible:!0,styles:{},keys:{}};"FORCE_COLOR"in process.env&&(e.enabled="0"!==process.env.FORCE_COLOR);const a=(e,a,p)=>"function"==typeof e?e(a):e.wrap(a,p),p=(p,t)=>{if(""===p||null==p)return"";if(!1===e.enabled)return p;if(!1===e.visible)return"";let i=""+p,d=i.includes("\n"),s=t.length;for(s>0&&t.includes("unstyle")&&(t=[...new Set(["unstyle",...t])].reverse());s-- >0;)i=a(e.styles[t[s]],i,d);return i},t=(a,t,i)=>{e.styles[a]=(e=>{let a=e.open=`[${e.codes[0]}m`,p=e.close=`[${e.codes[1]}m`,t=e.regex=new RegExp(`\\u001b\\[${e.codes[1]}m`,"g");return e.wrap=(e,i)=>{e.includes(p)&&(e=e.replace(t,p+a));let d=a+e+p;return i?d.replace(/\r*\n/g,`${p}$&${a}`):d},e})({name:a,codes:t}),(e.keys[i]||(e.keys[i]=[])).push(a),Reflect.defineProperty(e,a,{configurable:!0,enumerable:!0,set(p){e.alias(a,p)},get(){let t=e=>p(e,t.stack);return Reflect.setPrototypeOf(t,e),t.stack=this.stack?this.stack.concat(a):[a],t}})};return t("reset",[0,0],"modifier"),t("bold",[1,22],"modifier"),t("dim",[2,22],"modifier"),t("italic",[3,23],"modifier"),t("underline",[4,24],"modifier"),t("inverse",[7,27],"modifier"),t("hidden",[8,28],"modifier"),t("strikethrough",[9,29],"modifier"),t("black",[30,39],"color"),t("red",[31,39],"color"),t("green",[32,39],"color"),t("yellow",[33,39],"color"),t("blue",[34,39],"color"),t("magenta",[35,39],"color"),t("cyan",[36,39],"color"),t("white",[37,39],"color"),t("gray",[90,39],"color"),t("grey",[90,39],"color"),t("bgBlack",[40,49],"bg"),t("bgRed",[41,49],"bg"),t("bgGreen",[42,49],"bg"),t("bgYellow",[43,49],"bg"),t("bgBlue",[44,49],"bg"),t("bgMagenta",[45,49],"bg"),t("bgCyan",[46,49],"bg"),t("bgWhite",[47,49],"bg"),t("blackBright",[90,39],"bright"),t("redBright",[91,39],"bright"),t("greenBright",[92,39],"bright"),t("yellowBright",[93,39],"bright"),t("blueBright",[94,39],"bright"),t("magentaBright",[95,39],"bright"),t("cyanBright",[96,39],"bright"),t("whiteBright",[97,39],"bright"),t("bgBlackBright",[100,49],"bgBright"),t("bgRedBright",[101,49],"bgBright"),t("bgGreenBright",[102,49],"bgBright"),t("bgYellowBright",[103,49],"bgBright"),t("bgBlueBright",[104,49],"bgBright"),t("bgMagentaBright",[105,49],"bgBright"),t("bgCyanBright",[106,49],"bgBright"),t("bgWhiteBright",[107,49],"bgBright"),e.ansiRegex=$,e.hasColor=e.hasAnsi=a=>(e.ansiRegex.lastIndex=0,"string"==typeof a&&""!==a&&e.ansiRegex.test(a)),e.alias=(a,t)=>{let i="string"==typeof t?e[t]:t;if("function"!=typeof i)throw new TypeError("Expected alias to be the name of an existing color (string) or a function");i.stack||(Reflect.defineProperty(i,"name",{value:a}),e.styles[a]=i,i.stack=[a]),Reflect.defineProperty(e,a,{configurable:!0,enumerable:!0,set(p){e.alias(a,p)},get(){let a=e=>p(e,a.stack);return Reflect.setPrototypeOf(a,e),a.stack=this.stack?this.stack.concat(i.stack):i.stack,a}})},e.theme=a=>{if(null===(p=a)||"object"!=typeof p||Array.isArray(p))throw new TypeError("Expected theme to be an object");var p;for(let p of Object.keys(a))e.alias(p,a[p]);return e},e.alias("unstyle",a=>"string"==typeof a&&""!==a?(e.ansiRegex.lastIndex=0,a.replace(e.ansiRegex,"")):""),e.alias("noop",e=>e),e.none=e.clear=e.noop,e.stripColor=e.unstyle,e.symbols=F,e.define=t,e};var U=M();U.create=M;var G=B(function(e,a){const p=Object.prototype.toString;let t=!1,i=[];const d={yellow:"blue",cyan:"red",green:"magenta",black:"white",blue:"yellow",red:"cyan",magenta:"green",white:"black"};a.longest=(e,a)=>e.reduce((e,p)=>Math.max(e,a?p[a].length:p.length),0),a.hasColor=e=>!!e&&U.hasColor(e);const s=a.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e);a.nativeType=e=>p.call(e).slice(8,-1).toLowerCase().replace(/\s/g,""),a.isAsyncFn=e=>"asyncfunction"===a.nativeType(e),a.isPrimitive=e=>null!=e&&"object"!=typeof e&&"function"!=typeof e,a.resolve=(e,a,...p)=>"function"==typeof a?a.call(e,...p):a,a.scrollDown=(e=[])=>[...e.slice(1),e[0]],a.scrollUp=(e=[])=>[e.pop(),...e],a.reorder=(e=[])=>{let a=e.slice();return a.sort((e,a)=>e.index>a.index?1:e.index<a.index?-1:0),a},a.swap=(e,a,p)=>{let t=e.length,i=p===t?0:p<0?t-1:p,d=e[a];e[a]=e[i],e[i]=d},a.width=(e,a=80)=>{let p=e&&e.columns?e.columns:a;return e&&"function"==typeof e.getWindowSize&&(p=e.getWindowSize()[0]),"win32"===process.platform?p-1:p},a.height=(e,a=20)=>{let p=e&&e.rows?e.rows:a;return e&&"function"==typeof e.getWindowSize&&(p=e.getWindowSize()[1]),p},a.wordWrap=(e,a={})=>{if(!e)return e;"number"==typeof a&&(a={width:a});let{indent:p="",newline:t="\n"+p,width:i=80}=a,d=(t+p).match(/[^\S\n]/g)||[];i-=d.length;let s=`.{1,${i}}([\\s\\u200B]+|$)|[^\\s\\u200B]+?([\\s\\u200B]+|$)`,r=e.trim(),n=new RegExp(s,"g"),l=r.match(n)||[];return l=l.map(e=>e.replace(/\n$/,"")),a.padEnd&&(l=l.map(e=>e.padEnd(i," "))),a.padStart&&(l=l.map(e=>e.padStart(i," "))),p+l.join(t)},a.unmute=e=>{let a=e.stack.find(e=>U.keys.color.includes(e));return a?U[a]:e.stack.find(e=>"bg"===e.slice(2))?U[a.slice(2)]:e=>e},a.pascal=e=>e?e[0].toUpperCase()+e.slice(1):"",a.inverse=e=>{if(!e||!e.stack)return e;let p=e.stack.find(e=>U.keys.color.includes(e));if(p){let t=U["bg"+a.pascal(p)];return t?t.black:e}let t=e.stack.find(e=>"bg"===e.slice(0,2));return t?U[t.slice(2).toLowerCase()]||e:U.none},a.complement=e=>{if(!e||!e.stack)return e;let p=e.stack.find(e=>U.keys.color.includes(e)),t=e.stack.find(e=>"bg"===e.slice(0,2));if(p&&!t)return U[d[p]||p];if(t){let p=t.slice(2).toLowerCase(),i=d[p];return i&&U["bg"+a.pascal(i)]||e}return U.none},a.meridiem=e=>{let a=e.getHours(),p=e.getMinutes(),t=a>=12?"pm":"am";return a%=12,(0===a?12:a)+":"+(p<10?"0"+p:p)+" "+t},a.set=(e={},p="",t)=>p.split(".").reduce((e,p,i,d)=>{let s=d.length-1>i?e[p]||{}:t;return!a.isObject(s)&&i<d.length-1&&(s={}),e[p]=s},e),a.get=(e={},a="",p)=>{let t=null==e[a]?a.split(".").reduce((e,a)=>e&&e[a],e):e[a];return null==t?p:t},a.mixin=(e,p)=>{if(!s(e))return p;if(!s(p))return e;for(let t of Object.keys(p)){let i=Object.getOwnPropertyDescriptor(p,t);if(i.hasOwnProperty("value"))if(e.hasOwnProperty(t)&&s(i.value)){let d=Object.getOwnPropertyDescriptor(e,t);s(d.value)?e[t]=a.merge({},e[t],p[t]):Reflect.defineProperty(e,t,i)}else Reflect.defineProperty(e,t,i);else Reflect.defineProperty(e,t,i)}return e},a.merge=(...e)=>{let p={};for(let t of e)a.mixin(p,t);return p},a.mixinEmitter=(e,p)=>{let t=p.constructor.prototype;for(let i of Object.keys(t)){let d=t[i];a.define(e,i,"function"==typeof d?d.bind(p):d)}},a.onExit=e=>{const a=(e,a)=>{t||(t=!0,i.forEach(e=>e()),!0===e&&process.exit(128+a))};0===i.length&&(process.once("SIGTERM",a.bind(null,!0,15)),process.once("SIGINT",a.bind(null,!0,2)),process.once("exit",a)),i.push(e)},a.define=(e,a,p)=>{Reflect.defineProperty(e,a,{value:p})},a.defineExport=(e,a,p)=>{let t;Reflect.defineProperty(e,a,{enumerable:!0,configurable:!0,set(e){t=e},get:()=>t?t():p()})}}),q={ctrl:{a:"first",b:"backward",c:"cancel",d:"deleteForward",e:"last",f:"forward",g:"reset",i:"tab",k:"cutForward",l:"reset",n:"newItem",m:"cancel",j:"submit",p:"search",r:"remove",s:"save",u:"undo",w:"cutLeft",x:"toggleCursor",v:"paste"},shift:{up:"shiftUp",down:"shiftDown",left:"shiftLeft",right:"shiftRight",tab:"prev"},fn:{up:"pageUp",down:"pageDown",left:"pageLeft",right:"pageRight",delete:"deleteForward"},option:{b:"backward",f:"forward",d:"cutRight",left:"cutLeft",up:"altUp",down:"altDown"},keys:{pageup:"pageUp",pagedown:"pageDown",home:"home",end:"end",cancel:"cancel",delete:"deleteForward",backspace:"delete",down:"down",enter:"submit",escape:"cancel",left:"left",space:"space",number:"number",return:"submit",right:"right",tab:"next",up:"up"}};const z=/^(?:\x1b)([a-zA-Z0-9])$/,H=/^(?:\x1b+)(O|N|\[|\[\[)(?:(\d+)(?:;(\d+))?([~^$])|(?:1;)?(\d+)?([a-zA-Z]))/,Y={OP:"f1",OQ:"f2",OR:"f3",OS:"f4","[11~":"f1","[12~":"f2","[13~":"f3","[14~":"f4","[[A":"f1","[[B":"f2","[[C":"f3","[[D":"f4","[[E":"f5","[15~":"f5","[17~":"f6","[18~":"f7","[19~":"f8","[20~":"f9","[21~":"f10","[23~":"f11","[24~":"f12","[A":"up","[B":"down","[C":"right","[D":"left","[E":"clear","[F":"end","[H":"home",OA:"up",OB:"down",OC:"right",OD:"left",OE:"clear",OF:"end",OH:"home","[1~":"home","[2~":"insert","[3~":"delete","[4~":"end","[5~":"pageup","[6~":"pagedown","[[5~":"pageup","[[6~":"pagedown","[7~":"home","[8~":"end","[a":"up","[b":"down","[c":"right","[d":"left","[e":"clear","[2$":"insert","[3$":"delete","[5$":"pageup","[6$":"pagedown","[7$":"home","[8$":"end",Oa:"up",Ob:"down",Oc:"right",Od:"left",Oe:"clear","[2^":"insert","[3^":"delete","[5^":"pageup","[6^":"pagedown","[7^":"home","[8^":"end","[Z":"tab"},W=(e="",a={})=>{let p,t={name:a.name,ctrl:!1,meta:!1,shift:!1,option:!1,sequence:e,raw:e,...a};if(Buffer.isBuffer(e)?e[0]>127&&void 0===e[1]?(e[0]-=128,e=""+String(e)):e=String(e):void 0!==e&&"string"!=typeof e?e=String(e):e||(e=t.sequence||""),t.sequence=t.sequence||e||t.name,"\r"===e)t.raw=void 0,t.name="return";else if("\n"===e)t.name="enter";else if("\t"===e)t.name="tab";else if("\b"===e||""===e||""===e||"\b"===e)t.name="backspace",t.meta=""===e.charAt(0);else if(""===e||""===e)t.name="escape",t.meta=2===e.length;else if(" "===e||" "===e)t.name="space",t.meta=2===e.length;else if(e<="")t.name=String.fromCharCode(e.charCodeAt(0)+"a".charCodeAt(0)-1),t.ctrl=!0;else if(1===e.length&&e>="0"&&e<="9")t.name="number";else if(1===e.length&&e>="a"&&e<="z")t.name=e;else if(1===e.length&&e>="A"&&e<="Z")t.name=e.toLowerCase(),t.shift=!0;else if(p=z.exec(e))t.meta=!0,t.shift=/^[A-Z]$/.test(p[1]);else if(p=H.exec(e)){let a=[...e];""===a[0]&&""===a[1]&&(t.option=!0);let i=[p[1],p[2],p[4],p[6]].filter(Boolean).join(""),d=(p[3]||p[5]||1)-1;t.ctrl=!!(4&d),t.meta=!!(10&d),t.shift=!!(1&d),t.code=i,t.name=Y[i],t.shift=function(e){return["[a","[b","[c","[d","[e","[2$","[3$","[5$","[6$","[7$","[8$","[Z"].includes(e)}(i)||t.shift,t.ctrl=function(e){return["Oa","Ob","Oc","Od","Oe","[2^","[3^","[5^","[6^","[7^","[8^"].includes(e)}(i)||t.ctrl}return t};W.listen=(e={},a)=>{let{stdin:p}=e;if(!p||p!==process.stdin&&!p.isTTY)throw new Error("Invalid stream passed");let t=S.default.createInterface({terminal:!0,input:p});S.default.emitKeypressEvents(p,t);let i=(e,p)=>a(e,W(e,p),t),d=p.isRaw;return p.isTTY&&p.setRawMode(!0),p.on("keypress",i),t.resume(),()=>{p.isTTY&&p.setRawMode(d),p.removeListener("keypress",i),t.pause(),t.close()}},W.action=(e,a,p)=>{let t={...q,...p};return a.ctrl?(a.action=t.ctrl[a.name],a):a.option&&t.option?(a.action=t.option[a.name],a):a.shift?(a.action=t.shift[a.name],a):(a.action=t.keys[a.name],a)};var X=W;function K(e,a,p={}){let t=e.timers[a]={name:a,start:Date.now(),ms:0,tick:0},i=p.interval||120;t.frames=p.frames||[],t.loading=!0;let d=setInterval(()=>{t.ms=Date.now()-t.start,t.tick++,e.render()},i);return t.stop=()=>{t.loading=!1,clearInterval(d)},Reflect.defineProperty(t,"interval",{value:d}),e.once("close",()=>t.stop()),t.stop}const{define:J,width:Z}=G,Q={default:U.noop,noop:U.noop,set inverse(e){this._inverse=e},get inverse(){return this._inverse||G.inverse(this.primary)},set complement(e){this._complement=e},get complement(){return this._complement||G.complement(this.primary)},primary:U.cyan,success:U.green,danger:U.magenta,strong:U.bold,warning:U.yellow,muted:U.dim,disabled:U.gray,dark:U.dim.gray,underline:U.underline,set info(e){this._info=e},get info(){return this._info||this.primary},set em(e){this._em=e},get em(){return this._em||this.primary.underline},set heading(e){this._heading=e},get heading(){return this._heading||this.muted.underline},set pending(e){this._pending=e},get pending(){return this._pending||this.primary},set submitted(e){this._submitted=e},get submitted(){return this._submitted||this.success},set cancelled(e){this._cancelled=e},get cancelled(){return this._cancelled||this.danger},set typing(e){this._typing=e},get typing(){return this._typing||this.dim},set placeholder(e){this._placeholder=e},get placeholder(){return this._placeholder||this.primary.dim},set highlight(e){this._highlight=e},get highlight(){return this._highlight||this.inverse},merge:(e={})=>{e.styles&&"boolean"==typeof e.styles.enabled&&(U.enabled=e.styles.enabled),e.styles&&"boolean"==typeof e.styles.visible&&(U.visible=e.styles.visible);let a=G.merge({},Q,e.styles);delete a.merge;for(let e of Object.keys(U))a.hasOwnProperty(e)||Reflect.defineProperty(a,e,{get:()=>U[e]});for(let e of Object.keys(U.styles))a.hasOwnProperty(e)||Reflect.defineProperty(a,e,{get:()=>U[e]});return a}};var ee=Q;const ae="win32"===process.platform,pe={...U.symbols,upDownDoubleArrow:"‚áï",upDownDoubleArrow2:"‚¨ç",upDownArrow:"‚Üï",asterisk:"*",asterism:"‚ÅÇ",bulletWhite:"‚ó¶",electricArrow:"‚åÅ",ellipsisLarge:"‚ãØ",ellipsisSmall:"‚Ä¶",fullBlock:"‚ñà",identicalTo:"‚â°",indicator:U.symbols.check,leftAngle:"‚Äπ",mark:"‚Äª",minus:"‚àí",multiplication:"√ó",obelus:"√∑",percent:"%",pilcrow:"¬∂",pilcrow2:"‚ù°",pencilUpRight:"‚úê",pencilDownRight:"‚úé",pencilRight:"‚úè",plus:"+",plusMinus:"¬±",pointRight:"‚òû",rightAngle:"‚Ä∫",section:"¬ß",hexagon:{off:"‚¨°",on:"‚¨¢",disabled:"‚¨¢"},ballot:{on:"‚òë",off:"‚òê",disabled:"‚òí"},stars:{on:"‚òÖ",off:"‚òÜ",disabled:"‚òÜ"},folder:{on:"‚ñº",off:"‚ñ∂",disabled:"‚ñ∂"},prefix:{pending:U.symbols.question,submitted:U.symbols.check,cancelled:U.symbols.cross},separator:{pending:U.symbols.pointerSmall,submitted:U.symbols.middot,cancelled:U.symbols.middot},radio:{off:ae?"( )":"‚óØ",on:ae?"(*)":"‚óâ",disabled:ae?"(|)":"‚íæ"},numbers:["‚ì™","‚ë†","‚ë°","‚ë¢","‚ë£","‚ë§","‚ë•","‚ë¶","‚ëß","‚ë®","‚ë©","‚ë™","‚ë´","‚ë¨","‚ë≠","‚ëÆ","‚ëØ","‚ë∞","‚ë±","‚ë≤","‚ë≥","„âë","„âí","„âì","„âî","„âï","„âñ","„âó","„âò","„âô","„âö","„âõ","„âú","„âù","„âû","„âü","„ä±","„ä≤","„ä≥","„ä¥","„äµ","„ä∂","„ä∑","„ä∏","„äπ","„ä∫","„äª","„äº","„äΩ","„äæ","„äø"]};pe.merge=e=>{let a=G.merge({},U.symbols,pe,e.symbols);return delete a.merge,a};var te=pe,ie=B(function(e,a){const p="Apple_Terminal"===process.env.TERM_PROGRAM,t=e.exports=a,i="[";let d=!1;const s=t.code={bell:"",beep:"",beginning:"[G",down:"[J",esc:i,getPosition:"[6n",hide:"[?25l",line:"[2K",lineEnd:"[K",lineStart:"[1K",restorePosition:i+(p?"8":"u"),savePosition:i+(p?"7":"s"),screen:"[2J",show:"[?25h",up:"[1J"},r=t.cursor={get hidden(){return d},hide:()=>(d=!0,s.hide),show:()=>(d=!1,s.show),forward:(e=1)=>`[${e}C`,backward:(e=1)=>`[${e}D`,nextLine:(e=1)=>"[E".repeat(e),prevLine:(e=1)=>"[F".repeat(e),up:(e=1)=>e?`[${e}A`:"",down:(e=1)=>e?`[${e}B`:"",right:(e=1)=>e?`[${e}C`:"",left:(e=1)=>e?`[${e}D`:"",to:(e,a)=>a?`[${a+1};${e+1}H`:`[${e+1}G`,move(e=0,a=0){let p="";return p+=e<0?r.left(-e):e>0?r.right(e):"",p+=a<0?r.up(-a):a>0?r.down(a):"",p},restore(e={}){let{after:a,cursor:p,initial:i,input:d,prompt:s,size:r,value:n}=e;if(i=G.isPrimitive(i)?String(i):"",d=G.isPrimitive(d)?String(d):"",n=G.isPrimitive(n)?String(n):"",r){let e=t.cursor.up(r)+t.cursor.to(s.length),a=d.length-p;return a>0&&(e+=t.cursor.left(a)),e}if(n||a){let e=!d&&i?-i.length:-d.length+p;return a&&(e-=a.length),""===d&&i&&!s.includes(i)&&(e+=i.length),t.cursor.move(e)}}},n=t.erase={screen:s.screen,up:s.up,down:s.down,line:s.line,lineEnd:s.lineEnd,lineStart:s.lineStart,lines(e){let a="";for(let p=0;p<e;p++)a+=t.erase.line+(p<e-1?t.cursor.up(1):"");return e&&(a+=t.code.beginning),a}};t.clear=(e="",a=process.stdout.columns)=>{if(!a)return n.line+r.to(0);let p=e.split(/\r?\n/),t=0;for(let e of p)t+=1+Math.floor(Math.max([...U.unstyle(e)].length-1,0)/a);return(n.line+r.prevLine()).repeat(t-1)+n.line+r.to(0)}});class de extends b.default{constructor(e={}){super(),this.name=e.name,this.type=e.type,this.options=e,(e=>{e.options=G.merge({},e.options.theme,e.options),e.symbols=te.merge(e.options),e.styles=ee.merge(e.options)})(this),(e=>{e.timers=e.timers||{};let a=e.options.timers;if(a)for(let p of Object.keys(a)){let t=a[p];"number"==typeof t&&(t={interval:t}),K(e,p,t)}})(this),this.state=new class{constructor(e){let a=e.options;J(this,"_prompt",e),this.type=e.type,this.name=e.name,this.message="",this.header="",this.footer="",this.error="",this.hint="",this.input="",this.cursor=0,this.index=0,this.lines=0,this.tick=0,this.prompt="",this.buffer="",this.width=Z(a.stdout||process.stdout),Object.assign(this,a),this.name=this.name||this.message,this.message=this.message||this.name,this.symbols=e.symbols,this.styles=e.styles,this.required=new Set,this.cancelled=!1,this.submitted=!1}clone(){let e={...this};return e.status=this.status,e.buffer=Buffer.from(e.buffer),delete e.clone,e}set color(e){this._color=e}get color(){let e=this.prompt.styles;if(this.cancelled)return e.cancelled;if(this.submitted)return e.submitted;let a=this._color||e[this.status];return"function"==typeof a?a:e.pending}set loading(e){this._loading=e}get loading(){return"boolean"==typeof this._loading?this._loading:!!this.loadingChoices&&"choices"}get status(){return this.cancelled?"cancelled":this.submitted?"submitted":"pending"}}(this),this.initial=[e.initial,e.default].find(e=>null!=e),this.stdout=e.stdout||process.stdout,this.stdin=e.stdin||process.stdin,this.scale=e.scale||1,this.term=this.options.term||process.env.TERM_PROGRAM,this.margin=function(e){"number"==typeof e&&(e=[e,e,e,e]);let a=[].concat(e||[]),p=e=>e%2==0?"\n":" ",t=[];for(let e=0;e<4;e++){let i=p(e);t.push(a[e]?i.repeat(a[e]):"")}return t}(this.options.margin),this.setMaxListeners(0),function(e){let a=a=>void 0===e[a]||"function"==typeof e[a],p=["actions","choices","initial","margin","roles","styles","symbols","theme","timers","value"],t=["body","footer","error","header","hint","indicator","message","prefix","separator","skip"];for(let i of Object.keys(e.options)){if(p.includes(i))continue;if(/^on[A-Z]/.test(i))continue;let d=e.options[i];"function"==typeof d&&a(i)?t.includes(i)||(e[i]=d.bind(e)):"function"!=typeof e[i]&&(e[i]=d)}}(this)}async keypress(e,a={}){this.keypressed=!0;let p=X.action(e,X(e,a),this.options.actions);this.state.keypress=p,this.emit("keypress",e,p),this.emit("state",this.state.clone());let t=this.options[p.action]||this[p.action]||this.dispatch;if("function"==typeof t)return await t.call(this,e,p);this.alert()}alert(){delete this.state.alert,!1===this.options.show?this.emit("alert"):this.stdout.write(ie.code.beep)}cursorHide(){this.stdout.write(ie.cursor.hide()),G.onExit(()=>this.cursorShow())}cursorShow(){this.stdout.write(ie.cursor.show())}write(e){e&&(this.stdout&&!1!==this.state.show&&this.stdout.write(e),this.state.buffer+=e)}clear(e=0){let a=this.state.buffer;this.state.buffer="",(a||e)&&!1!==this.options.show&&this.stdout.write(ie.cursor.down(e)+ie.clear(a,this.width))}restore(){if(this.state.closed||!1===this.options.show)return;let{prompt:e,after:a,rest:p}=this.sections(),{cursor:t,initial:i="",input:d="",value:s=""}=this,r=this.state.size=p.length,n=ie.cursor.restore({after:a,cursor:t,initial:i,input:d,prompt:e,size:r,value:s});n&&this.stdout.write(n)}sections(){let{buffer:e,input:a,prompt:p}=this.state;p=U.unstyle(p);let t=U.unstyle(e),i=t.indexOf(p),d=t.slice(0,i),s=t.slice(i).split("\n"),r=s[0],n=s[s.length-1],l=(p+(a?" "+a:"")).length,o=l<r.length?r.slice(l+1):"";return{header:d,prompt:r,after:o,rest:s.slice(1),last:n}}async submit(){this.state.submitted=!0,this.state.validating=!0,this.options.onSubmit&&await this.options.onSubmit.call(this,this.name,this.value,this);let e=this.state.error||await this.validate(this.value,this.state);if(!0!==e){let a="\n"+this.symbols.pointer+" ";return a+="string"==typeof e?e.trim():"Invalid input",this.state.error="\n"+this.styles.danger(a),this.state.submitted=!1,await this.render(),await this.alert(),this.state.validating=!1,void(this.state.error=void 0)}this.state.validating=!1,await this.render(),await this.close(),this.value=await this.result(this.value),this.emit("submit",this.value)}async cancel(e){this.state.cancelled=this.state.submitted=!0,await this.render(),await this.close(),"function"==typeof this.options.onCancel&&await this.options.onCancel.call(this,this.name,this.value,this),this.emit("cancel",await this.error(e))}async close(){this.state.closed=!0;try{let e=this.sections(),a=Math.ceil(e.prompt.length/this.width);e.rest&&this.write(ie.cursor.down(e.rest.length)),this.write("\n".repeat(a))}catch(e){}this.emit("close")}start(){this.stop||!1===this.options.show||(this.stop=X.listen(this,this.keypress.bind(this)),this.once("close",this.stop))}async skip(){return this.skipped=!0===this.options.skip,"function"==typeof this.options.skip&&(this.skipped=await this.options.skip.call(this,this.name,this.value)),this.skipped}async initialize(){let{format:e,options:a,result:p}=this;if(this.format=()=>e.call(this,this.value),this.result=()=>p.call(this,this.value),"function"==typeof a.initial&&(this.initial=await a.initial.call(this,this)),"function"==typeof a.onRun&&await a.onRun.call(this,this),"function"==typeof a.onSubmit){let e=a.onSubmit.bind(this),p=this.submit.bind(this);delete this.options.onSubmit,this.submit=async()=>(await e(this.name,this.value,this),p())}await this.start(),await this.render()}render(){throw new Error("expected prompt to have a custom render method")}run(){return new Promise(async(e,a)=>{if(this.once("submit",e),this.once("cancel",a),await this.skip())return this.render=()=>{},this.submit();await this.initialize(),this.emit("run")})}async element(e,a,p){let{options:t,state:i,symbols:d,timers:s}=this;i.timer=s&&s[e];let r=t[e]||i[e]||d[e],n=a&&null!=a[e]?a[e]:await r;if(""===n)return n;let l=await this.resolve(n,i,a,p);return!l&&a&&a[e]?this.resolve(r,i,a,p):l}async prefix(){let e=await this.element("prefix")||this.symbols,a=this.state;return a.timer=this.timers&&this.timers.prefix,G.isObject(e)&&(e=e[a.status]||e.pending),G.hasColor(e)?e:(this.styles[a.status]||this.styles.pending)(e)}async message(){let e=await this.element("message");return G.hasColor(e)?e:this.styles.strong(e)}async separator(){let e=await this.element("separator")||this.symbols,a=this.state;a.timer=this.timers&&this.timers.separator;let p=e[a.status]||e.pending||a.separator,t=await this.resolve(p,a);return G.isObject(t)&&(t=t[a.status]||t.pending),G.hasColor(t)?t:this.styles.muted(t)}async pointer(e,a){let p=await this.element("pointer",e,a);if("string"==typeof p&&G.hasColor(p))return p;if(p){let e=this.styles,t=this.index===a,i=t?e.primary:e=>e,d=await this.resolve(p[t?"on":"off"]||p,this.state),s=G.hasColor(d)?d:i(d);return t?s:" ".repeat(d.length)}}async indicator(e,a){let p=await this.element("indicator",e,a);if("string"==typeof p&&G.hasColor(p))return p;if(p){let a=this.styles,t=!0===e.enabled,i=t?a.success:a.dark,d=p[t?"on":"off"]||p;return G.hasColor(d)?d:i(d)}return""}body(){return null}footer(){if("pending"===this.state.status)return this.element("footer")}header(){if("pending"===this.state.status)return this.element("header")}async hint(){if("pending"===this.state.status&&!this.isValue(this.state.input)){let e=await this.element("hint");return G.hasColor(e)?e:this.styles.muted(e)}}error(e){return this.state.submitted?"":e||this.state.error}format(e){return e}result(e){return e}validate(e){return!0!==this.options.required||this.isValue(e)}isValue(e){return null!=e&&""!==e}resolve(e,...a){return G.resolve(this,e,...a)}get base(){return de.prototype}get style(){return this.styles[this.state.status]}get height(){return this.options.rows||G.height(this.stdout,25)}get width(){return this.options.columns||G.width(this.stdout,80)}get size(){return{width:this.width,height:this.height}}set cursor(e){this.state.cursor=e}get cursor(){return this.state.cursor}set input(e){this.state.input=e}get input(){return this.state.input}set value(e){this.state.value=e}get value(){let{input:e,value:a}=this.state,p=[a,e].find(this.isValue.bind(this));return this.isValue(p)?p:this.initial}static get prompt(){return e=>new this(e).run()}}var se=de;const re={default:(e,a)=>a,checkbox(e,a){throw new Error("checkbox role is not implemented yet")},editable(e,a){throw new Error("editable role is not implemented yet")},expandable(e,a){throw new Error("expandable role is not implemented yet")},heading:(e,a)=>(a.disabled="",a.indicator=[a.indicator," "].find(e=>null!=e),a.message=a.message||"",a),input(e,a){throw new Error("input role is not implemented yet")},option:(e,a)=>re.default(e,a),radio(e,a){throw new Error("radio role is not implemented yet")},separator:(e,a)=>(a.disabled="",a.indicator=[a.indicator," "].find(e=>null!=e),a.message=a.message||e.symbols.line.repeat(5),a),spacer:(e,a)=>a},{reorder:ne,scrollUp:le,scrollDown:oe,isObject:me,swap:ue}=G;function ce(e,a){if(a instanceof Promise)return a;if("function"==typeof a){if(G.isAsyncFn(a))return a;a=a.call(e,e)}for(let p of a){if(Array.isArray(p.choices)){let a=p.choices.filter(a=>!e.isDisabled(a));p.enabled=a.every(e=>!0===e.enabled)}!0===e.isDisabled(p)&&delete p.enabled}return a}var he=class extends se{constructor(e){super(e),this.cursorHide(),this.maxSelected=e.maxSelected||Infinity,this.multiple=e.multiple||!1,this.initial=e.initial||0,this.delay=e.delay||0,this.longest=0,this.num=""}async initialize(){"function"==typeof this.options.initial&&(this.initial=await this.options.initial.call(this)),await this.reset(!0),await super.initialize()}async reset(){let{choices:e,initial:a,autofocus:p,suggest:t}=this.options;if(this.state._choices=[],this.state.choices=[],this.choices=await Promise.all(await this.toChoices(e)),this.choices.forEach(e=>e.enabled=!1),"function"!=typeof t&&0===this.selectable.length)throw new Error("At least one choice must be selectable");me(a)&&(a=Object.keys(a)),Array.isArray(a)?(null!=p&&(this.index=this.findIndex(p)),a.forEach(e=>this.enable(this.find(e))),await this.render()):(null!=p&&(a=p),"string"==typeof a&&(a=this.findIndex(a)),"number"==typeof a&&a>-1&&(this.index=Math.max(0,Math.min(a,this.choices.length)),this.enable(this.find(this.index)))),this.isDisabled(this.focused)&&await this.down()}async toChoices(e,a){this.state.loadingChoices=!0;let p=[],t=0,i=async(e,a)=>{"function"==typeof e&&(e=await e.call(this)),e instanceof Promise&&(e=await e);for(let d=0;d<e.length;d++){let s=e[d]=await this.toChoice(e[d],t++,a);p.push(s),s.choices&&await i(s.choices,s)}return p};return i(e,a).then(e=>(this.state.loadingChoices=!1,e))}async toChoice(e,a,p){if("function"==typeof e&&(e=await e.call(this,this)),e instanceof Promise&&(e=await e),"string"==typeof e&&(e={name:e}),e.normalized)return e;e.normalized=!0;let t=e.value,i=((e,a={})=>{let p=G.merge({},re,a.roles);return p[e]||p.default})(e.role,this.options);if("string"!=typeof(e=i(this,e)).disabled||e.hint||(e.hint=e.disabled,e.disabled=!0),!0===e.disabled&&null==e.hint&&(e.hint="(disabled)"),null!=e.index)return e;e.name=e.name||e.key||e.title||e.value||e.message,e.message=e.message||e.name||"",e.value=[e.value,e.name].find(this.isValue.bind(this)),e.input="",e.index=a,e.cursor=0,G.define(e,"parent",p),e.level=p?p.level+1:1,null==e.indent&&(e.indent=p?p.indent+"  ":e.indent||""),e.path=p?p.path+"."+e.name:e.name,e.enabled=!(!this.multiple||this.isDisabled(e)||!e.enabled&&!this.isSelected(e)),this.isDisabled(e)||(this.longest=Math.max(this.longest,U.unstyle(e.message).length));let d={...e};return e.reset=(a=d.input,p=d.value)=>{for(let a of Object.keys(d))e[a]=d[a];e.input=a,e.value=p},null==t&&"function"==typeof e.initial&&(e.input=await e.initial.call(this,this.state,e,a)),e}async onChoice(e,a){this.emit("choice",e,a,this),"function"==typeof e.onChoice&&await e.onChoice.call(this,this.state,e,a)}async addChoice(e,a,p){let t=await this.toChoice(e,a,p);return this.choices.push(t),this.index=this.choices.length-1,this.limit=this.choices.length,t}async newItem(e,a,p){let t={name:"New choice name?",editable:!0,newChoice:!0,...e},i=await this.addChoice(t,a,p);return i.updateChoice=()=>{delete i.newChoice,i.name=i.message=i.input,i.input="",i.cursor=0},this.render()}indent(e){return null==e.indent?e.level>1?"  ".repeat(e.level-1):"":e.indent}dispatch(e,a){if(this.multiple&&this[a.name])return this[a.name]();this.alert()}focus(e,a){return"boolean"!=typeof a&&(a=e.enabled),a&&!e.enabled&&this.selected.length>=this.maxSelected?this.alert():(this.index=e.index,e.enabled=a&&!this.isDisabled(e),e)}space(){return this.multiple?(this.toggle(this.focused),this.render()):this.alert()}a(){if(this.maxSelected<this.choices.length)return this.alert();let e=this.selectable.every(e=>e.enabled);return this.choices.forEach(a=>a.enabled=!e),this.render()}i(){return this.choices.length-this.selected.length>this.maxSelected?this.alert():(this.choices.forEach(e=>e.enabled=!e.enabled),this.render())}g(e=this.focused){return this.choices.some(e=>!!e.parent)?(this.toggle(e.parent&&!e.choices?e.parent:e),this.render()):this.a()}toggle(e,a){if(!e.enabled&&this.selected.length>=this.maxSelected)return this.alert();"boolean"!=typeof a&&(a=!e.enabled),e.enabled=a,e.choices&&e.choices.forEach(e=>this.toggle(e,a));let p=e.parent;for(;p;){let e=p.choices.filter(e=>this.isDisabled(e));p.enabled=e.every(e=>!0===e.enabled),p=p.parent}return ce(this,this.choices),this.emit("toggle",e,this),e}enable(e){return this.selected.length>=this.maxSelected?this.alert():(e.enabled=!this.isDisabled(e),e.choices&&e.choices.forEach(this.enable.bind(this)),e)}disable(e){return e.enabled=!1,e.choices&&e.choices.forEach(this.disable.bind(this)),e}number(e){this.num+=e;let a=e=>{let a=Number(e);if(a>this.choices.length-1)return this.alert();let p=this.focused,t=this.choices.find(e=>a===e.index);if(!t.enabled&&this.selected.length>=this.maxSelected)return this.alert();if(-1===this.visible.indexOf(t)){let e=ne(this.choices),a=e.indexOf(t);if(p.index>a){let p=e.slice(a,a+this.limit),t=e.filter(e=>!p.includes(e));this.choices=p.concat(t)}else{let p=a-this.limit+1;this.choices=e.slice(p).concat(e.slice(0,p))}}return this.index=this.choices.indexOf(t),this.toggle(this.focused),this.render()};return clearTimeout(this.numberTimeout),new Promise(e=>{let p=this.choices.length,t=this.num,i=(p=!1,i)=>{clearTimeout(this.numberTimeout),p&&(i=a(t)),this.num="",e(i)};return"0"===t||1===t.length&&Number(t+"0")>p?i(!0):Number(t)>p?i(!1,this.alert()):void(this.numberTimeout=setTimeout(()=>i(!0),this.delay))})}home(){return this.choices=ne(this.choices),this.index=0,this.render()}end(){let e=this.choices.length-this.limit,a=ne(this.choices);return this.choices=a.slice(e).concat(a.slice(0,e)),this.index=this.limit-1,this.render()}first(){return this.index=0,this.render()}last(){return this.index=this.visible.length-1,this.render()}prev(){return this.visible.length<=1?this.alert():this.up()}next(){return this.visible.length<=1?this.alert():this.down()}right(){return this.cursor>=this.input.length?this.alert():(this.cursor++,this.render())}left(){return this.cursor<=0?this.alert():(this.cursor--,this.render())}up(){let e=this.choices.length,a=this.visible.length,p=this.index;return!1===this.options.scroll&&0===p?this.alert():e>a&&0===p?this.scrollUp():(this.index=(p-1%e+e)%e,this.isDisabled()?this.up():this.render())}down(){let e=this.choices.length,a=this.visible.length,p=this.index;return!1===this.options.scroll&&p===a-1?this.alert():e>a&&p===a-1?this.scrollDown():(this.index=(p+1)%e,this.isDisabled()?this.down():this.render())}scrollUp(e=0){return this.choices=le(this.choices),this.index=e,this.isDisabled()?this.up():this.render()}scrollDown(e=this.visible.length-1){return this.choices=oe(this.choices),this.index=e,this.isDisabled()?this.down():this.render()}async shiftUp(){return!0===this.options.sort?(this.sorting=!0,this.swap(this.index-1),await this.up(),void(this.sorting=!1)):this.scrollUp(this.index)}async shiftDown(){return!0===this.options.sort?(this.sorting=!0,this.swap(this.index+1),await this.down(),void(this.sorting=!1)):this.scrollDown(this.index)}pageUp(){return this.visible.length<=1?this.alert():(this.limit=Math.max(this.limit-1,0),this.index=Math.min(this.limit-1,this.index),this._limit=this.limit,this.isDisabled()?this.up():this.render())}pageDown(){return this.visible.length>=this.choices.length?this.alert():(this.index=Math.max(0,this.index),this.limit=Math.min(this.limit+1,this.choices.length),this._limit=this.limit,this.isDisabled()?this.down():this.render())}swap(e){ue(this.choices,this.index,e)}isDisabled(e=this.focused){return!(!e||!["disabled","collapsed","hidden","completing","readonly"].some(a=>!0===e[a]))||e&&"heading"===e.role}isEnabled(e=this.focused){if(Array.isArray(e))return e.every(e=>this.isEnabled(e));if(e.choices){let a=e.choices.filter(e=>!this.isDisabled(e));return e.enabled&&a.every(e=>this.isEnabled(e))}return e.enabled&&!this.isDisabled(e)}isChoice(e,a){return e.name===a||e.index===Number(a)}isSelected(e){return Array.isArray(this.initial)?this.initial.some(a=>this.isChoice(e,a)):this.isChoice(e,this.initial)}map(e=[],a="value"){return[].concat(e||[]).reduce((e,p)=>(e[p]=this.find(p,a),e),{})}filter(e,a){let p=(this.options.multiple?this.state._choices:this.choices).filter("function"==typeof e?e:(a,p)=>[a.name,p].includes(e));return a?p.map(e=>e[a]):p}find(e,a){if(me(e))return a?e[a]:e;let p=this.choices.find("function"==typeof e?e:(a,p)=>[a.name,p].includes(e));return p?a?p[a]:p:void 0}findIndex(e){return this.choices.indexOf(this.find(e))}async submit(){let e=this.focused;if(!e)return this.alert();if(e.newChoice)return e.input?(e.updateChoice(),this.render()):this.alert();if(this.choices.some(e=>e.newChoice))return this.alert();let{reorder:a,sort:p}=this.options,t=!0===this.multiple,i=this.selected;return void 0===i?this.alert():(Array.isArray(i)&&!1!==a&&!0!==p&&(i=G.reorder(i)),this.value=t?i.map(e=>e.name):i.name,super.submit())}set choices(e=[]){this.state._choices=this.state._choices||[],this.state.choices=e;for(let a of e)this.state._choices.some(e=>e.name===a.name)||this.state._choices.push(a);if(!this._initial&&this.options.initial){this._initial=!0;let e=this.initial;if("string"==typeof e||"number"==typeof e){let a=this.find(e);a&&(this.initial=a.index,this.focus(a,!0))}}}get choices(){return ce(this,this.state.choices||[])}set visible(e){this.state.visible=e}get visible(){return(this.state.visible||this.choices).slice(0,this.limit)}set limit(e){this.state.limit=e}get limit(){let{state:e,options:a,choices:p}=this;return Math.min(e.limit||this._limit||a.limit||p.length,this.height)}set value(e){super.value=e}get value(){return"string"!=typeof super.value&&super.value===this.initial?this.input:super.value}set index(e){this.state.index=e}get index(){return Math.max(0,this.state?this.state.index:0)}get enabled(){return this.filter(this.isEnabled.bind(this))}get focused(){let e=this.choices[this.index];return e&&this.state.submitted&&!0!==this.multiple&&(e.enabled=!0),e}get selectable(){return this.choices.filter(e=>!this.isDisabled(e))}get selected(){return this.multiple?this.enabled:this.focused}},fe=class extends he{constructor(e){super(e),this.emptyError=this.options.emptyError||"No items were selected"}async dispatch(e,a){if(this.multiple)return this[a.name]?await this[a.name](e,a):await super.dispatch(e,a);this.alert()}separator(){if(this.options.separator)return super.separator();let e=this.styles.muted(this.symbols.ellipsis);return this.state.submitted?super.separator():e}pointer(e,a){return!this.multiple||this.options.pointer?super.pointer(e,a):""}indicator(e,a){return this.multiple?super.indicator(e,a):""}choiceMessage(e,a){let p=this.resolve(e.message,this.state,e,a);return"heading"!==e.role||G.hasColor(p)||(p=this.styles.strong(p)),this.resolve(p,this.state,e,a)}choiceSeparator(){return":"}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t=await this.pointer(e,a),i=await this.indicator(e,a)+(e.pad||""),d=await this.resolve(e.hint,this.state,e,a);d&&!G.hasColor(d)&&(d=this.styles.muted(d));let s=this.indent(e),r=await this.choiceMessage(e,a),n=()=>[this.margin[3],s+t+i,r,this.margin[1],d].filter(Boolean).join(" ");return"heading"===e.role?n():e.disabled?(G.hasColor(r)||(r=this.styles.disabled(r)),n()):(p&&(r=this.styles.em(r)),n())}async renderChoices(){if("choices"===this.state.loading)return this.styles.warning("Loading choices");if(this.state.submitted)return"";let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e);a.length||a.push(this.styles.danger("No matching choices"));let p,t=this.margin[0]+a.join("\n");return this.options.choicesHeader&&(p=await this.resolve(this.options.choicesHeader,this.state)),[p,t].filter(Boolean).join("\n")}format(){return!this.state.submitted||this.state.cancelled?"":Array.isArray(this.selected)?this.selected.map(e=>this.styles.primary(e.name)).join(", "):this.styles.primary(this.selected.name)}async render(){let{submitted:e,size:a}=this.state,p="",t=await this.header(),i=await this.prefix(),d=await this.separator(),s=await this.message();!1!==this.options.promptLine&&(p=[i,s,d,""].join(" "),this.state.prompt=p);let r=await this.format(),n=await this.error()||await this.hint(),l=await this.renderChoices(),o=await this.footer();r&&(p+=r),n&&!p.includes(n)&&(p+=" "+n),e&&!r&&!l.trim()&&this.multiple&&null!=this.emptyError&&(p+=this.styles.danger(this.emptyError)),this.clear(a),this.write([t,p,l,o].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}},ve=class extends fe{constructor(e){super(e),this.cursorShow()}moveCursor(e){this.state.cursor+=e}dispatch(e){return this.append(e)}space(e){return this.options.multiple?super.space(e):this.append(e)}append(e){let{cursor:a,input:p}=this.state;return this.input=p.slice(0,a)+e+p.slice(a),this.moveCursor(1),this.complete()}delete(){let{cursor:e,input:a}=this.state;return a?(this.input=a.slice(0,e-1)+a.slice(e),this.moveCursor(-1),this.complete()):this.alert()}deleteForward(){let{cursor:e,input:a}=this.state;return void 0===a[e]?this.alert():(this.input=`${a}`.slice(0,e)+`${a}`.slice(e+1),this.complete())}number(e){return this.append(e)}async complete(){this.completing=!0,this.choices=await this.suggest(this.input,this.state._choices),this.state.limit=void 0,this.index=Math.min(Math.max(this.visible.length-1,0),this.index),await this.render(),this.completing=!1}suggest(e=this.input,a=this.state._choices){if("function"==typeof this.options.suggest)return this.options.suggest.call(this,e,a);let p=e.toLowerCase();return a.filter(e=>e.message.toLowerCase().includes(p))}pointer(){return""}format(){if(!this.focused)return this.input;if(this.options.multiple&&this.state.submitted)return this.selected.map(e=>this.styles.primary(e.message)).join(", ");if(this.state.submitted){let e=this.value=this.input=this.focused.value;return this.styles.primary(e)}return this.input}async render(){if("pending"!==this.state.status)return super.render();let e=((e,a)=>{let p=this.input.toLowerCase();return e=>{let t=e.toLowerCase().indexOf(p),i=a(e.slice(t,t+p.length));return t>=0?e.slice(0,t)+i+e.slice(t+p.length):e}})(0,this.options.highlight?this.options.highlight.bind(this):this.styles.placeholder),a=this.choices;this.choices=a.map(a=>({...a,message:e(a.message)})),await super.render(),this.choices=a}submit(){return this.options.multiple&&(this.value=this.selected.map(e=>e.name)),super.submit()}},we=(e,a={})=>{e.cursorHide();let{input:p="",initial:t="",pos:i,showCursor:d=!0,color:s}=a,r=s||e.styles.placeholder,n=G.inverse(e.styles.primary),l=a=>n(e.styles.black(a)),o=p,m=l(" ");if(e.blink&&!0===e.blink.off&&(l=e=>e,m=""),d&&0===i&&""===t&&""===p)return l(" ");if(d&&0===i&&(p===t||""===p))return l(t[0])+r(t.slice(1));t=G.isPrimitive(t)?`${t}`:"",p=G.isPrimitive(p)?`${p}`:"";let u=t&&t.startsWith(p)&&t!==p,c=u?l(t[p.length]):m;if(i!==p.length&&!0===d&&(o=p.slice(0,i)+l(p[i])+p.slice(i+1),c=""),!1===d&&(c=""),u){let a=e.styles.unstyle(o+c);return o+c+r(t.slice(a.length))}return o+c},ge=class extends fe{constructor(e){super({...e,multiple:!0}),this.type="form",this.initial=this.options.initial,this.align=[this.options.align,"right"].find(e=>null!=e),this.emptyError="",this.values={}}async reset(e){return await super.reset(),!0===e&&(this._index=this.index),this.index=this._index,this.values={},this.choices.forEach(e=>e.reset&&e.reset()),this.render()}dispatch(e){return!!e&&this.append(e)}append(e){let a=this.focused;if(!a)return this.alert();let{cursor:p,input:t}=a;return a.value=a.input=t.slice(0,p)+e+t.slice(p),a.cursor++,this.render()}delete(){let e=this.focused;if(!e||e.cursor<=0)return this.alert();let{cursor:a,input:p}=e;return e.value=e.input=p.slice(0,a-1)+p.slice(a),e.cursor--,this.render()}deleteForward(){let e=this.focused;if(!e)return this.alert();let{cursor:a,input:p}=e;if(void 0===p[a])return this.alert();let t=`${p}`.slice(0,a)+`${p}`.slice(a+1);return e.value=e.input=t,this.render()}right(){let e=this.focused;return e?e.cursor>=e.input.length?this.alert():(e.cursor++,this.render()):this.alert()}left(){let e=this.focused;return e?e.cursor<=0?this.alert():(e.cursor--,this.render()):this.alert()}space(e,a){return this.dispatch(e,a)}number(e,a){return this.dispatch(e,a)}next(){let e=this.focused;if(!e)return this.alert();let{initial:a,input:p}=e;return a&&a.startsWith(p)&&p!==a?(e.value=e.input=a,e.cursor=e.value.length,this.render()):super.next()}prev(){let e=this.focused;return e?0===e.cursor?super.prev():(e.value=e.input="",e.cursor=0,this.render()):this.alert()}separator(){return""}format(e){return this.state.submitted?"":super.format(e)}pointer(){return""}indicator(e){return e.input?"‚¶ø":"‚äô"}async choiceSeparator(e,a){let p=await this.resolve(e.separator,this.state,e,a)||":";return p?" "+this.styles.disabled(p):""}async renderChoice(e,a){await this.onChoice(e,a);let{state:p,styles:t}=this,{cursor:i,initial:d="",name:s,hint:r,input:n=""}=e,{muted:l,submitted:o,primary:m,danger:u}=t,c=r,h=this.index===a,f=e.validate||(()=>!0),v=await this.choiceSeparator(e,a),w=e.message;"right"===this.align&&(w=w.padStart(this.longest+1," ")),"left"===this.align&&(w=w.padEnd(this.longest+1," "));let g=this.values[s]=n||d,y=n?"success":"dark";!0!==await f.call(e,g,this.state)&&(y="danger");let b=(0,t[y])(await this.indicator(e,a))+(e.pad||""),S=this.indent(e),E=()=>[S,b,w+v,n,c].filter(Boolean).join(" ");return p.submitted?(w=U.unstyle(w),n=o(n),c="",E()):(n=e.format?await e.format.call(this,n,e,a):we(this,{input:n,initial:d,pos:i,showCursor:h,color:this.styles.muted}),this.isValue(n)||(n=this.styles.muted(this.symbols.ellipsis)),e.result&&(this.values[s]=await e.result.call(this,g,e,a)),h&&(w=m(w)),e.error?n+=(n?" ":"")+u(e.error.trim()):e.hint&&(n+=(n?" ":"")+l(e.hint.trim())),E())}async submit(){return this.value=this.values,super.base.submit.call(this)}};const ye=()=>{throw new Error("expected prompt to have a custom authenticate method")},be=(e=ye)=>class extends ge{constructor(e){super(e)}async submit(){this.value=await e.call(this,this.values,this.state),super.base.submit.call(this)}static create(e){return be(e)}};var Se=be();function Ee(e,a){return e.username===this.options.username&&e.password===this.options.password}const Ne=(e=Ee)=>{const a=[{name:"username",message:"username"},{name:"password",message:"password",format(e){return this.options.showPassword?e:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(e.length))}}];class p extends(Se.create(e)){constructor(e){super({...e,choices:a})}static create(e){return Ne(e)}}return p};var _e=Ne();const{isPrimitive:Te,hasColor:De}=G;var Ae=class extends se{constructor(e){super(e),this.cursorHide()}async initialize(){let e=await this.resolve(this.initial,this.state);this.input=await this.cast(e),await super.initialize()}dispatch(e){return this.isValue(e)?(this.input=e,this.submit()):this.alert()}format(e){let{styles:a,state:p}=this;return p.submitted?a.success(e):a.primary(e)}cast(e){return this.isTrue(e)}isTrue(e){return/^[ty1]/i.test(e)}isFalse(e){return/^[fn0]/i.test(e)}isValue(e){return Te(e)&&(this.isTrue(e)||this.isFalse(e))}async hint(){if("pending"===this.state.status){let e=await this.element("hint");return De(e)?e:this.styles.muted(e)}}async render(){let{input:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=[p,await this.message(),this.styles.muted(this.default),t].filter(Boolean).join(" ");this.state.prompt=i;let d=await this.header(),s=this.value=this.cast(e),r=await this.format(s),n=await this.error()||await this.hint(),l=await this.footer();n&&!i.includes(n)&&(r+=" "+n),i+=" "+r,this.clear(a),this.write([d,i,l].filter(Boolean).join("\n")),this.restore()}set value(e){super.value=e}get value(){return this.cast(super.value)}},Ve=class extends Ae{constructor(e){super(e),this.default=this.options.default||(this.initial?"(Y/n)":"(y/N)")}};const Ce=ge.prototype;var Oe=class extends fe{constructor(e){super({...e,multiple:!0}),this.align=[this.options.align,"left"].find(e=>null!=e),this.emptyError="",this.values={}}dispatch(e,a){let p=this.focused;return p.editable||(p.parent||{}).editable||"a"!==e&&"i"!==e?Ce.dispatch.call(this,e,a):super[e]()}append(e,a){return Ce.append.call(this,e,a)}delete(e,a){return Ce.delete.call(this,e,a)}space(e){return this.focused.editable?this.append(e):super.space()}number(e){return this.focused.editable?this.append(e):super.number(e)}next(){return this.focused.editable?Ce.next.call(this):super.next()}prev(){return this.focused.editable?Ce.prev.call(this):super.prev()}async indicator(e,a){let p=e.editable?e.indicator||"":super.indicator(e,a);return await this.resolve(p,this.state,e,a)||""}indent(e){return"heading"===e.role?"":e.editable?" ":"  "}async renderChoice(e,a){return e.indent="",e.editable?Ce.renderChoice.call(this,e,a):super.renderChoice(e,a)}error(){return""}footer(){return this.state.error}async validate(){let e=!0;for(let a of this.choices){if("function"!=typeof a.validate)continue;if("heading"===a.role)continue;let p=a.parent?this.value[a.parent.name]:this.value;if(a.editable?p=a.value===a.name?a.initial||"":a.value:this.isDisabled(a)||(p=!0===a.enabled),e=await a.validate(p,this.state),!0!==e)break}return!0!==e&&(this.state.error="string"==typeof e?e:"Invalid Input"),e}submit(){if(!0===this.focused.newChoice)return super.submit();if(this.choices.some(e=>e.newChoice))return this.alert();this.value={};for(let e of this.choices){let a=e.parent?this.value[e.parent.name]:this.value;"heading"!==e.role?e.editable?a[e.name]=e.value===e.name?e.initial||"":e.value:this.isDisabled(e)||(a[e.name]=!0===e.enabled):this.value[e.name]={}}return this.base.submit.call(this)}};const{isPrimitive:Ie}=G;var xe=class extends se{constructor(e){super(e),this.initial=Ie(this.initial)?String(this.initial):"",this.initial&&this.cursorHide(),this.state.prevCursor=0,this.state.clipboard=[]}async keypress(e,a={}){let p=this.state.prevKeypress;return this.state.prevKeypress=a,!0!==this.options.multiline||"return"!==a.name||p&&"return"===p.name?super.keypress(e,a):this.append("\n",a)}moveCursor(e){this.cursor+=e}reset(){return this.input=this.value="",this.cursor=0,this.render()}dispatch(e,a){if(!e||a.ctrl||a.code)return this.alert();this.append(e)}append(e){let{cursor:a,input:p}=this.state;this.input=`${p}`.slice(0,a)+e+`${p}`.slice(a),this.moveCursor(String(e).length),this.render()}insert(e){this.append(e)}delete(){let{cursor:e,input:a}=this.state;if(e<=0)return this.alert();this.input=`${a}`.slice(0,e-1)+`${a}`.slice(e),this.moveCursor(-1),this.render()}deleteForward(){let{cursor:e,input:a}=this.state;if(void 0===a[e])return this.alert();this.input=`${a}`.slice(0,e)+`${a}`.slice(e+1),this.render()}cutForward(){let e=this.cursor;if(this.input.length<=e)return this.alert();this.state.clipboard.push(this.input.slice(e)),this.input=this.input.slice(0,e),this.render()}cutLeft(){let e=this.cursor;if(0===e)return this.alert();let a=this.input.slice(0,e),p=this.input.slice(e),t=a.split(" ");this.state.clipboard.push(t.pop()),this.input=t.join(" "),this.cursor=this.input.length,this.input+=p,this.render()}paste(){if(!this.state.clipboard.length)return this.alert();this.insert(this.state.clipboard.pop()),this.render()}toggleCursor(){this.state.prevCursor?(this.cursor=this.state.prevCursor,this.state.prevCursor=0):(this.state.prevCursor=this.cursor,this.cursor=0),this.render()}first(){this.cursor=0,this.render()}last(){this.cursor=this.input.length-1,this.render()}next(){let e=null!=this.initial?String(this.initial):"";if(!e||!e.startsWith(this.input))return this.alert();this.input=this.initial,this.cursor=this.initial.length,this.render()}prev(){if(!this.input)return this.alert();this.reset()}backward(){return this.left()}forward(){return this.right()}right(){return this.cursor>=this.input.length?this.alert():(this.moveCursor(1),this.render())}left(){return this.cursor<=0?this.alert():(this.moveCursor(-1),this.render())}isValue(e){return!!e}async format(e=this.value){let a=await this.resolve(this.initial,this.state);return this.state.submitted?this.styles.submitted(e||a):we(this,{input:e,initial:a,pos:this.cursor})}async render(){let e=this.state.size,a=await this.prefix(),p=await this.separator(),t=[a,await this.message(),p].filter(Boolean).join(" ");this.state.prompt=t;let i=await this.header(),d=await this.format(),s=await this.error()||await this.hint(),r=await this.footer();s&&!d.includes(s)&&(d+=" "+s),t+=" "+d,this.clear(e),this.write([i,t,r].filter(Boolean).join("\n")),this.restore()}};const Re=e=>(e=>e.filter((a,p)=>e.lastIndexOf(a)===p))(e).filter(Boolean);var Pe=(e,a={},p="")=>{let t,i,{past:d=[],present:s=""}=a;switch(e){case"prev":case"undo":return t=d.slice(0,d.length-1),i=d[d.length-1]||"",{past:Re([p,...t]),present:i};case"next":case"redo":return t=d.slice(1),i=d[0]||"",{past:Re([...t,p]),present:i};case"save":return{past:Re([...d,p]),present:""};case"remove":return i=Re(d.filter(e=>e!==p)),s="",i.length&&(s=i.pop()),{past:i,present:s};default:throw new Error(`Invalid action: "${e}"`)}},ke=class extends xe{constructor(e){super(e);let a=this.options.history;if(a&&a.store){let e=a.values||this.initial;this.autosave=!!a.autosave,this.store=a.store,this.data=this.store.get("values")||{past:[],present:e},this.initial=this.data.present||this.data.past[this.data.past.length-1]}}completion(e){return this.store?(this.data=Pe(e,this.data,this.input),this.data.present?(this.input=this.data.present,this.cursor=this.input.length,this.render()):this.alert()):this.alert()}altUp(){return this.completion("prev")}altDown(){return this.completion("next")}prev(){return this.save(),super.prev()}save(){this.store&&(this.data=Pe("save",this.data,this.input),this.store.set("values",this.data))}submit(){return this.store&&!0===this.autosave&&this.save(),super.submit()}},Le=class extends xe{format(){return""}},je=class extends xe{constructor(e={}){super(e),this.sep=this.options.separator||/, */,this.initial=e.initial||""}split(e=this.value){return e?String(e).split(this.sep):[]}format(){return this.list.map(this.state.submitted?this.styles.primary:e=>e).join(", ")}async submit(e){let a=this.state.error||await this.validate(this.list,this.state);return!0!==a?(this.state.error=a,super.submit()):(this.value=this.list,super.submit())}get list(){return this.split()}},Be=class extends fe{constructor(e){super({...e,multiple:!0})}},Fe=class extends xe{constructor(e={}){super({style:"number",...e}),this.min=this.isValue(e.min)?this.toNumber(e.min):-Infinity,this.max=this.isValue(e.max)?this.toNumber(e.max):Infinity,this.delay=null!=e.delay?e.delay:1e3,this.float=!1!==e.float,this.round=!0===e.round||!1===e.float,this.major=e.major||10,this.minor=e.minor||1,this.initial=null!=e.initial?e.initial:"",this.input=String(this.initial),this.cursor=this.input.length,this.cursorShow()}append(e){return!/[-+.]/.test(e)||"."===e&&this.input.includes(".")?this.alert("invalid number"):super.append(e)}number(e){return super.append(e)}next(){return this.input&&this.input!==this.initial?this.alert():this.isValue(this.initial)?(this.input=this.initial,this.cursor=String(this.initial).length,this.render()):this.alert()}up(e){let a=e||this.minor,p=this.toNumber(this.input);return p>this.max+a?this.alert():(this.input=`${p+a}`,this.render())}down(e){let a=e||this.minor,p=this.toNumber(this.input);return p<this.min-a?this.alert():(this.input=""+(p-a),this.render())}shiftDown(){return this.down(this.major)}shiftUp(){return this.up(this.major)}format(e=this.input){return"function"==typeof this.options.format?this.options.format.call(this,e):this.styles.info(e)}toNumber(e=""){return this.float?+e:Math.round(+e)}isValue(e){return/^[-+]?[0-9]+((\.)|(\.[0-9]+))?$/.test(e)}submit(){let e=[this.input,this.initial].find(e=>this.isValue(e));return this.value=this.toNumber(e||0),super.submit()}},$e=Fe,Me=class extends xe{constructor(e){super(e),this.cursorShow()}format(e=this.input){return this.keypressed?(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(e.length)):""}},Ue=class extends he{constructor(e={}){super(e),this.widths=[].concat(e.messageWidth||50),this.align=[].concat(e.align||"left"),this.linebreak=e.linebreak||!1,this.edgeLength=e.edgeLength||3,this.newline=e.newline||"\n   ";let a=e.startNumber||1;"number"==typeof this.scale&&(this.scaleKey=!1,this.scale=Array(this.scale).fill(0).map((e,p)=>({name:p+a})))}async reset(){return this.tableized=!1,await super.reset(),this.render()}tableize(){if(!0===this.tableized)return;this.tableized=!0;let e=0;for(let a of this.choices){e=Math.max(e,a.message.length),a.scaleIndex=a.initial||2,a.scale=[];for(let e=0;e<this.scale.length;e++)a.scale.push({index:e})}this.widths[0]=Math.min(this.widths[0],e+3)}async dispatch(e,a){if(this.multiple)return this[a.name]?await this[a.name](e,a):await super.dispatch(e,a);this.alert()}heading(e,a,p){return this.styles.strong(e)}separator(){return this.styles.muted(this.symbols.ellipsis)}right(){let e=this.focused;return e.scaleIndex>=this.scale.length-1?this.alert():(e.scaleIndex++,this.render())}left(){let e=this.focused;return e.scaleIndex<=0?this.alert():(e.scaleIndex--,this.render())}indent(){return""}format(){return this.state.submitted?this.choices.map(e=>this.styles.info(e.index)).join(", "):""}pointer(){return""}renderScaleKey(){return!1===this.scaleKey||this.state.submitted?"":["",...this.scale.map(e=>`   ${e.name} - ${e.message}`)].map(e=>this.styles.muted(e)).join("\n")}renderScaleHeading(e){let a=this.scale.map(e=>e.name);"function"==typeof this.options.renderScaleHeading&&(a=this.options.renderScaleHeading.call(this,e));let p=this.scaleLength-a.join("").length,t=Math.round(p/(a.length-1)),i=a.map(e=>this.styles.strong(e)).join(" ".repeat(t)),d=" ".repeat(this.widths[0]);return this.margin[3]+d+this.margin[1]+i}scaleIndicator(e,a,p){if("function"==typeof this.options.scaleIndicator)return this.options.scaleIndicator.call(this,e,a,p);let t=e.scaleIndex===a.index;return a.disabled?this.styles.hint(this.symbols.radio.disabled):t?this.styles.success(this.symbols.radio.on):this.symbols.radio.off}renderScale(e,a){return e.scale.map(p=>this.scaleIndicator(e,p,a)).join(("Hyper"===this.term?"":" ")+this.symbols.line.repeat(this.edgeLength))}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t=await this.pointer(e,a),i=await e.hint;i&&!G.hasColor(i)&&(i=this.styles.muted(i));let d=e=>this.margin[3]+e.replace(/\s+$/,"").padEnd(this.widths[0]," "),s=this.newline,r=this.indent(e),n=await this.resolve(e.message,this.state,e,a),l=await this.renderScale(e,a),o=this.margin[1]+this.margin[3];this.scaleLength=U.unstyle(l).length,this.widths[0]=Math.min(this.widths[0],this.width-this.scaleLength-o.length);let m=G.wordWrap(n,{width:this.widths[0],newline:s}).split("\n").map(e=>d(e)+this.margin[1]);return p&&(l=this.styles.info(l),m=m.map(e=>this.styles.info(e))),m[0]+=l,this.linebreak&&m.push(""),[r+t,m.join("\n")].filter(Boolean)}async renderChoices(){if(this.state.submitted)return"";this.tableize();let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e),p=await this.renderScaleHeading();return this.margin[0]+[p,...a.map(e=>e.join(" "))].join("\n")}async render(){let{submitted:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=await this.message(),d="";!1!==this.options.promptLine&&(d=[p,i,t,""].join(" "),this.state.prompt=d);let s=await this.header(),r=await this.format(),n=await this.renderScaleKey(),l=await this.error()||await this.hint(),o=await this.renderChoices(),m=await this.footer(),u=this.emptyError;r&&(d+=r),l&&!d.includes(l)&&(d+=" "+l),e&&!r&&!o.trim()&&this.multiple&&null!=u&&(d+=this.styles.danger(u)),this.clear(a),this.write([s,d,n,o,m].filter(Boolean).join("\n")),this.state.submitted||this.write(this.margin[2]),this.restore()}submit(){this.value={};for(let e of this.choices)this.value[e.name]=e.scaleIndex;return this.base.submit.call(this)}};class Ge{constructor(e){this.name=e.key,this.field=e.field||{},this.value=((e="")=>"string"==typeof e?e.replace(/^['"]|['"]$/g,""):"")(e.initial||this.field.initial||""),this.message=e.message||this.name,this.cursor=0,this.input="",this.lines=[]}}function qe(e,a,p,t){return(p,i,d,s)=>"function"==typeof d.field[e]?d.field[e].call(a,p,i,d,s):[t,p].find(e=>a.isValue(e))}var ze=class extends se{constructor(e){super(e),this.cursorHide(),this.reset(!0)}async initialize(){this.interpolate=await(async e=>{let a=e.options,p=new Set(!0===a.required?[]:a.required||[]),t={...a.values,...a.initial},{tabstops:i,items:d,keys:s}=await(async(e={},a={},p=(e=>e))=>{let t=new Set,i=e.fields||[],d=e.template,s=[],r=[],n=[],l=1;"function"==typeof d&&(d=await d());let o=-1,m=()=>d[++o],u=()=>d[o+1],c=e=>{e.line=l,s.push(e)};for(c({type:"bos",value:""});o<d.length-1;){let e=m();if(/^[^\S\n ]$/.test(e)){c({type:"text",value:e});continue}if("\n"===e){c({type:"newline",value:e}),l++;continue}if("\\"===e){e+=m(),c({type:"text",value:e});continue}if(("$"===e||"#"===e||"{"===e)&&"{"===u()){e+=m();let d,s={type:"template",open:e,inner:"",close:"",value:e};for(;d=m();){if("}"===d){"}"===u()&&(d+=m()),s.value+=d,s.close=d;break}":"===d?(s.initial="",s.key=s.inner):void 0!==s.initial&&(s.initial+=d),s.value+=d,s.inner+=d}s.template=s.open+(s.initial||s.inner)+s.close,s.key=s.key||s.inner,a.hasOwnProperty(s.key)&&(s.initial=a[s.key]),s=p(s),c(s),n.push(s.key),t.add(s.key);let l=r.find(e=>e.name===s.key);s.field=i.find(e=>e.name===s.key),l||(l=new Ge(s),r.push(l)),l.lines.push(s.line-1);continue}let d=s[s.length-1];"text"===d.type&&d.line===l?d.value+=e:c({type:"text",value:e})}return c({type:"eos",value:""}),{input:d,tabstops:s,unique:t,keys:n,items:r}})(a,t),r=qe("result",e),n=qe("format",e),l=qe("validate",e,0,!0),o=e.isValue.bind(e);return async(t={},m=!1)=>{let u=0;t.required=p,t.items=d,t.keys=s,t.output="";let c=async(e,a,p,t)=>{let i=await l(e,a,p,t);return!1===i?"Invalid field "+p.name:i};for(let p of i){let i=p.value,s=p.key;if("template"===p.type){if("template"===p.type){let l=d.find(e=>e.name===s);!0===a.required&&t.required.add(l.name);let h=[l.input,t.values[l.value],l.value,i].find(o),f=(l.field||{}).message||p.inner;if(m){let e=await c(t.values[s],t,l,u);if(e&&"string"==typeof e||!1===e){t.invalid.set(s,e);continue}t.invalid.delete(s);let a=await r(t.values[s],t,l,u);t.output+=U.unstyle(a);continue}l.placeholder=!1;let v=i;i=await n(i,t,l,u),h!==i?(t.values[s]=h,i=e.styles.typing(h),t.missing.delete(f)):(t.values[s]=void 0,h=`<${f}>`,i=e.styles.primary(h),l.placeholder=!0,t.required.has(s)&&t.missing.add(f)),t.missing.has(f)&&t.validating&&(i=e.styles.warning(h)),t.invalid.has(s)&&t.validating&&(i=e.styles.danger(h)),u===t.index&&(i=v!==i?e.styles.underline(i):e.styles.heading(U.unstyle(i))),u++}i&&(t.output+=i)}else i&&(t.output+=i)}let h=t.output.split("\n").map(e=>" "+e),f=d.length,v=0;for(let a of d)t.invalid.has(a.name)&&a.lines.forEach(e=>{" "===h[e][0]&&(h[e]=t.styles.danger(t.symbols.bullet)+h[e].slice(1))}),e.isValue(t.values[a.name])&&v++;return t.completed=(v/f*100).toFixed(0),t.output=h.join("\n"),t.output}})(this),await super.initialize()}async reset(e){this.state.keys=[],this.state.invalid=new Map,this.state.missing=new Set,this.state.completed=0,this.state.values={},!0!==e&&(await this.initialize(),await this.render())}moveCursor(e){let a=this.getItem();this.cursor+=e,a.cursor+=e}dispatch(e,a){a.code||a.ctrl||null==e||!this.getItem()?this.alert():this.append(e,a)}append(e,a){let p=this.getItem(),t=p.input.slice(0,this.cursor),i=p.input.slice(this.cursor);this.input=p.input=`${t}${e}${i}`,this.moveCursor(1),this.render()}delete(){let e=this.getItem();if(this.cursor<=0||!e.input)return this.alert();let a=e.input.slice(this.cursor),p=e.input.slice(0,this.cursor-1);this.input=e.input=`${p}${a}`,this.moveCursor(-1),this.render()}increment(e){return e>=this.state.keys.length-1?0:e+1}decrement(e){return e<=0?this.state.keys.length-1:e-1}first(){this.state.index=0,this.render()}last(){this.state.index=this.state.keys.length-1,this.render()}right(){if(this.cursor>=this.input.length)return this.alert();this.moveCursor(1),this.render()}left(){if(this.cursor<=0)return this.alert();this.moveCursor(-1),this.render()}prev(){this.state.index=this.decrement(this.state.index),this.getItem(),this.render()}next(){this.state.index=this.increment(this.state.index),this.getItem(),this.render()}up(){this.prev()}down(){this.next()}format(e){let a=this.state.completed<100?this.styles.warning:this.styles.success;return!0===this.state.submitted&&100!==this.state.completed&&(a=this.styles.danger),a(`${this.state.completed}% completed`)}async render(){let{index:e,keys:a=[],submitted:p,size:t}=this.state,i=[this.options.newline,"\n"].find(e=>null!=e),d=await this.prefix(),s=await this.separator(),r=[d,await this.message(),s].filter(Boolean).join(" ");this.state.prompt=r;let n=await this.header(),l=await this.error()||"",o=await this.hint()||"",m=p?"":await this.interpolate(this.state),u=this.state.key=a[e]||"",c=await this.format(u),h=await this.footer();c&&(r+=" "+c),o&&!c&&0===this.state.completed&&(r+=" "+o),this.clear(t);let f=[n,r,m,h,l.trim()];this.write(f.filter(Boolean).join(i)),this.restore()}getItem(e){let{items:a,keys:p,index:t}=this.state,i=a.find(e=>e.name===p[t]);return i&&null!=i.input&&(this.input=i.input,this.cursor=i.cursor),i}async submit(){"function"!=typeof this.interpolate&&await this.initialize(),await this.interpolate(this.state,!0);let{invalid:e,missing:a,output:p,values:t}=this.state;if(e.size){let a="";for(let[p,t]of e)a+=`Invalid ${p}: ${t}\n`;return this.state.error=a,super.submit()}if(a.size)return this.state.error="Required: "+[...a.keys()].join(", "),super.submit();let i=U.unstyle(p).split("\n").map(e=>e.slice(1)).join("\n");return this.value={values:t,result:i},super.submit()}};const He="(Use <shift>+<up/down> to sort)";var Ye=class extends fe{constructor(e){super({...e,reorder:!1,sort:!0,multiple:!0}),this.state.hint=[this.options.hint,He].find(this.isValue.bind(this))}indicator(){return""}async renderChoice(e,a){let p=await super.renderChoice(e,a),t=this.index===a&&this.sorting?this.styles.muted(this.symbols.identicalTo+" "):"  ";return!1===this.options.drag&&(t=""),!0===this.options.numbered?t+`${a+1} - `+p:t+p}get selected(){return this.choices}submit(){return this.value=this.choices.map(e=>e.value),super.submit()}};function We(e,a={}){if(Array.isArray(a.scale))return a.scale.map(e=>({...e}));let p=[];for(let a=1;a<e+1;a++)p.push({i:a,selected:!1});return p}var Xe=class extends he{constructor(e={}){if(super(e),this.emptyError=e.emptyError||"No items were selected",this.term=process.env.TERM_PROGRAM,!this.options.header){let e=["","4 - Strongly Agree","3 - Agree","2 - Neutral","1 - Disagree","0 - Strongly Disagree",""];e=e.map(e=>this.styles.muted(e)),this.state.header=e.join("\n   ")}}async toChoices(...e){if(this.createdScales)return!1;this.createdScales=!0;let a=await super.toChoices(...e);for(let e of a)e.scale=We(5,this.options),e.scaleIdx=2;return a}dispatch(){this.alert()}space(){let e=this.focused,a=e.scale[e.scaleIdx],p=a.selected;return e.scale.forEach(e=>e.selected=!1),a.selected=!p,this.render()}indicator(){return""}pointer(){return""}separator(){return this.styles.muted(this.symbols.ellipsis)}right(){let e=this.focused;return e.scaleIdx>=e.scale.length-1?this.alert():(e.scaleIdx++,this.render())}left(){let e=this.focused;return e.scaleIdx<=0?this.alert():(e.scaleIdx--,this.render())}indent(){return"   "}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t="Hyper"===this.term,i=t?9:8,d=t?"":" ",s=this.symbols.line.repeat(i),r=" ".repeat(i+(t?0:1)),n=e=>(e?this.styles.success("‚óâ"):"‚óØ")+d,l=a+1+".",o=p?this.styles.heading:this.styles.noop,m=await this.resolve(e.message,this.state,e,a),u=this.indent(e),c=u+e.scale.map((a,p)=>n(p===e.scaleIdx)).join(s),h=u+e.scale.map((a,p)=>(a=>a===e.scaleIdx?o(a):a)(p)).join(r);return p&&(c=this.styles.cyan(c),h=this.styles.cyan(h)),[[l,m].filter(Boolean).join(" "),c,h," "].filter(Boolean).join("\n")}async renderChoices(){if(this.state.submitted)return"";let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e);return a.length||a.push(this.styles.danger("No matching choices")),a.join("\n")}format(){return this.state.submitted?this.choices.map(e=>this.styles.info(e.scaleIdx)).join(", "):""}async render(){let{submitted:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=[p,await this.message(),t].filter(Boolean).join(" ");this.state.prompt=i;let d=await this.header(),s=await this.format(),r=await this.error()||await this.hint(),n=await this.renderChoices(),l=await this.footer();!s&&r||(i+=" "+s),r&&!i.includes(r)&&(i+=" "+r),e&&!s&&!n&&this.multiple&&"form"!==this.type&&(i+=this.styles.danger(this.emptyError)),this.clear(a),this.write([i,d,n,l].filter(Boolean).join("\n")),this.restore()}submit(){this.value={};for(let e of this.choices)this.value[e.name]=e.scaleIdx;return this.base.submit.call(this)}},Ke=ke,Je=class extends Ae{async initialize(){await super.initialize(),this.value=this.initial=!!this.options.initial,this.disabled=this.options.disabled||"no",this.enabled=this.options.enabled||"yes",await this.render()}reset(){this.value=this.initial,this.render()}delete(){this.alert()}toggle(){this.value=!this.value,this.render()}enable(){if(!0===this.value)return this.alert();this.value=!0,this.render()}disable(){if(!1===this.value)return this.alert();this.value=!1,this.render()}up(){this.toggle()}down(){this.toggle()}right(){this.toggle()}left(){this.toggle()}next(){this.toggle()}prev(){this.toggle()}dispatch(e="",a){switch(e.toLowerCase()){case" ":return this.toggle();case"1":case"y":case"t":return this.enable();case"0":case"n":case"f":return this.disable();default:return this.alert()}}format(){let e=e=>this.styles.primary.underline(e);return[this.value?this.disabled:e(this.disabled),this.value?e(this.enabled):this.enabled].join(this.styles.muted(" / "))}async render(){let{size:e}=this.state,a=await this.header(),p=await this.prefix(),t=await this.separator(),i=await this.message(),d=await this.format(),s=await this.error()||await this.hint(),r=await this.footer(),n=[p,i,t,d].join(" ");this.state.prompt=n,s&&!n.includes(s)&&(n+=" "+s),this.clear(e),this.write([a,n,r].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}},Ze=class extends fe{constructor(e){if(super(e),"number"!=typeof this.options.correctChoice||this.options.correctChoice<0)throw new Error("Please specify the index of the correct answer from the list of choices")}async toChoices(e,a){let p=await super.toChoices(e,a);if(p.length<2)throw new Error("Please give at least two choices to the user");if(this.options.correctChoice>p.length)throw new Error("Please specify the index of the correct answer from the list of choices");return p}check(e){return e.index===this.options.correctChoice}async result(e){return{selectedAnswer:e,correctAnswer:this.options.choices[this.options.correctChoice].value,correct:await this.check(this.state)}}},Qe=B(function(e,a){const p=(e,p)=>{G.defineExport(a,e,p),G.defineExport(a,e.toLowerCase(),p)};p("AutoComplete",()=>ve),p("BasicAuth",()=>_e),p("Confirm",()=>Ve),p("Editable",()=>Oe),p("Form",()=>ge),p("Input",()=>ke),p("Invisible",()=>Le),p("List",()=>je),p("MultiSelect",()=>Be),p("Numeral",()=>$e),p("Password",()=>Me),p("Scale",()=>Ue),p("Select",()=>fe),p("Snippet",()=>ze),p("Sort",()=>Ye),p("Survey",()=>Xe),p("Text",()=>Ke),p("Toggle",()=>Je),p("Quiz",()=>Ze)}),ea={ArrayPrompt:he,AuthPrompt:Se,BooleanPrompt:Ae,NumberPrompt:Fe,StringPrompt:xe};class aa extends b.default{constructor(e,a){super(),this.options=G.merge({},e),this.answers={...a}}register(e,a){if(G.isObject(e)){for(let a of Object.keys(e))this.register(a,e[a]);return this}y.default.equal(typeof a,"function","expected a function");let p=e.toLowerCase();return this.prompts[p]=a.prototype instanceof this.Prompt?a:a(this.Prompt,this),this}async prompt(e=[]){for(let a of[].concat(e))try{"function"==typeof a&&(a=await a.call(this)),await this.ask(G.merge({},this.options,a))}catch(e){return Promise.reject(e)}return this.answers}async ask(e){"function"==typeof e&&(e=await e.call(this));let a=G.merge({},this.options,e),{type:p,name:t}=e,{set:i,get:d}=G;if("function"==typeof p&&(p=await p.call(this,e,this.answers)),!p)return this.answers[t];y.default(this.prompts[p],`Prompt "${p}" is not registered`);let s=new this.prompts[p](a),r=d(this.answers,t);s.state.answers=this.answers,s.enquirer=this,t&&s.on("submit",e=>{this.emit("answer",t,e,s),i(this.answers,t,e)});let n=s.emit.bind(s);return s.emit=(...e)=>(this.emit.call(this,...e),n(...e)),this.emit("prompt",s,this),a.autofill&&null!=r?(s.value=s.input=r,"show"===a.autofill&&await s.submit()):r=s.value=await s.run(),r}use(e){return e.call(this,this),this}set Prompt(e){this._Prompt=e}get Prompt(){return this._Prompt||this.constructor.Prompt}get prompts(){return this.constructor.prompts}static set Prompt(e){this._Prompt=e}static get Prompt(){return this._Prompt||se}static get prompts(){return Qe}static get types(){return ea}static get prompt(){const e=(a,...p)=>{let t=new this(...p),i=t.emit.bind(t);return t.emit=(...a)=>(e.emit(...a),i(...a)),t.prompt(a)};return G.mixinEmitter(e,new b.default),e}}G.mixinEmitter(aa,new b.default);const pa=aa.prompts;for(let e of Object.keys(pa)){let a=e.toLowerCase(),p=a=>new pa[e](a).run();aa.prompt[a]=p,aa[a]=p,aa[e]||Reflect.defineProperty(aa,e,{get:()=>pa[e]})}const ta=e=>{G.defineExport(aa,e,()=>aa.types[e])};ta("ArrayPrompt"),ta("AuthPrompt"),ta("BooleanPrompt"),ta("NumberPrompt"),ta("StringPrompt");var ia=aa,da={"gatsby-source-contentful":{message:"Contentful",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-datocms":{message:"DatoCMS",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-plugin-netlify-cms":{message:"Netlify CMS",dependencies:["netlify-cms-app"]},"gatsby-source-sanity":{message:"Sanity",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-shopify":{message:"Shopify",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-wordpress":{message:"WordPress",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]}},sa={"gatsby-plugin-emotion":{message:"Emotion",dependencies:["@emotion/react","@emotion/styled"]},"gatsby-plugin-postcss":{message:"PostCSS",dependencies:["postcss"]},"gatsby-plugin-sass":{message:"Sass",dependencies:["sass"]},"gatsby-plugin-styled-components":{message:"styled-components",dependencies:["styled-components","babel-plugin-styled-components"]},"gatsby-plugin-theme-ui":{message:"Theme UI",dependencies:["theme-ui","@emotion/react","@emotion/styled","@mdx-js/react@v1"]},"gatsby-plugin-vanilla-extract":{message:"vanilla-extract",dependencies:["@vanilla-extract/webpack-plugin","@vanilla-extract/css","@vanilla-extract/babel-plugin"]}},ra={"gatsby-plugin-google-analytics":{message:"Add the Google Analytics tracking script"},"gatsby-plugin-image":{message:"Add responsive images",plugins:["gatsby-plugin-sharp","gatsby-transformer-sharp","gatsby-source-filesystem:images"],options:{"gatsby-source-filesystem:images":{name:"images",path:"./src/images/"}}},"gatsby-plugin-sitemap":{message:"Add an automatic sitemap"},"gatsby-plugin-manifest":{message:"Generate a manifest file",options:{"gatsby-plugin-manifest":{icon:"src/images/icon.png"}}},"gatsby-plugin-mdx":{message:"Add Markdown and MDX support",plugins:["gatsby-source-filesystem:pages"],dependencies:["@mdx-js/react"],options:{"gatsby-source-filesystem:pages":{name:"pages",path:"./src/pages/"}}},"gatsby-transformer-remark":{message:"Add Markdown support (without MDX)",plugins:["gatsby-source-filesystem:pages"],options:{"gatsby-source-filesystem:pages":{name:"pages",path:"./src/pages/"}}}},na=oa;function la(e,a,p){return!(!e.isSymbolicLink()&&!e.isFile())&&function(e,a){var p=void 0!==a.pathExt?a.pathExt:process.env.PATHEXT;if(!p)return!0;if(-1!==(p=p.split(";")).indexOf(""))return!0;for(var t=0;t<p.length;t++){var i=p[t].toLowerCase();if(i&&e.substr(-i.length).toLowerCase()===i)return!0}return!1}(a,p)}function oa(e,a,p){_.default.stat(e,function(t,i){p(t,!t&&la(i,e,a))})}oa.sync=function(e,a){return la(_.default.statSync(e),e,a)};var ma,ua=ca;function ca(e,a,p){_.default.stat(e,function(e,t){p(e,!e&&ha(t,a))})}function ha(e,a){return e.isFile()&&function(e,a){var p=e.mode,t=e.uid,i=e.gid,d=void 0!==a.uid?a.uid:process.getuid&&process.getuid(),s=void 0!==a.gid?a.gid:process.getgid&&process.getgid(),r=parseInt("100",8),n=parseInt("010",8);return p&parseInt("001",8)||p&n&&i===s||p&r&&t===d||p&(r|n)&&0===d}(e,a)}ca.sync=function(e,a){return ha(_.default.statSync(e),a)},ma="win32"===process.platform||j.TESTING_WINDOWS?na:ua;var fa=va;function va(e,a,p){if("function"==typeof a&&(p=a,a={}),!p){if("function"!=typeof Promise)throw new TypeError("callback not provided");return new Promise(function(p,t){va(e,a||{},function(e,a){e?t(e):p(a)})})}ma(e,a||{},function(e,t){e&&("EACCES"===e.code||a&&a.ignoreErrors)&&(e=null,t=!1),p(e,t)})}va.sync=function(e,a){try{return ma.sync(e,a||{})}catch(e){if(a&&a.ignoreErrors||"EACCES"===e.code)return!1;throw e}};const wa="win32"===process.platform||"cygwin"===process.env.OSTYPE||"msys"===process.env.OSTYPE,ga=wa?";":":",ya=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"}),ba=(e,a)=>{const p=a.colon||ga,t=e.match(/\//)||wa&&e.match(/\\/)?[""]:[...wa?[process.cwd()]:[],...(a.path||process.env.PATH||"").split(p)],i=wa?a.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",d=wa?i.split(p):[""];return wa&&-1!==e.indexOf(".")&&""!==d[0]&&d.unshift(""),{pathEnv:t,pathExt:d,pathExtExe:i}},Sa=(e,a,p)=>{"function"==typeof a&&(p=a,a={}),a||(a={});const{pathEnv:t,pathExt:i,pathExtExe:d}=ba(e,a),s=[],r=p=>new Promise((i,d)=>{if(p===t.length)return a.all&&s.length?i(s):d(ya(e));const r=t[p],l=/^".*"$/.test(r)?r.slice(1,-1):r,o=N.default.join(l,e),m=!l&&/^\.[\\\/]/.test(e)?e.slice(0,2)+o:o;i(n(m,p,0))}),n=(e,p,t)=>new Promise((l,o)=>{if(t===i.length)return l(r(p+1));const m=i[t];fa(e+m,{pathExt:d},(i,d)=>{if(!i&&d){if(!a.all)return l(e+m);s.push(e+m)}return l(n(e,p,t+1))})});return p?r(0).then(e=>p(null,e),p):r(0)};var Ea=Sa;Sa.sync=(e,a)=>{a=a||{};const{pathEnv:p,pathExt:t,pathExtExe:i}=ba(e,a),d=[];for(let s=0;s<p.length;s++){const r=p[s],n=/^".*"$/.test(r)?r.slice(1,-1):r,l=N.default.join(n,e),o=!n&&/^\.[\\\/]/.test(e)?e.slice(0,2)+l:l;for(let e=0;e<t.length;e++){const p=o+t[e];try{if(fa.sync(p,{pathExt:i})){if(!a.all)return p;d.push(p)}}catch(e){}}}if(a.all&&d.length)return d;if(a.nothrow)return null;throw ya(e)};const Na=(e={})=>{const a=e.env||process.env;return"win32"!==(e.platform||process.platform)?"PATH":Object.keys(a).reverse().find(e=>"PATH"===e.toUpperCase())||"Path"};var _a=Na;function Ta(e,a){const p=e.options.env||process.env,t=process.cwd(),i=null!=e.options.cwd,d=i&&void 0!==process.chdir&&!process.chdir.disabled;if(d)try{process.chdir(e.options.cwd)}catch(e){}let s;try{s=Ea.sync(e.command,{path:p[_a({env:p})],pathExt:a?N.default.delimiter:void 0})}catch(e){}finally{d&&process.chdir(t)}return s&&(s=N.default.resolve(i?e.options.cwd:"",s)),s}_a.default=Na;var Da=function(e){return Ta(e)||Ta(e,!0)};const Aa=/([()\][%!^"`<>&|;, *?])/g;var Va=/^#!(.*)/;const Ca="win32"===process.platform,Oa=/\.(?:com|exe)$/i,Ia=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;var xa=function(e,a,p){a&&!Array.isArray(a)&&(p=a,a=null);const t={command:e,args:a=a?a.slice(0):[],options:p=Object.assign({},p),file:void 0,original:{command:e,args:a}};return p.shell?t:function(e){if(!Ca)return e;const a=function(e){e.file=Da(e);const a=e.file&&function(e){const a=Buffer.alloc(150);let p;try{p=_.default.openSync(e,"r"),_.default.readSync(p,a,0,150,0),_.default.closeSync(p)}catch(e){}return((e="")=>{const a=e.match(Va);if(!a)return null;const[p,t]=a[0].replace(/#! ?/,"").split(" "),i=p.split("/").pop();return"env"===i?t:t?`${i} ${t}`:i})(a.toString())}(e.file);return a?(e.args.unshift(e.file),e.command=a,Da(e)):e.file}(e),p=!Oa.test(a);if(e.options.forceShell||p){const p=Ia.test(a);e.command=N.default.normalize(e.command),e.command=e.command.replace(Aa,"^$1"),e.args=e.args.map(e=>function(e,a){return e=(e=`"${e=(e=(e=`${e}`).replace(/(\\*)"/g,'$1$1\\"')).replace(/(\\*)$/,"$1$1")}"`).replace(Aa,"^$1"),a&&(e=e.replace(Aa,"^$1")),e}(e,p));const t=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${t}"`],e.command=process.env.comspec||"cmd.exe",e.options.windowsVerbatimArguments=!0}return e}(t)};const Ra="win32"===process.platform;function Pa(e,a){return Object.assign(new Error(`${a} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${a} ${e.command}`,path:e.command,spawnargs:e.args})}function ka(e,a){return Ra&&1===e&&!a.file?Pa(a.original,"spawn"):null}var La={hookChildProcess:function(e,a){if(!Ra)return;const p=e.emit;e.emit=function(t,i){if("exit"===t){const t=ka(i,a);if(t)return p.call(e,"error",t)}return p.apply(e,arguments)}},verifyENOENT:ka,verifyENOENTSync:function(e,a){return Ra&&1===e&&!a.file?Pa(a.original,"spawnSync"):null},notFoundError:Pa};function ja(e,a,p){const t=xa(e,a,p),i=E.default.spawn(t.command,t.args,t.options);return La.hookChildProcess(i,t),i}var Ba=ja,Fa=xa,$a=La;Ba.spawn=ja,Ba.sync=function(e,a,p){const t=xa(e,a,p),i=E.default.spawnSync(t.command,t.args,t.options);return i.error=i.error||La.verifyENOENTSync(i.status,t),i},Ba._parse=Fa,Ba._enoent=$a;const Ma=(e={})=>{const a=e.env||process.env;return"win32"!==(e.platform||process.platform)?"PATH":Object.keys(a).reverse().find(e=>"PATH"===e.toUpperCase())||"Path"};var Ua=Ma;Ua.default=Ma;var Ga=B(function(e){const a=e=>{let a;e={cwd:process.cwd(),path:process.env[Ua()],execPath:process.execPath,...e};let p=N.default.resolve(e.cwd);const t=[];for(;a!==p;)t.push(N.default.join(p,"node_modules/.bin")),a=p,p=N.default.resolve(p,"..");const i=N.default.resolve(e.cwd,e.execPath,"..");return t.push(i),t.concat(e.path).join(N.default.delimiter)};e.exports=a,e.exports.default=a,e.exports.env=a=>{const p={...(a={env:process.env,...a}).env},t=Ua({env:p});return a.path=p[t],p[t]=e.exports(a),p}});const qa=(e,a)=>{for(const p of Reflect.ownKeys(a))Object.defineProperty(e,p,Object.getOwnPropertyDescriptor(a,p));return e};var za=qa;za.default=qa;const Ha=new WeakMap,Ya=(e,a={})=>{if("function"!=typeof e)throw new TypeError("Expected a function");let p,t=0;const i=e.displayName||e.name||"<anonymous>",d=function(...s){if(Ha.set(d,++t),1===t)p=e.apply(this,s),e=null;else if(!0===a.throw)throw new Error(`Function \`${i}\` can only be called once`);return p};return za(d,e),Ha.set(d,t),d};var Wa=Ya;Wa.default=Ya,Wa.callCount=e=>{if(!Ha.has(e))throw new Error(`The given function \`${e.name}\` is not wrapped by the \`onetime\` package`);return Ha.get(e)};var Xa=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.SIGNALS=void 0,a.SIGNALS=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:!0},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:!0},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:!0},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}]}),Ka=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.SIGRTMAX=a.getRealtimeSignals=void 0,a.getRealtimeSignals=function(){return Array.from({length:i-t+1},p)};const p=function(e,a){return{name:`SIGRT${a+1}`,number:t+a,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}},t=34,i=64;a.SIGRTMAX=i}),Ja=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.getSignals=void 0,a.getSignals=function(){const e=(0,Ka.getRealtimeSignals)();return[...Xa.SIGNALS,...e].map(p)};const p=function({name:e,number:a,description:p,action:t,forced:i=!1,standard:d}){const{signals:{[e]:s}}=T.default.constants,r=void 0!==s;return{name:e,number:r?s:a,description:p,supported:r,action:t,forced:i,standard:d}}}),Za=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.signalsByNumber=a.signalsByName=void 0;const p=(0,Ja.getSignals)().reduce(function(e,{name:a,number:p,description:t,supported:i,action:d,forced:s,standard:r}){return{...e,[a]:{name:a,number:p,description:t,supported:i,action:d,forced:s,standard:r}}},{});a.signalsByName=p;const t=function(){const e=(0,Ja.getSignals)(),a=Array.from({length:Ka.SIGRTMAX+1},(a,p)=>function(e,a){const p=function(e,a){const p=a.find(({name:a})=>T.default.constants.signals[a]===e);return void 0!==p?p:a.find(a=>a.number===e)}(e,a);if(void 0===p)return{};const{name:t,description:i,supported:d,action:s,forced:r,standard:n}=p;return{[e]:{name:t,number:e,description:i,supported:d,action:s,forced:r,standard:n}}}(p,e));return Object.assign({},...a)}();a.signalsByNumber=t});const{signalsByName:Qa}=Za;var ep=({stdout:e,stderr:a,all:p,error:t,signal:i,exitCode:d,command:s,escapedCommand:r,timedOut:n,isCanceled:l,killed:o,parsed:{options:{timeout:m}}})=>{const u=void 0===(i=null===i?void 0:i)?void 0:Qa[i].description,c=(({timedOut:e,timeout:a,errorCode:p,signal:t,signalDescription:i,exitCode:d,isCanceled:s})=>e?`timed out after ${a} milliseconds`:s?"was canceled":void 0!==p?`failed with ${p}`:void 0!==t?`was killed with ${t} (${i})`:void 0!==d?`failed with exit code ${d}`:"failed")({timedOut:n,timeout:m,errorCode:t&&t.code,signal:i,signalDescription:u,exitCode:d=null===d?void 0:d,isCanceled:l}),h=`Command ${c}: ${s}`,f="[object Error]"===Object.prototype.toString.call(t),v=f?`${h}\n${t.message}`:h,w=[v,a,e].filter(Boolean).join("\n");return f?(t.originalMessage=t.message,t.message=w):t=new Error(w),t.shortMessage=v,t.command=s,t.escapedCommand=r,t.exitCode=d,t.signal=i,t.signalDescription=u,t.stdout=e,t.stderr=a,void 0!==p&&(t.all=p),"bufferedData"in t&&delete t.bufferedData,t.failed=!0,t.timedOut=Boolean(n),t.isCanceled=l,t.killed=o&&!n,t};const ap=["stdin","stdout","stderr"],pp=e=>{if(!e)return;const{stdio:a}=e;if(void 0===a)return ap.map(a=>e[a]);if((e=>ap.some(a=>void 0!==e[a]))(e))throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${ap.map(e=>`\`${e}\``).join(", ")}`);if("string"==typeof a)return a;if(!Array.isArray(a))throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof a}\``);const p=Math.max(a.length,ap.length);return Array.from({length:p},(e,p)=>a[p])};var tp=pp;tp.node=e=>{const a=pp(e);return"ipc"===a?"ipc":void 0===a||"string"==typeof a?[a,a,a,"ipc"]:a.includes("ipc")?a:[...a,"ipc"]};var ip=B(function(e){e.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"],"win32"!==process.platform&&e.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT"),"linux"===process.platform&&e.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")}),dp=B(function(e){var a=j.process;const p=function(e){return e&&"object"==typeof e&&"function"==typeof e.removeListener&&"function"==typeof e.emit&&"function"==typeof e.reallyExit&&"function"==typeof e.listeners&&"function"==typeof e.kill&&"number"==typeof e.pid&&"function"==typeof e.on};if(p(a)){var t,i=y.default,d=ip,s=/^win/i.test(a.platform),r=b.default;"function"!=typeof r&&(r=r.EventEmitter),a.__signal_exit_emitter__?t=a.__signal_exit_emitter__:((t=a.__signal_exit_emitter__=new r).count=0,t.emitted={}),t.infinite||(t.setMaxListeners(Infinity),t.infinite=!0),e.exports=function(e,a){if(!p(j.process))return function(){};i.equal(typeof e,"function","a callback must be provided for exit handler"),!1===m&&u();var d="exit";return a&&a.alwaysLast&&(d="afterexit"),t.on(d,e),function(){t.removeListener(d,e),0===t.listeners("exit").length&&0===t.listeners("afterexit").length&&n()}};var n=function(){m&&p(j.process)&&(m=!1,d.forEach(function(e){try{a.removeListener(e,o[e])}catch(e){}}),a.emit=f,a.reallyExit=c,t.count-=1)};e.exports.unload=n;var l=function(e,a,p){t.emitted[e]||(t.emitted[e]=!0,t.emit(e,a,p))},o={};d.forEach(function(e){o[e]=function(){p(j.process)&&a.listeners(e).length===t.count&&(n(),l("exit",null,e),l("afterexit",null,e),s&&"SIGHUP"===e&&(e="SIGINT"),a.kill(a.pid,e))}}),e.exports.signals=function(){return d};var m=!1,u=function(){!m&&p(j.process)&&(m=!0,t.count+=1,d=d.filter(function(e){try{return a.on(e,o[e]),!0}catch(e){return!1}}),a.emit=v,a.reallyExit=h)};e.exports.load=u;var c=a.reallyExit,h=function(e){p(j.process)&&(a.exitCode=e||0,l("exit",a.exitCode,null),l("afterexit",a.exitCode,null),c.call(a,a.exitCode))},f=a.emit,v=function(e,t){if("exit"===e&&p(j.process)){void 0!==t&&(a.exitCode=t);var i=f.apply(this,arguments);return l("exit",a.exitCode,null),l("afterexit",a.exitCode,null),i}return f.apply(this,arguments)}}else e.exports=function(){return function(){}}}),sp={spawnedKill:(e,a="SIGTERM",p={})=>{const t=e(a);return((e,a,p,t)=>{if(!((e,{forceKillAfterTimeout:a},p)=>(e=>e===T.default.constants.signals.SIGTERM||"string"==typeof e&&"SIGTERM"===e.toUpperCase())(e)&&!1!==a&&p)(a,p,t))return;const i=(({forceKillAfterTimeout:e=!0})=>{if(!0===e)return 5e3;if(!Number.isFinite(e)||e<0)throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`);return e})(p),d=setTimeout(()=>{e("SIGKILL")},i);d.unref&&d.unref()})(e,a,p,t),t},spawnedCancel:(e,a)=>{e.kill()&&(a.isCanceled=!0)},setupTimeout:(e,{timeout:a,killSignal:p="SIGTERM"},t)=>{if(0===a||void 0===a)return t;let i;const d=new Promise((t,d)=>{i=setTimeout(()=>{((e,a,p)=>{e.kill(a),p(Object.assign(new Error("Timed out"),{timedOut:!0,signal:a}))})(e,p,d)},a)}),s=t.finally(()=>{clearTimeout(i)});return Promise.race([d,s])},validateTimeout:({timeout:e})=>{if(void 0!==e&&(!Number.isFinite(e)||e<0))throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`)},setExitHandler:async(e,{cleanup:a,detached:p},t)=>{if(!a||p)return t;const i=dp(()=>{e.kill()});return t.finally(()=>{i()})}};const rp=e=>null!==e&&"object"==typeof e&&"function"==typeof e.pipe;rp.writable=e=>rp(e)&&!1!==e.writable&&"function"==typeof e._write&&"object"==typeof e._writableState,rp.readable=e=>rp(e)&&!1!==e.readable&&"function"==typeof e._read&&"object"==typeof e._readableState,rp.duplex=e=>rp.writable(e)&&rp.readable(e),rp.transform=e=>rp.duplex(e)&&"function"==typeof e._transform&&"object"==typeof e._transformState;var np=rp;const{PassThrough:lp}=A.default,{constants:op}=D.default,{promisify:mp}=V.default,up=mp(A.default.pipeline);class cp extends Error{constructor(){super("maxBuffer exceeded"),this.name="MaxBufferError"}}async function hp(e,a){if(!e)throw new Error("Expected a stream");a={maxBuffer:Infinity,...a};const{maxBuffer:p}=a,t=(e=>{e={...e};const{array:a}=e;let{encoding:p}=e;const t="buffer"===p;let i=!1;a?i=!(p||t):p=p||"utf8",t&&(p=null);const d=new lp({objectMode:i});p&&d.setEncoding(p);let s=0;const r=[];return d.on("data",e=>{r.push(e),i?s=r.length:s+=e.length}),d.getBufferedValue=()=>a?r:t?Buffer.concat(r,s):r.join(""),d.getBufferedLength=()=>s,d})(a);return await new Promise((a,i)=>{const d=e=>{e&&t.getBufferedLength()<=op.MAX_LENGTH&&(e.bufferedData=t.getBufferedValue()),i(e)};(async()=>{try{await up(e,t),a()}catch(e){d(e)}})(),t.on("data",()=>{t.getBufferedLength()>p&&d(new cp)})}),t.getBufferedValue()}var fp=hp,vp=cp;fp.buffer=(e,a)=>hp(e,{...a,encoding:"buffer"}),fp.array=(e,a)=>hp(e,{...a,array:!0}),fp.MaxBufferError=vp;const{PassThrough:wp}=A.default,gp=async(e,a)=>{if(e){e.destroy();try{return await a}catch(e){return e.bufferedData}}},yp=(e,{encoding:a,buffer:p,maxBuffer:t})=>{if(e&&p)return a?fp(e,{encoding:a,maxBuffer:t}):fp.buffer(e,{maxBuffer:t})};var bp={handleInput:(e,a)=>{void 0!==a&&void 0!==e.stdin&&(np(a)?a.pipe(e.stdin):e.stdin.end(a))},makeAllStream:(e,{all:a})=>{if(!a||!e.stdout&&!e.stderr)return;const p=function(){var e=[],a=new wp({objectMode:!0});return a.setMaxListeners(0),a.add=p,a.isEmpty=t,a.on("unpipe",i),Array.prototype.slice.call(arguments).forEach(p),a;function p(t){return Array.isArray(t)?(t.forEach(p),this):(e.push(t),t.once("end",i.bind(null,t)),t.once("error",a.emit.bind(a,"error")),t.pipe(a,{end:!1}),this)}function t(){return 0==e.length}function i(p){!(e=e.filter(function(e){return e!==p})).length&&a.readable&&a.end()}}();return e.stdout&&p.add(e.stdout),e.stderr&&p.add(e.stderr),p},getSpawnedResult:async({stdout:e,stderr:a,all:p},{encoding:t,buffer:i,maxBuffer:d},s)=>{const r=yp(e,{encoding:t,buffer:i,maxBuffer:d}),n=yp(a,{encoding:t,buffer:i,maxBuffer:d}),l=yp(p,{encoding:t,buffer:i,maxBuffer:2*d});try{return await Promise.all([s,r,n,l])}catch(t){return Promise.all([{error:t,signal:t.signal,timedOut:t.timedOut},gp(e,r),gp(a,n),gp(p,l)])}},validateInputSync:({input:e})=>{if(np(e))throw new TypeError("The `input` option cannot be a stream in sync mode")}};const Sp=(async()=>{})().constructor.prototype,Ep=["then","catch","finally"].map(e=>[e,Reflect.getOwnPropertyDescriptor(Sp,e)]);var Np={mergePromise:(e,a)=>{for(const[p,t]of Ep){const i="function"==typeof a?(...e)=>Reflect.apply(t.value,a(),e):t.value.bind(a);Reflect.defineProperty(e,p,{...t,value:i})}return e},getSpawnedPromise:e=>new Promise((a,p)=>{e.on("exit",(e,p)=>{a({exitCode:e,signal:p})}),e.on("error",e=>{p(e)}),e.stdin&&e.stdin.on("error",e=>{p(e)})})};const _p=(e,a=[])=>Array.isArray(a)?[e,...a]:[e],Tp=/^[\w.-]+$/,Dp=/"/g,Ap=/ +/g;var Vp={joinCommand:(e,a)=>_p(e,a).join(" "),getEscapedCommand:(e,a)=>_p(e,a).map(e=>(e=>"string"!=typeof e||Tp.test(e)?e:`"${e.replace(Dp,'\\"')}"`)(e)).join(" "),parseCommand:e=>{const a=[];for(const p of e.trim().split(Ap)){const e=a[a.length-1];e&&e.endsWith("\\")?a[a.length-1]=`${e.slice(0,-1)} ${p}`:a.push(p)}return a}};const{spawnedKill:Cp,spawnedCancel:Op,setupTimeout:Ip,validateTimeout:xp,setExitHandler:Rp}=sp,{handleInput:Pp,getSpawnedResult:kp,makeAllStream:Lp,validateInputSync:jp}=bp,{mergePromise:Bp,getSpawnedPromise:Fp}=Np,{joinCommand:$p,parseCommand:Mp,getEscapedCommand:Up}=Vp,Gp=(e,a,p={})=>{const t=Ba._parse(e,a,p);return e=t.command,a=t.args,(p={maxBuffer:1e8,buffer:!0,stripFinalNewline:!0,extendEnv:!0,preferLocal:!1,localDir:(p=t.options).cwd||process.cwd(),execPath:process.execPath,encoding:"utf8",reject:!0,cleanup:!0,all:!1,windowsHide:!0,...p}).env=(({env:e,extendEnv:a,preferLocal:p,localDir:t,execPath:i})=>{const d=a?{...process.env,...e}:e;return p?Ga.env({env:d,cwd:t,execPath:i}):d})(p),p.stdio=tp(p),"win32"===process.platform&&"cmd"===N.default.basename(e,".exe")&&a.unshift("/q"),{file:e,args:a,options:p,parsed:t}},qp=(e,a,p)=>"string"==typeof a||Buffer.isBuffer(a)?e.stripFinalNewline?(e=>{const a="string"==typeof e?"\n":"\n".charCodeAt(),p="string"==typeof e?"\r":"\r".charCodeAt();return e[e.length-1]===a&&(e=e.slice(0,e.length-1)),e[e.length-1]===p&&(e=e.slice(0,e.length-1)),e})(a):a:void 0===p?void 0:"",zp=(e,a,p)=>{const t=Gp(e,a,p),i=$p(e,a),d=Up(e,a);let s;xp(t.options);try{s=E.default.spawn(t.file,t.args,t.options)}catch(e){const a=new E.default.ChildProcess,p=Promise.reject(ep({error:e,stdout:"",stderr:"",all:"",command:i,escapedCommand:d,parsed:t,timedOut:!1,isCanceled:!1,killed:!1}));return Bp(a,p)}const r=Fp(s),n=Ip(s,t.options,r),l=Rp(s,t.options,n),o={isCanceled:!1};s.kill=Cp.bind(null,s.kill.bind(s)),s.cancel=Op.bind(null,s,o);const m=Wa(async()=>{const[{error:e,exitCode:a,signal:p,timedOut:r},n,m,u]=await kp(s,t.options,l),c=qp(t.options,n),h=qp(t.options,m),f=qp(t.options,u);if(e||0!==a||null!==p){const n=ep({error:e,exitCode:a,signal:p,stdout:c,stderr:h,all:f,command:i,escapedCommand:d,parsed:t,timedOut:r,isCanceled:o.isCanceled,killed:s.killed});if(!t.options.reject)return n;throw n}return{command:i,escapedCommand:d,exitCode:0,stdout:c,stderr:h,all:f,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}});return Pp(s,t.options.input),s.all=Lp(s,t.options),Bp(s,m)};var Hp=zp;Hp.sync=(e,a,p)=>{const t=Gp(e,a,p),i=$p(e,a),d=Up(e,a);let s;jp(t.options);try{s=E.default.spawnSync(t.file,t.args,t.options)}catch(e){throw ep({error:e,stdout:"",stderr:"",all:"",command:i,escapedCommand:d,parsed:t,timedOut:!1,isCanceled:!1,killed:!1})}const r=qp(t.options,s.stdout,s.error),n=qp(t.options,s.stderr,s.error);if(s.error||0!==s.status||null!==s.signal){const e=ep({stdout:r,stderr:n,error:s.error,signal:s.signal,exitCode:s.status,command:i,escapedCommand:d,parsed:t,timedOut:s.error&&"ETIMEDOUT"===s.error.code,isCanceled:!1,killed:null!==s.signal});if(!t.options.reject)return e;throw e}return{command:i,escapedCommand:d,exitCode:0,stdout:r,stderr:n,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}},Hp.command=(e,a)=>{const[p,...t]=Mp(e);return zp(p,t,a)},Hp.commandSync=(e,a)=>{const[p,...t]=Mp(e);return zp.sync(p,t,a)},Hp.node=(e,a,p={})=>{a&&!Array.isArray(a)&&"object"==typeof a&&(p=a,a=[]);const t=tp.node(p),i=process.execArgv.filter(e=>!e.startsWith("--inspect")),{nodePath:d=process.execPath,nodeOptions:s=i}=p;return zp(d,[...s,e,...Array.isArray(a)?a:[]],{...p,stdin:void 0,stdout:void 0,stderr:void 0,stdio:t,shell:!1})};var Yp=function(e){return Object.defineProperty(function(...a){if("function"!=typeof a[a.length-1])return new Promise((p,t)=>{e.call(this,...a,(e,a)=>null!=e?t(e):p(a))});e.apply(this,a)},"name",{value:e.name})},Wp=function(e){return Object.defineProperty(function(...a){const p=a[a.length-1];if("function"!=typeof p)return e.apply(this,a);e.apply(this,a.slice(0,-1)).then(e=>p(null,e),p)},"name",{value:e.name})},Xp=process.cwd,Kp=null,Jp=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return Kp||(Kp=Xp.call(process)),Kp};try{process.cwd()}catch(e){}if("function"==typeof process.chdir){var Zp=process.chdir;process.chdir=function(e){Kp=null,Zp.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,Zp)}var Qp=A.default.Stream,et=Object.getPrototypeOf||function(e){return e.__proto__},at=B(function(e){var a,p;function t(e,p){Object.defineProperty(e,a,{get:function(){return p}})}"function"==typeof Symbol&&"function"==typeof Symbol.for?(a=Symbol.for("graceful-fs.queue"),p=Symbol.for("graceful-fs.previous")):(a="___graceful-fs.queue",p="___graceful-fs.previous");var i,d=function(){};function s(e){(function(e){function a(a){return a?function(p,t,i){return a.call(e,p,t,function(e){r(e)&&(e=null),i&&i.apply(this,arguments)})}:a}function p(a){return a?function(p,t){try{return a.call(e,p,t)}catch(e){if(!r(e))throw e}}:a}function t(a){return a?function(p,t,i,d){return a.call(e,p,t,i,function(e){r(e)&&(e=null),d&&d.apply(this,arguments)})}:a}function i(a){return a?function(p,t,i){try{return a.call(e,p,t,i)}catch(e){if(!r(e))throw e}}:a}function d(a){return a?function(p,t,i){function d(e,a){a&&(a.uid<0&&(a.uid+=4294967296),a.gid<0&&(a.gid+=4294967296)),i&&i.apply(this,arguments)}return"function"==typeof t&&(i=t,t=null),t?a.call(e,p,t,d):a.call(e,p,d)}:a}function s(a){return a?function(p,t){var i=t?a.call(e,p,t):a.call(e,p);return i&&(i.uid<0&&(i.uid+=4294967296),i.gid<0&&(i.gid+=4294967296)),i}:a}function r(e){return!e||"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}var n;C.default.hasOwnProperty("O_SYMLINK")&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)&&function(e){e.lchmod=function(a,p,t){e.open(a,C.default.O_WRONLY|C.default.O_SYMLINK,p,function(a,i){a?t&&t(a):e.fchmod(i,p,function(a){e.close(i,function(e){t&&t(a||e)})})})},e.lchmodSync=function(a,p){var t,i=e.openSync(a,C.default.O_WRONLY|C.default.O_SYMLINK,p),d=!0;try{t=e.fchmodSync(i,p),d=!1}finally{if(d)try{e.closeSync(i)}catch(e){}else e.closeSync(i)}return t}}(e),e.lutimes||function(e){C.default.hasOwnProperty("O_SYMLINK")&&e.futimes?(e.lutimes=function(a,p,t,i){e.open(a,C.default.O_SYMLINK,function(a,d){a?i&&i(a):e.futimes(d,p,t,function(a){e.close(d,function(e){i&&i(a||e)})})})},e.lutimesSync=function(a,p,t){var i,d=e.openSync(a,C.default.O_SYMLINK),s=!0;try{i=e.futimesSync(d,p,t),s=!1}finally{if(s)try{e.closeSync(d)}catch(e){}else e.closeSync(d)}return i}):e.futimes&&(e.lutimes=function(e,a,p,t){t&&process.nextTick(t)},e.lutimesSync=function(){})}(e),e.chown=t(e.chown),e.fchown=t(e.fchown),e.lchown=t(e.lchown),e.chmod=a(e.chmod),e.fchmod=a(e.fchmod),e.lchmod=a(e.lchmod),e.chownSync=i(e.chownSync),e.fchownSync=i(e.fchownSync),e.lchownSync=i(e.lchownSync),e.chmodSync=p(e.chmodSync),e.fchmodSync=p(e.fchmodSync),e.lchmodSync=p(e.lchmodSync),e.stat=d(e.stat),e.fstat=d(e.fstat),e.lstat=d(e.lstat),e.statSync=s(e.statSync),e.fstatSync=s(e.fstatSync),e.lstatSync=s(e.lstatSync),e.chmod&&!e.lchmod&&(e.lchmod=function(e,a,p){p&&process.nextTick(p)},e.lchmodSync=function(){}),e.chown&&!e.lchown&&(e.lchown=function(e,a,p,t){t&&process.nextTick(t)},e.lchownSync=function(){}),"win32"===Jp&&(e.rename="function"!=typeof e.rename?e.rename:function(a){function p(p,t,i){var d=Date.now(),s=0;a(p,t,function r(n){if(n&&("EACCES"===n.code||"EPERM"===n.code)&&Date.now()-d<6e4)return setTimeout(function(){e.stat(t,function(e,d){e&&"ENOENT"===e.code?a(p,t,r):i(n)})},s),void(s<100&&(s+=10));i&&i(n)})}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.rename)),e.read="function"!=typeof e.read?e.read:function(a){function p(p,t,i,d,s,r){var n;if(r&&"function"==typeof r){var l=0;n=function(o,m,u){if(o&&"EAGAIN"===o.code&&l<10)return l++,a.call(e,p,t,i,d,s,n);r.apply(this,arguments)}}return a.call(e,p,t,i,d,s,n)}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.read),e.readSync="function"!=typeof e.readSync?e.readSync:(n=e.readSync,function(a,p,t,i,d){for(var s=0;;)try{return n.call(e,a,p,t,i,d)}catch(e){if("EAGAIN"===e.code&&s<10){s++;continue}throw e}})})(e),e.gracefulify=s,e.createReadStream=function(a,p){return new e.ReadStream(a,p)},e.createWriteStream=function(a,p){return new e.WriteStream(a,p)};var a=e.readFile;e.readFile=function(e,p,t){return"function"==typeof p&&(t=p,p=null),function e(p,t,i,d){return a(p,t,function(a){!a||"EMFILE"!==a.code&&"ENFILE"!==a.code?"function"==typeof i&&i.apply(this,arguments):r([e,[p,t,i],a,d||Date.now(),Date.now()])})}(e,p,t)};var p=e.writeFile;e.writeFile=function(e,a,t,i){return"function"==typeof t&&(i=t,t=null),function e(a,t,i,d,s){return p(a,t,i,function(p){!p||"EMFILE"!==p.code&&"ENFILE"!==p.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,t,i,d],p,s||Date.now(),Date.now()])})}(e,a,t,i)};var t=e.appendFile;t&&(e.appendFile=function(e,a,p,i){return"function"==typeof p&&(i=p,p=null),function e(a,p,i,d,s){return t(a,p,i,function(t){!t||"EMFILE"!==t.code&&"ENFILE"!==t.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,p,i,d],t,s||Date.now(),Date.now()])})}(e,a,p,i)});var i=e.copyFile;i&&(e.copyFile=function(e,a,p,t){return"function"==typeof p&&(t=p,p=0),function e(a,p,t,d,s){return i(a,p,t,function(i){!i||"EMFILE"!==i.code&&"ENFILE"!==i.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,p,t,d],i,s||Date.now(),Date.now()])})}(e,a,p,t)});var d=e.readdir;e.readdir=function(e,a,p){"function"==typeof a&&(p=a,a=null);var t=n.test(process.version)?function(e,a,p,t){return d(e,i(e,a,p,t))}:function(e,a,p,t){return d(e,a,i(e,a,p,t))};return t(e,a,p);function i(e,a,p,i){return function(d,s){!d||"EMFILE"!==d.code&&"ENFILE"!==d.code?(s&&s.sort&&s.sort(),"function"==typeof p&&p.call(this,d,s)):r([t,[e,a,p],d,i||Date.now(),Date.now()])}}};var n=/^v[0-5]\./;if("v0.8"===process.version.substr(0,4)){var l=function(e){return{ReadStream:function a(p,t){if(!(this instanceof a))return new a(p,t);Qp.call(this);var i=this;this.path=p,this.fd=null,this.readable=!0,this.paused=!1,this.flags="r",this.mode=438,this.bufferSize=65536,t=t||{};for(var d=Object.keys(t),s=0,r=d.length;s<r;s++){var n=d[s];this[n]=t[n]}if(this.encoding&&this.setEncoding(this.encoding),void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(void 0===this.end)this.end=Infinity;else if("number"!=typeof this.end)throw TypeError("end must be a Number");if(this.start>this.end)throw new Error("start must be <= end");this.pos=this.start}null===this.fd?e.open(this.path,this.flags,this.mode,function(e,a){if(e)return i.emit("error",e),void(i.readable=!1);i.fd=a,i.emit("open",a),i._read()}):process.nextTick(function(){i._read()})},WriteStream:function a(p,t){if(!(this instanceof a))return new a(p,t);Qp.call(this),this.path=p,this.fd=null,this.writable=!0,this.flags="w",this.encoding="binary",this.mode=438,this.bytesWritten=0,t=t||{};for(var i=Object.keys(t),d=0,s=i.length;d<s;d++){var r=i[d];this[r]=t[r]}if(void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(this.start<0)throw new Error("start must be >= zero");this.pos=this.start}this.busy=!1,this._queue=[],null===this.fd&&(this._open=e.open,this._queue.push([this._open,this.path,this.flags,this.mode,void 0]),this.flush())}}}(e);h=l.ReadStream,f=l.WriteStream}var o=e.ReadStream;o&&(h.prototype=Object.create(o.prototype),h.prototype.open=function(){var e=this;w(e.path,e.flags,e.mode,function(a,p){a?(e.autoClose&&e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p),e.read())})});var m=e.WriteStream;m&&(f.prototype=Object.create(m.prototype),f.prototype.open=function(){var e=this;w(e.path,e.flags,e.mode,function(a,p){a?(e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p))})}),Object.defineProperty(e,"ReadStream",{get:function(){return h},set:function(e){h=e},enumerable:!0,configurable:!0}),Object.defineProperty(e,"WriteStream",{get:function(){return f},set:function(e){f=e},enumerable:!0,configurable:!0});var u=h;Object.defineProperty(e,"FileReadStream",{get:function(){return u},set:function(e){u=e},enumerable:!0,configurable:!0});var c=f;function h(e,a){return this instanceof h?(o.apply(this,arguments),this):h.apply(Object.create(h.prototype),arguments)}function f(e,a){return this instanceof f?(m.apply(this,arguments),this):f.apply(Object.create(f.prototype),arguments)}Object.defineProperty(e,"FileWriteStream",{get:function(){return c},set:function(e){c=e},enumerable:!0,configurable:!0});var v=e.open;function w(e,a,p,t){return"function"==typeof p&&(t=p,p=null),function e(a,p,t,i,d){return v(a,p,t,function(s,n){!s||"EMFILE"!==s.code&&"ENFILE"!==s.code?"function"==typeof i&&i.apply(this,arguments):r([e,[a,p,t,i],s,d||Date.now(),Date.now()])})}(e,a,p,t)}return e.open=w,e}function r(e){d("ENQUEUE",e[0].name,e[1]),_.default[a].push(e),l()}function n(){for(var e=Date.now(),p=0;p<_.default[a].length;++p)_.default[a][p].length>2&&(_.default[a][p][3]=e,_.default[a][p][4]=e);l()}function l(){if(clearTimeout(i),i=void 0,0!==_.default[a].length){var e=_.default[a].shift(),p=e[0],t=e[1],s=e[2],r=e[3],n=e[4];if(void 0===r)d("RETRY",p.name,t),p.apply(null,t);else if(Date.now()-r>=6e4){d("TIMEOUT",p.name,t);var o=t.pop();"function"==typeof o&&o.call(null,s)}else{var m=Date.now()-n,u=Math.max(n-r,1);m>=Math.min(1.2*u,100)?(d("RETRY",p.name,t),p.apply(null,t.concat([r]))):_.default[a].push(e)}void 0===i&&(i=setTimeout(l,0))}}V.default.debuglog?d=V.default.debuglog("gfs4"):/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&(d=function(){var e=V.default.format.apply(V.default,arguments);e="GFS4: "+e.split(/\n/).join("\nGFS4: "),console.error(e)}),_.default[a]||(t(_.default,j[a]||[]),_.default.close=function(e){function a(a,p){return e.call(_.default,a,function(e){e||n(),"function"==typeof p&&p.apply(this,arguments)})}return Object.defineProperty(a,p,{value:e}),a}(_.default.close),_.default.closeSync=function(e){function a(a){e.apply(_.default,arguments),n()}return Object.defineProperty(a,p,{value:e}),a}(_.default.closeSync),/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&process.on("exit",function(){d(_.default[a]),y.default.equal(_.default[a].length,0)})),j[a]||t(j,_.default[a]),e.exports=s(function(e){if(null===e||"object"!=typeof e)return e;if(e instanceof Object)var a={__proto__:et(e)};else a=Object.create(null);return Object.getOwnPropertyNames(e).forEach(function(p){Object.defineProperty(a,p,Object.getOwnPropertyDescriptor(e,p))}),a}(_.default)),process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!_.default.__patched&&(e.exports=s(_.default),_.default.__patched=!0)}),pt={checkPath:function(e){if("win32"===process.platform&&/[<>:"|?*]/.test(e.replace(N.default.parse(e).root,""))){const a=new Error(`Path contains invalid characters: ${e}`);throw a.code="EINVAL",a}}},tt=B(function(e,a){const p=Yp,t=["access","appendFile","chmod","chown","close","copyFile","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","opendir","readdir","readFile","readlink","realpath","rename","rm","rmdir","stat","symlink","truncate","unlink","utimes","writeFile"].filter(e=>"function"==typeof at[e]);Object.assign(a,at),t.forEach(e=>{a[e]=p(at[e])}),a.exists=function(e,a){return"function"==typeof a?at.exists(e,a):new Promise(a=>at.exists(e,a))},a.read=function(e,a,p,t,i,d){return"function"==typeof d?at.read(e,a,p,t,i,d):new Promise((d,s)=>{at.read(e,a,p,t,i,(e,a,p)=>{if(e)return s(e);d({bytesRead:a,buffer:p})})})},a.write=function(e,a,...p){return"function"==typeof p[p.length-1]?at.write(e,a,...p):new Promise((t,i)=>{at.write(e,a,...p,(e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffer:p})})})},"function"==typeof at.writev&&(a.writev=function(e,a,...p){return"function"==typeof p[p.length-1]?at.writev(e,a,...p):new Promise((t,i)=>{at.writev(e,a,...p,(e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffers:p})})})}),"function"==typeof at.realpath.native?a.realpath.native=p(at.realpath.native):process.emitWarning("fs.realpath.native is not a function. Is fs being monkey-patched?","Warning","fs-extra-WARN0003")}),it=pt;const{checkPath:dt}=it,st=e=>"number"==typeof e?e:{mode:511,...e}.mode;var rt={makeDir:async(e,a)=>(dt(e),tt.mkdir(e,{mode:st(a),recursive:!0})),makeDirSync:(e,a)=>(dt(e),tt.mkdirSync(e,{mode:st(a),recursive:!0}))};const nt=Wp,{makeDir:lt,makeDirSync:ot}=rt,mt=nt(lt);var ut={mkdirs:mt,mkdirsSync:ot,mkdirp:mt,mkdirpSync:ot,ensureDir:mt,ensureDirSync:ot},ct={pathExists:Wp(function(e){return tt.access(e).then(()=>!0).catch(()=>!1)}),pathExistsSync:tt.existsSync};function ht(e,a,p){const t=p.dereference?e=>tt.stat(e,{bigint:!0}):e=>tt.lstat(e,{bigint:!0});return Promise.all([t(e),t(a).catch(e=>{if("ENOENT"===e.code)return null;throw e})]).then(([e,a])=>({srcStat:e,destStat:a}))}function ft(e,a){return a.ino&&a.dev&&a.ino===e.ino&&a.dev===e.dev}function vt(e,a){const p=N.default.resolve(e).split(N.default.sep).filter(e=>e),t=N.default.resolve(a).split(N.default.sep).filter(e=>e);return p.reduce((e,a,p)=>e&&t[p]===a,!0)}function wt(e,a,p){return`Cannot ${p} '${e}' to a subdirectory of itself, '${a}'.`}var gt={checkPaths:function(e,a,p,t,i){V.default.callbackify(ht)(e,a,t,(t,d)=>{if(t)return i(t);const{srcStat:s,destStat:r}=d;if(r){if(ft(s,r)){const t=N.default.basename(e),d=N.default.basename(a);return"move"===p&&t!==d&&t.toLowerCase()===d.toLowerCase()?i(null,{srcStat:s,destStat:r,isChangingCase:!0}):i(new Error("Source and destination must not be the same."))}if(s.isDirectory()&&!r.isDirectory())return i(new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`));if(!s.isDirectory()&&r.isDirectory())return i(new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`))}return s.isDirectory()&&vt(e,a)?i(new Error(wt(e,a,p))):i(null,{srcStat:s,destStat:r})})},checkPathsSync:function(e,a,p,t){const{srcStat:i,destStat:d}=function(e,a,p){let t;const i=p.dereference?e=>tt.statSync(e,{bigint:!0}):e=>tt.lstatSync(e,{bigint:!0}),d=i(e);try{t=i(a)}catch(e){if("ENOENT"===e.code)return{srcStat:d,destStat:null};throw e}return{srcStat:d,destStat:t}}(e,a,t);if(d){if(ft(i,d)){const t=N.default.basename(e),s=N.default.basename(a);if("move"===p&&t!==s&&t.toLowerCase()===s.toLowerCase())return{srcStat:i,destStat:d,isChangingCase:!0};throw new Error("Source and destination must not be the same.")}if(i.isDirectory()&&!d.isDirectory())throw new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`);if(!i.isDirectory()&&d.isDirectory())throw new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`)}if(i.isDirectory()&&vt(e,a))throw new Error(wt(e,a,p));return{srcStat:i,destStat:d}},checkParentPaths:function e(a,p,t,i,d){const s=N.default.resolve(N.default.dirname(a)),r=N.default.resolve(N.default.dirname(t));if(r===s||r===N.default.parse(r).root)return d();tt.stat(r,{bigint:!0},(s,n)=>s?"ENOENT"===s.code?d():d(s):ft(p,n)?d(new Error(wt(a,t,i))):e(a,p,r,i,d))},checkParentPathsSync:function e(a,p,t,i){const d=N.default.resolve(N.default.dirname(a)),s=N.default.resolve(N.default.dirname(t));if(s===d||s===N.default.parse(s).root)return;let r;try{r=tt.statSync(s,{bigint:!0})}catch(e){if("ENOENT"===e.code)return;throw e}if(ft(p,r))throw new Error(wt(a,t,i));return e(a,p,s,i)},isSrcSubdir:vt,areIdentical:ft},yt=ut,bt=ct,St=gt;const Et=yt.mkdirs,Nt=bt.pathExists;function _t(e,a,p,t,i){const d=N.default.dirname(p);Nt(d,(s,r)=>s?i(s):r?Dt(e,a,p,t,i):void Et(d,d=>d?i(d):Dt(e,a,p,t,i)))}function Tt(e,a,p,t,i,d){Promise.resolve(i.filter(p,t)).then(s=>s?e(a,p,t,i,d):d(),e=>d(e))}function Dt(e,a,p,t,i){(t.dereference?at.stat:at.lstat)(a,(d,s)=>d?i(d):s.isDirectory()?function(e,a,p,t,i,d){return a?Ot(p,t,i,d):function(e,a,p,t,i){at.mkdir(p,d=>{if(d)return i(d);Ot(a,p,t,a=>a?i(a):Ct(p,e,i))})}(e.mode,p,t,i,d)}(s,e,a,p,t,i):s.isFile()||s.isCharacterDevice()||s.isBlockDevice()?function(e,a,p,t,i,d){return a?function(e,a,p,t,i){if(!t.overwrite)return t.errorOnExist?i(new Error(`'${p}' already exists`)):i();at.unlink(p,d=>d?i(d):At(e,a,p,t,i))}(e,p,t,i,d):At(e,p,t,i,d)}(s,e,a,p,t,i):s.isSymbolicLink()?function(e,a,p,t,i){at.readlink(a,(a,d)=>a?i(a):(t.dereference&&(d=N.default.resolve(process.cwd(),d)),e?void at.readlink(p,(a,s)=>a?"EINVAL"===a.code||"UNKNOWN"===a.code?at.symlink(d,p,i):i(a):(t.dereference&&(s=N.default.resolve(process.cwd(),s)),St.isSrcSubdir(d,s)?i(new Error(`Cannot copy '${d}' to a subdirectory of itself, '${s}'.`)):e.isDirectory()&&St.isSrcSubdir(s,d)?i(new Error(`Cannot overwrite '${s}' with '${d}'.`)):function(e,a,p){at.unlink(a,t=>t?p(t):at.symlink(e,a,p))}(d,p,i))):at.symlink(d,p,i)))}(e,a,p,t,i):s.isSocket()?i(new Error(`Cannot copy a socket file: ${a}`)):s.isFIFO()?i(new Error(`Cannot copy a FIFO pipe: ${a}`)):i(new Error(`Unknown file: ${a}`)))}function At(e,a,p,t,i){at.copyFile(a,p,d=>d?i(d):t.preserveTimestamps?function(e,a,p,t){return function(e){return 0==(128&e)}(e)?function(e,a,p){return Ct(e,128|a,p)}(p,e,i=>i?t(i):Vt(e,a,p,t)):Vt(e,a,p,t)}(e.mode,a,p,i):Ct(p,e.mode,i))}function Vt(e,a,p,t){!function(e,a,p){at.stat(e,(e,t)=>e?p(e):function(e,a,p,t){at.open(e,"r+",(e,i)=>{if(e)return t(e);at.futimes(i,a,p,e=>{at.close(i,a=>{t&&t(e||a)})})})}(a,t.atime,t.mtime,p))}(a,p,a=>a?t(a):Ct(p,e,t))}function Ct(e,a,p){return at.chmod(e,a,p)}function Ot(e,a,p,t){at.readdir(e,(i,d)=>i?t(i):It(d,e,a,p,t))}function It(e,a,p,t,i){const d=e.pop();return d?function(e,a,p,t,i,d){const s=N.default.join(p,a),r=N.default.join(t,a);St.checkPaths(s,r,"copy",i,(a,n)=>{if(a)return d(a);const{destStat:l}=n;!function(e,a,p,t,i){t.filter?Tt(Dt,e,a,p,t,i):Dt(e,a,p,t,i)}(l,s,r,i,a=>a?d(a):It(e,p,t,i,d))})}(e,d,a,p,t,i):i()}const xt=yt.mkdirsSync;function Rt(e,a,p,t){const i=(t.dereference?at.statSync:at.lstatSync)(a);if(i.isDirectory())return function(e,a,p,t,i){return a?Lt(p,t,i):function(e,a,p,t){return at.mkdirSync(p),Lt(a,p,t),kt(p,e)}(e.mode,p,t,i)}(i,e,a,p,t);if(i.isFile()||i.isCharacterDevice()||i.isBlockDevice())return function(e,a,p,t,i){return a?function(e,a,p,t){if(t.overwrite)return at.unlinkSync(p),Pt(e,a,p,t);if(t.errorOnExist)throw new Error(`'${p}' already exists`)}(e,p,t,i):Pt(e,p,t,i)}(i,e,a,p,t);if(i.isSymbolicLink())return function(e,a,p,t){let i=at.readlinkSync(a);if(t.dereference&&(i=N.default.resolve(process.cwd(),i)),e){let e;try{e=at.readlinkSync(p)}catch(e){if("EINVAL"===e.code||"UNKNOWN"===e.code)return at.symlinkSync(i,p);throw e}if(t.dereference&&(e=N.default.resolve(process.cwd(),e)),St.isSrcSubdir(i,e))throw new Error(`Cannot copy '${i}' to a subdirectory of itself, '${e}'.`);if(at.statSync(p).isDirectory()&&St.isSrcSubdir(e,i))throw new Error(`Cannot overwrite '${e}' with '${i}'.`);return function(e,a){return at.unlinkSync(a),at.symlinkSync(e,a)}(i,p)}return at.symlinkSync(i,p)}(e,a,p,t);if(i.isSocket())throw new Error(`Cannot copy a socket file: ${a}`);if(i.isFIFO())throw new Error(`Cannot copy a FIFO pipe: ${a}`);throw new Error(`Unknown file: ${a}`)}function Pt(e,a,p,t){return at.copyFileSync(a,p),t.preserveTimestamps&&function(e,a,p){(function(e){return 0==(128&e)})(e)&&function(e,a){kt(e,128|a)}(p,e),function(e,a){const p=at.statSync(e);!function(e,a,p){const t=at.openSync(e,"r+");at.futimesSync(t,a,p),at.closeSync(t)}(a,p.atime,p.mtime)}(a,p)}(e.mode,a,p),kt(p,e.mode)}function kt(e,a){return at.chmodSync(e,a)}function Lt(e,a,p){at.readdirSync(e).forEach(t=>function(e,a,p,t){const i=N.default.join(a,e),d=N.default.join(p,e),{destStat:s}=St.checkPathsSync(i,d,"copy",t);return function(e,a,p,t){if(!t.filter||t.filter(a,p))return Rt(e,a,p,t)}(s,i,d,t)}(t,e,a,p))}var jt={copy:Yp(function(e,a,p,t){"function"!=typeof p||t?"function"==typeof p&&(p={filter:p}):(t=p,p={}),t=t||function(){},(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0001"),St.checkPaths(e,a,"copy",p,(i,d)=>{if(i)return t(i);const{srcStat:s,destStat:r}=d;St.checkParentPaths(e,s,a,"copy",i=>i?t(i):p.filter?Tt(_t,r,e,a,p,t):_t(r,e,a,p,t))})}),copySync:function(e,a,p){"function"==typeof p&&(p={filter:p}),(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0002");const{srcStat:t,destStat:i}=St.checkPathsSync(e,a,"copy",p);return St.checkParentPathsSync(e,t,a,"copy"),function(e,a,p,t){if(t.filter&&!t.filter(a,p))return;const i=N.default.dirname(p);return at.existsSync(i)||xt(i),Rt(e,a,p,t)}(i,e,a,p)}};const Bt="win32"===process.platform;function Ft(e){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach(a=>{e[a]=e[a]||at[a],e[a+="Sync"]=e[a]||at[a]}),e.maxBusyTries=e.maxBusyTries||3}function $t(e,a,p){let t=0;"function"==typeof a&&(p=a,a={}),y.default(e,"rimraf: missing path"),y.default.strictEqual(typeof e,"string","rimraf: path should be a string"),y.default.strictEqual(typeof p,"function","rimraf: callback function required"),y.default(a,"rimraf: invalid options argument provided"),y.default.strictEqual(typeof a,"object","rimraf: options should be object"),Ft(a),Mt(e,a,function i(d){if(d){if(("EBUSY"===d.code||"ENOTEMPTY"===d.code||"EPERM"===d.code)&&t<a.maxBusyTries)return t++,setTimeout(()=>Mt(e,a,i),100*t);"ENOENT"===d.code&&(d=null)}p(d)})}function Mt(e,a,p){y.default(e),y.default(a),y.default("function"==typeof p),a.lstat(e,(t,i)=>t&&"ENOENT"===t.code?p(null):t&&"EPERM"===t.code&&Bt?Ut(e,a,t,p):i&&i.isDirectory()?qt(e,a,t,p):void a.unlink(e,t=>{if(t){if("ENOENT"===t.code)return p(null);if("EPERM"===t.code)return Bt?Ut(e,a,t,p):qt(e,a,t,p);if("EISDIR"===t.code)return qt(e,a,t,p)}return p(t)}))}function Ut(e,a,p,t){y.default(e),y.default(a),y.default("function"==typeof t),a.chmod(e,438,i=>{i?t("ENOENT"===i.code?null:p):a.stat(e,(i,d)=>{i?t("ENOENT"===i.code?null:p):d.isDirectory()?qt(e,a,p,t):a.unlink(e,t)})})}function Gt(e,a,p){let t;y.default(e),y.default(a);try{a.chmodSync(e,438)}catch(e){if("ENOENT"===e.code)return;throw p}try{t=a.statSync(e)}catch(e){if("ENOENT"===e.code)return;throw p}t.isDirectory()?Ht(e,a,p):a.unlinkSync(e)}function qt(e,a,p,t){y.default(e),y.default(a),y.default("function"==typeof t),a.rmdir(e,i=>{!i||"ENOTEMPTY"!==i.code&&"EEXIST"!==i.code&&"EPERM"!==i.code?t(i&&"ENOTDIR"===i.code?p:i):function(e,a,p){y.default(e),y.default(a),y.default("function"==typeof p),a.readdir(e,(t,i)=>{if(t)return p(t);let d,s=i.length;if(0===s)return a.rmdir(e,p);i.forEach(t=>{$t(N.default.join(e,t),a,t=>{if(!d)return t?p(d=t):void(0==--s&&a.rmdir(e,p))})})})}(e,a,t)})}function zt(e,a){let p;Ft(a=a||{}),y.default(e,"rimraf: missing path"),y.default.strictEqual(typeof e,"string","rimraf: path should be a string"),y.default(a,"rimraf: missing options"),y.default.strictEqual(typeof a,"object","rimraf: options should be object");try{p=a.lstatSync(e)}catch(p){if("ENOENT"===p.code)return;"EPERM"===p.code&&Bt&&Gt(e,a,p)}try{p&&p.isDirectory()?Ht(e,a,null):a.unlinkSync(e)}catch(p){if("ENOENT"===p.code)return;if("EPERM"===p.code)return Bt?Gt(e,a,p):Ht(e,a,p);if("EISDIR"!==p.code)throw p;Ht(e,a,p)}}function Ht(e,a,p){y.default(e),y.default(a);try{a.rmdirSync(e)}catch(t){if("ENOTDIR"===t.code)throw p;if("ENOTEMPTY"===t.code||"EEXIST"===t.code||"EPERM"===t.code)!function(e,a){if(y.default(e),y.default(a),a.readdirSync(e).forEach(p=>zt(N.default.join(e,p),a)),!Bt)return a.rmdirSync(e,a);{const p=Date.now();do{try{return a.rmdirSync(e,a)}catch{}}while(Date.now()-p<500)}}(e,a);else if("ENOENT"!==t.code)throw t}}var Yt=$t;$t.sync=zt;var Wt=Yt,Xt={remove:Yp(function(e,a){if(at.rm)return at.rm(e,{recursive:!0,force:!0},a);Wt(e,a)}),removeSync:function(e){if(at.rmSync)return at.rmSync(e,{recursive:!0,force:!0});Wt.sync(e)}},Kt=Xt;const Jt=Wp(async function(e){let a;try{a=await tt.readdir(e)}catch{return yt.mkdirs(e)}return Promise.all(a.map(a=>Kt.remove(N.default.join(e,a))))});function Zt(e){let a;try{a=tt.readdirSync(e)}catch{return yt.mkdirsSync(e)}a.forEach(a=>{a=N.default.join(e,a),Kt.removeSync(a)})}var Qt={emptyDirSync:Zt,emptydirSync:Zt,emptyDir:Jt,emptydir:Jt},ei={createFile:Yp(function(e,a){function p(){at.writeFile(e,"",e=>{if(e)return a(e);a()})}at.stat(e,(t,i)=>{if(!t&&i.isFile())return a();const d=N.default.dirname(e);at.stat(d,(e,t)=>{if(e)return"ENOENT"===e.code?yt.mkdirs(d,e=>{if(e)return a(e);p()}):a(e);t.isDirectory()?p():at.readdir(d,e=>{if(e)return a(e)})})})}),createFileSync:function(e){let a;try{a=at.statSync(e)}catch{}if(a&&a.isFile())return;const p=N.default.dirname(e);try{at.statSync(p).isDirectory()||at.readdirSync(p)}catch(e){if(!e||"ENOENT"!==e.code)throw e;yt.mkdirsSync(p)}at.writeFileSync(e,"")}};const ai=Yp,pi=bt.pathExists,{areIdentical:ti}=St;var ii={createLink:ai(function(e,a,p){function t(e,a){at.link(e,a,e=>{if(e)return p(e);p(null)})}at.lstat(a,(i,d)=>{at.lstat(e,(i,s)=>{if(i)return i.message=i.message.replace("lstat","ensureLink"),p(i);if(d&&ti(s,d))return p(null);const r=N.default.dirname(a);pi(r,(i,d)=>i?p(i):d?t(e,a):void yt.mkdirs(r,i=>{if(i)return p(i);t(e,a)}))})})}),createLinkSync:function(e,a){let p;try{p=at.lstatSync(a)}catch{}try{const a=at.lstatSync(e);if(p&&ti(a,p))return}catch(e){throw e.message=e.message.replace("lstat","ensureLink"),e}const t=N.default.dirname(a);return at.existsSync(t)||yt.mkdirsSync(t),at.linkSync(e,a)}};const di=bt.pathExists,si=Yp,ri=yt.mkdirs,ni=yt.mkdirsSync,li=bt.pathExists,{areIdentical:oi}=St;function mi(e,a,p,t){!function(e,a,p){if(N.default.isAbsolute(e))return at.lstat(e,a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:e}));{const t=N.default.dirname(a),i=N.default.join(t,e);di(i,(a,d)=>a?p(a):d?p(null,{toCwd:i,toDst:e}):at.lstat(e,a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:N.default.relative(t,e)})))}}(e,a,(i,d)=>{if(i)return t(i);e=d.toDst,function(e,a,p){if(p="function"==typeof a?a:p,a="function"!=typeof a&&a)return p(null,a);at.lstat(e,(e,t)=>{if(e)return p(null,"file");a=t&&t.isDirectory()?"dir":"file",p(null,a)})}(d.toCwd,p,(p,i)=>{if(p)return t(p);const d=N.default.dirname(a);li(d,(p,s)=>p?t(p):s?tt.symlink(e,a,i,t):void ri(d,p=>{if(p)return t(p);tt.symlink(e,a,i,t)}))})})}var ui=ei,ci=ii,hi={createSymlink:si(function(e,a,p,t){t="function"==typeof p?p:t,p="function"!=typeof p&&p,tt.lstat(a,(i,d)=>{!i&&d.isSymbolicLink()?Promise.all([tt.stat(e),tt.stat(a)]).then(([i,d])=>{if(oi(i,d))return t(null);mi(e,a,p,t)}):mi(e,a,p,t)})}),createSymlinkSync:function(e,a,p){let t;try{t=tt.lstatSync(a)}catch{}if(t&&t.isSymbolicLink()){const p=tt.statSync(e),t=tt.statSync(a);if(oi(p,t))return}const i=function(e,a){let p;if(N.default.isAbsolute(e)){if(p=at.existsSync(e),!p)throw new Error("absolute srcpath does not exist");return{toCwd:e,toDst:e}}{const t=N.default.dirname(a),i=N.default.join(t,e);if(p=at.existsSync(i),p)return{toCwd:i,toDst:e};if(p=at.existsSync(e),!p)throw new Error("relative srcpath does not exist");return{toCwd:e,toDst:N.default.relative(t,e)}}}(e,a);e=i.toDst,p=function(e,a){let p;if(a)return a;try{p=at.lstatSync(e)}catch{return"file"}return p&&p.isDirectory()?"dir":"file"}(i.toCwd,p);const d=N.default.dirname(a);return tt.existsSync(d)||ni(d),tt.symlinkSync(e,a,p)}};const{createFile:fi,createFileSync:vi}=ui,{createLink:wi,createLinkSync:gi}=ci,{createSymlink:yi,createSymlinkSync:bi}=hi;var Si={createFile:fi,createFileSync:vi,ensureFile:fi,ensureFileSync:vi,createLink:wi,createLinkSync:gi,ensureLink:wi,ensureLinkSync:gi,createSymlink:yi,createSymlinkSync:bi,ensureSymlink:yi,ensureSymlinkSync:bi},Ei={stringify:function(e,a={}){const p=a.EOL||"\n";return JSON.stringify(e,a?a.replacer:null,a.spaces).replace(/\n/g,p)+p},stripBom:function(e){return Buffer.isBuffer(e)&&(e=e.toString("utf8")),e.replace(/^\uFEFF/,"")}},Ni=function(e){return Object.defineProperty(function(...a){if("function"!=typeof a[a.length-1])return new Promise((p,t)=>{e.apply(this,a.concat([(e,a)=>e?t(e):p(a)]))});e.apply(this,a)},"name",{value:e.name})},_i=function(e){return Object.defineProperty(function(...a){const p=a[a.length-1];if("function"!=typeof p)return e.apply(this,a);e.apply(this,a.slice(0,-1)).then(e=>p(null,e),p)},"name",{value:e.name})};let Ti;try{Ti=at}catch(e){Ti=_.default}const{stringify:Di,stripBom:Ai}=Ei,Vi=_i(async function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||Ti,t=!("throws"in a)||a.throws;let i,d=await Ni(p.readFile)(e,a);d=Ai(d);try{i=JSON.parse(d,a?a.reviver:null)}catch(a){if(t)throw a.message=`${e}: ${a.message}`,a;return null}return i}),Ci=_i(async function(e,a,p={}){const t=p.fs||Ti,i=Di(a,p);await Ni(t.writeFile)(e,i,p)}),Oi={readFile:Vi,readFileSync:function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||Ti,t=!("throws"in a)||a.throws;try{let t=p.readFileSync(e,a);return t=Ai(t),JSON.parse(t,a.reviver)}catch(a){if(t)throw a.message=`${e}: ${a.message}`,a;return null}},writeFile:Ci,writeFileSync:function(e,a,p={}){const t=p.fs||Ti,i=Di(a,p);return t.writeFileSync(e,i,p)}};var Ii={readJson:Oi.readFile,readJsonSync:Oi.readFileSync,writeJson:Oi.writeFile,writeJsonSync:Oi.writeFileSync};const xi=bt.pathExists;var Ri={outputFile:Yp(function(e,a,p,t){"function"==typeof p&&(t=p,p="utf8");const i=N.default.dirname(e);xi(i,(d,s)=>d?t(d):s?at.writeFile(e,a,p,t):void yt.mkdirs(i,i=>{if(i)return t(i);at.writeFile(e,a,p,t)}))}),outputFileSync:function(e,...a){const p=N.default.dirname(e);if(at.existsSync(p))return at.writeFileSync(e,...a);yt.mkdirsSync(p),at.writeFileSync(e,...a)}},Pi=Ri;const{stringify:ki}=Ei,{outputFile:Li}=Pi,{stringify:ji}=Ei,{outputFileSync:Bi}=Pi;var Fi=Ii;Fi.outputJson=Wp(async function(e,a,p={}){const t=ki(a,p);await Li(e,t,p)}),Fi.outputJsonSync=function(e,a,p){const t=ji(a,p);Bi(e,t,p)},Fi.outputJSON=Fi.outputJson,Fi.outputJSONSync=Fi.outputJsonSync,Fi.writeJSON=Fi.writeJson,Fi.writeJSONSync=Fi.writeJsonSync,Fi.readJSON=Fi.readJson,Fi.readJSONSync=Fi.readJsonSync;var $i=jt;const Mi=$i.copy,Ui=Kt.remove,Gi=yt.mkdirp,qi=bt.pathExists;function zi(e,a,p,t,i){return t?Hi(e,a,p,i):p?Ui(a,t=>t?i(t):Hi(e,a,p,i)):void qi(a,(t,d)=>t?i(t):d?i(new Error("dest already exists.")):Hi(e,a,p,i))}function Hi(e,a,p,t){at.rename(e,a,i=>i?"EXDEV"!==i.code?t(i):function(e,a,p,t){Mi(e,a,{overwrite:p,errorOnExist:!0},a=>a?t(a):Ui(e,t))}(e,a,p,t):t())}const Yi=$i.copySync,Wi=Kt.removeSync,Xi=yt.mkdirpSync;function Ki(e,a,p){try{at.renameSync(e,a)}catch(t){if("EXDEV"!==t.code)throw t;return function(e,a,p){return Yi(e,a,{overwrite:p,errorOnExist:!0}),Wi(e)}(e,a,p)}}var Ji=Qt,Zi=Si,Qi=Fi,ed={move:Yp(function(e,a,p,t){"function"==typeof p&&(t=p,p={});const i=(p=p||{}).overwrite||p.clobber||!1;St.checkPaths(e,a,"move",p,(p,d)=>{if(p)return t(p);const{srcStat:s,isChangingCase:r=!1}=d;St.checkParentPaths(e,s,a,"move",p=>p?t(p):function(e){const a=N.default.dirname(e);return N.default.parse(a).root===a}(a)?zi(e,a,i,r,t):void Gi(N.default.dirname(a),p=>p?t(p):zi(e,a,i,r,t)))})}),moveSync:function(e,a,p){const t=(p=p||{}).overwrite||p.clobber||!1,{srcStat:i,isChangingCase:d=!1}=St.checkPathsSync(e,a,"move",p);return St.checkParentPathsSync(e,i,a,"move"),function(e){const a=N.default.dirname(e);return N.default.parse(a).root===a}(a)||Xi(N.default.dirname(a)),function(e,a,p,t){if(t)return Ki(e,a,p);if(p)return Wi(a),Ki(e,a,p);if(at.existsSync(a))throw new Error("dest already exists.");return Ki(e,a,p)}(e,a,t,d)}},ad={...tt,...$i,...Ji,...Zi,...Qi,...yt,...ed,...Pi,...bt,...Kt};const pd=e=>console.log(e),td=e=>console.log(U.green(U.symbols.check+" ")+e),id=e=>{console.error(e),process.exit(1)},dd=e=>console.warn(U.yellow(e)),sd="win32"===process.platform?["-","\\","|","/"]:["‚†ã","‚†ô","‚†π","‚†∏","‚†º","‚†¥","‚†¶","‚†ß","‚†á","‚†è"],rd=process.stderr;var nd=B(function(e,a){var p;a=e.exports=m,p="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER"),console.log.apply(console,e)}:function(){},a.SEMVER_SPEC_VERSION="2.0.0";var t=Number.MAX_SAFE_INTEGER||9007199254740991,i=a.re=[],d=a.src=[],s=a.tokens={},r=0;function n(e){s[e]=r++}n("NUMERICIDENTIFIER"),d[s.NUMERICIDENTIFIER]="0|[1-9]\\d*",n("NUMERICIDENTIFIERLOOSE"),d[s.NUMERICIDENTIFIERLOOSE]="[0-9]+",n("NONNUMERICIDENTIFIER"),d[s.NONNUMERICIDENTIFIER]="\\d*[a-zA-Z-][a-zA-Z0-9-]*",n("MAINVERSION"),d[s.MAINVERSION]="("+d[s.NUMERICIDENTIFIER]+")\\.("+d[s.NUMERICIDENTIFIER]+")\\.("+d[s.NUMERICIDENTIFIER]+")",n("MAINVERSIONLOOSE"),d[s.MAINVERSIONLOOSE]="("+d[s.NUMERICIDENTIFIERLOOSE]+")\\.("+d[s.NUMERICIDENTIFIERLOOSE]+")\\.("+d[s.NUMERICIDENTIFIERLOOSE]+")",n("PRERELEASEIDENTIFIER"),d[s.PRERELEASEIDENTIFIER]="(?:"+d[s.NUMERICIDENTIFIER]+"|"+d[s.NONNUMERICIDENTIFIER]+")",n("PRERELEASEIDENTIFIERLOOSE"),d[s.PRERELEASEIDENTIFIERLOOSE]="(?:"+d[s.NUMERICIDENTIFIERLOOSE]+"|"+d[s.NONNUMERICIDENTIFIER]+")",n("PRERELEASE"),d[s.PRERELEASE]="(?:-("+d[s.PRERELEASEIDENTIFIER]+"(?:\\."+d[s.PRERELEASEIDENTIFIER]+")*))",n("PRERELEASELOOSE"),d[s.PRERELEASELOOSE]="(?:-?("+d[s.PRERELEASEIDENTIFIERLOOSE]+"(?:\\."+d[s.PRERELEASEIDENTIFIERLOOSE]+")*))",n("BUILDIDENTIFIER"),d[s.BUILDIDENTIFIER]="[0-9A-Za-z-]+",n("BUILD"),d[s.BUILD]="(?:\\+("+d[s.BUILDIDENTIFIER]+"(?:\\."+d[s.BUILDIDENTIFIER]+")*))",n("FULL"),n("FULLPLAIN"),d[s.FULLPLAIN]="v?"+d[s.MAINVERSION]+d[s.PRERELEASE]+"?"+d[s.BUILD]+"?",d[s.FULL]="^"+d[s.FULLPLAIN]+"$",n("LOOSEPLAIN"),d[s.LOOSEPLAIN]="[v=\\s]*"+d[s.MAINVERSIONLOOSE]+d[s.PRERELEASELOOSE]+"?"+d[s.BUILD]+"?",n("LOOSE"),d[s.LOOSE]="^"+d[s.LOOSEPLAIN]+"$",n("GTLT"),d[s.GTLT]="((?:<|>)?=?)",n("XRANGEIDENTIFIERLOOSE"),d[s.XRANGEIDENTIFIERLOOSE]=d[s.NUMERICIDENTIFIERLOOSE]+"|x|X|\\*",n("XRANGEIDENTIFIER"),d[s.XRANGEIDENTIFIER]=d[s.NUMERICIDENTIFIER]+"|x|X|\\*",n("XRANGEPLAIN"),d[s.XRANGEPLAIN]="[v=\\s]*("+d[s.XRANGEIDENTIFIER]+")(?:\\.("+d[s.XRANGEIDENTIFIER]+")(?:\\.("+d[s.XRANGEIDENTIFIER]+")(?:"+d[s.PRERELEASE]+")?"+d[s.BUILD]+"?)?)?",n("XRANGEPLAINLOOSE"),d[s.XRANGEPLAINLOOSE]="[v=\\s]*("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:"+d[s.PRERELEASELOOSE]+")?"+d[s.BUILD]+"?)?)?",n("XRANGE"),d[s.XRANGE]="^"+d[s.GTLT]+"\\s*"+d[s.XRANGEPLAIN]+"$",n("XRANGELOOSE"),d[s.XRANGELOOSE]="^"+d[s.GTLT]+"\\s*"+d[s.XRANGEPLAINLOOSE]+"$",n("COERCE"),d[s.COERCE]="(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])",n("COERCERTL"),i[s.COERCERTL]=new RegExp(d[s.COERCE],"g"),n("LONETILDE"),d[s.LONETILDE]="(?:~>?)",n("TILDETRIM"),d[s.TILDETRIM]="(\\s*)"+d[s.LONETILDE]+"\\s+",i[s.TILDETRIM]=new RegExp(d[s.TILDETRIM],"g"),n("TILDE"),d[s.TILDE]="^"+d[s.LONETILDE]+d[s.XRANGEPLAIN]+"$",n("TILDELOOSE"),d[s.TILDELOOSE]="^"+d[s.LONETILDE]+d[s.XRANGEPLAINLOOSE]+"$",n("LONECARET"),d[s.LONECARET]="(?:\\^)",n("CARETTRIM"),d[s.CARETTRIM]="(\\s*)"+d[s.LONECARET]+"\\s+",i[s.CARETTRIM]=new RegExp(d[s.CARETTRIM],"g"),n("CARET"),d[s.CARET]="^"+d[s.LONECARET]+d[s.XRANGEPLAIN]+"$",n("CARETLOOSE"),d[s.CARETLOOSE]="^"+d[s.LONECARET]+d[s.XRANGEPLAINLOOSE]+"$",n("COMPARATORLOOSE"),d[s.COMPARATORLOOSE]="^"+d[s.GTLT]+"\\s*("+d[s.LOOSEPLAIN]+")$|^$",n("COMPARATOR"),d[s.COMPARATOR]="^"+d[s.GTLT]+"\\s*("+d[s.FULLPLAIN]+")$|^$",n("COMPARATORTRIM"),d[s.COMPARATORTRIM]="(\\s*)"+d[s.GTLT]+"\\s*("+d[s.LOOSEPLAIN]+"|"+d[s.XRANGEPLAIN]+")",i[s.COMPARATORTRIM]=new RegExp(d[s.COMPARATORTRIM],"g"),n("HYPHENRANGE"),d[s.HYPHENRANGE]="^\\s*("+d[s.XRANGEPLAIN]+")\\s+-\\s+("+d[s.XRANGEPLAIN]+")\\s*$",n("HYPHENRANGELOOSE"),d[s.HYPHENRANGELOOSE]="^\\s*("+d[s.XRANGEPLAINLOOSE]+")\\s+-\\s+("+d[s.XRANGEPLAINLOOSE]+")\\s*$",n("STAR"),d[s.STAR]="(<|>)?=?\\s*\\*";for(var l=0;l<r;l++)p(l,d[l]),i[l]||(i[l]=new RegExp(d[l]));function o(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof m)return e;if("string"!=typeof e)return null;if(e.length>256)return null;if(!(a.loose?i[s.LOOSE]:i[s.FULL]).test(e))return null;try{return new m(e,a)}catch(e){return null}}function m(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof m){if(e.loose===a.loose)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: "+e);if(e.length>256)throw new TypeError("version is longer than 256 characters");if(!(this instanceof m))return new m(e,a);p("SemVer",e,a),this.options=a,this.loose=!!a.loose;var d=e.trim().match(a.loose?i[s.LOOSE]:i[s.FULL]);if(!d)throw new TypeError("Invalid Version: "+e);if(this.raw=e,this.major=+d[1],this.minor=+d[2],this.patch=+d[3],this.major>t||this.major<0)throw new TypeError("Invalid major version");if(this.minor>t||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>t||this.patch<0)throw new TypeError("Invalid patch version");this.prerelease=d[4]?d[4].split(".").map(function(e){if(/^[0-9]+$/.test(e)){var a=+e;if(a>=0&&a<t)return a}return e}):[],this.build=d[5]?d[5].split("."):[],this.format()}a.parse=o,a.valid=function(e,a){var p=o(e,a);return p?p.version:null},a.clean=function(e,a){var p=o(e.trim().replace(/^[=v]+/,""),a);return p?p.version:null},a.SemVer=m,m.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},m.prototype.toString=function(){return this.version},m.prototype.compare=function(e){return p("SemVer.compare",this.version,this.options,e),e instanceof m||(e=new m(e,this.options)),this.compareMain(e)||this.comparePre(e)},m.prototype.compareMain=function(e){return e instanceof m||(e=new m(e,this.options)),c(this.major,e.major)||c(this.minor,e.minor)||c(this.patch,e.patch)},m.prototype.comparePre=function(e){if(e instanceof m||(e=new m(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var a=0;do{var t=this.prerelease[a],i=e.prerelease[a];if(p("prerelease compare",a,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++a)},m.prototype.compareBuild=function(e){e instanceof m||(e=new m(e,this.options));var a=0;do{var t=this.build[a],i=e.build[a];if(p("prerelease compare",a,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++a)},m.prototype.inc=function(e,a){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",a);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",a);break;case"prepatch":this.prerelease.length=0,this.inc("patch",a),this.inc("pre",a);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",a),this.inc("pre",a);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var p=this.prerelease.length;--p>=0;)"number"==typeof this.prerelease[p]&&(this.prerelease[p]++,p=-2);-1===p&&this.prerelease.push(0)}a&&(this.prerelease[0]===a?isNaN(this.prerelease[1])&&(this.prerelease=[a,0]):this.prerelease=[a,0]);break;default:throw new Error("invalid increment argument: "+e)}return this.format(),this.raw=this.version,this},a.inc=function(e,a,p,t){"string"==typeof p&&(t=p,p=void 0);try{return new m(e,p).inc(a,t).version}catch(e){return null}},a.diff=function(e,a){if(w(e,a))return null;var p=o(e),t=o(a),i="";if(p.prerelease.length||t.prerelease.length){i="pre";var d="prerelease"}for(var s in p)if(("major"===s||"minor"===s||"patch"===s)&&p[s]!==t[s])return i+s;return d},a.compareIdentifiers=c;var u=/^[0-9]+$/;function c(e,a){var p=u.test(e),t=u.test(a);return p&&t&&(e=+e,a=+a),e===a?0:p&&!t?-1:t&&!p?1:e<a?-1:1}function h(e,a,p){return new m(e,p).compare(new m(a,p))}function f(e,a,p){return h(e,a,p)>0}function v(e,a,p){return h(e,a,p)<0}function w(e,a,p){return 0===h(e,a,p)}function g(e,a,p){return 0!==h(e,a,p)}function y(e,a,p){return h(e,a,p)>=0}function b(e,a,p){return h(e,a,p)<=0}function S(e,a,p,t){switch(a){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e===p;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e!==p;case"":case"=":case"==":return w(e,p,t);case"!=":return g(e,p,t);case">":return f(e,p,t);case">=":return y(e,p,t);case"<":return v(e,p,t);case"<=":return b(e,p,t);default:throw new TypeError("Invalid operator: "+a)}}function E(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof E){if(e.loose===!!a.loose)return e;e=e.value}if(!(this instanceof E))return new E(e,a);p("comparator",e,a),this.options=a,this.loose=!!a.loose,this.parse(e),this.value=this.semver===N?"":this.operator+this.semver.version,p("comp",this)}a.rcompareIdentifiers=function(e,a){return c(a,e)},a.major=function(e,a){return new m(e,a).major},a.minor=function(e,a){return new m(e,a).minor},a.patch=function(e,a){return new m(e,a).patch},a.compare=h,a.compareLoose=function(e,a){return h(e,a,!0)},a.compareBuild=function(e,a,p){var t=new m(e,p),i=new m(a,p);return t.compare(i)||t.compareBuild(i)},a.rcompare=function(e,a,p){return h(a,e,p)},a.sort=function(e,p){return e.sort(function(e,t){return a.compareBuild(e,t,p)})},a.rsort=function(e,p){return e.sort(function(e,t){return a.compareBuild(t,e,p)})},a.gt=f,a.lt=v,a.eq=w,a.neq=g,a.gte=y,a.lte=b,a.cmp=S,a.Comparator=E;var N={};function _(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof _)return e.loose===!!a.loose&&e.includePrerelease===!!a.includePrerelease?e:new _(e.raw,a);if(e instanceof E)return new _(e.value,a);if(!(this instanceof _))return new _(e,a);if(this.options=a,this.loose=!!a.loose,this.includePrerelease=!!a.includePrerelease,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError("Invalid SemVer Range: "+e);this.format()}function T(e,a){for(var p=!0,t=e.slice(),i=t.pop();p&&t.length;)p=t.every(function(e){return i.intersects(e,a)}),i=t.pop();return p}function D(e){return!e||"x"===e.toLowerCase()||"*"===e}function A(e,a,p,t,i,d,s,r,n,l,o,m,u){return((a=D(p)?"":D(t)?">="+p+".0.0":D(i)?">="+p+"."+t+".0":">="+a)+" "+(r=D(n)?"":D(l)?"<"+(+n+1)+".0.0":D(o)?"<"+n+"."+(+l+1)+".0":m?"<="+n+"."+l+"."+o+"-"+m:"<="+r)).trim()}function V(e,a,t){for(var i=0;i<e.length;i++)if(!e[i].test(a))return!1;if(a.prerelease.length&&!t.includePrerelease){for(i=0;i<e.length;i++)if(p(e[i].semver),e[i].semver!==N&&e[i].semver.prerelease.length>0){var d=e[i].semver;if(d.major===a.major&&d.minor===a.minor&&d.patch===a.patch)return!0}return!1}return!0}function C(e,a,p){try{a=new _(a,p)}catch(e){return!1}return a.test(e)}function O(e,a,p,t){var i,d,s,r,n;switch(e=new m(e,t),a=new _(a,t),p){case">":i=f,d=b,s=v,r=">",n=">=";break;case"<":i=v,d=y,s=f,r="<",n="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(C(e,a,t))return!1;for(var l=0;l<a.set.length;++l){var o=null,u=null;if(a.set[l].forEach(function(e){e.semver===N&&(e=new E(">=0.0.0")),u=u||e,i(e.semver,(o=o||e).semver,t)?o=e:s(e.semver,u.semver,t)&&(u=e)}),o.operator===r||o.operator===n)return!1;if((!u.operator||u.operator===r)&&d(e,u.semver))return!1;if(u.operator===n&&s(e,u.semver))return!1}return!0}E.prototype.parse=function(e){var a=e.match(this.options.loose?i[s.COMPARATORLOOSE]:i[s.COMPARATOR]);if(!a)throw new TypeError("Invalid comparator: "+e);this.operator=void 0!==a[1]?a[1]:"","="===this.operator&&(this.operator=""),this.semver=a[2]?new m(a[2],this.options.loose):N},E.prototype.toString=function(){return this.value},E.prototype.test=function(e){if(p("Comparator.test",e,this.options.loose),this.semver===N||e===N)return!0;if("string"==typeof e)try{e=new m(e,this.options)}catch(e){return!1}return S(e,this.operator,this.semver,this.options)},E.prototype.intersects=function(e,a){if(!(e instanceof E))throw new TypeError("a Comparator is required");var p;if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),""===this.operator)return""===this.value||(p=new _(e.value,a),C(this.value,p,a));if(""===e.operator)return""===e.value||(p=new _(this.value,a),C(e.semver,p,a));var t=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),i=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),d=this.semver.version===e.semver.version,s=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),r=S(this.semver,"<",e.semver,a)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),n=S(this.semver,">",e.semver,a)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return t||i||d&&s||r||n},a.Range=_,_.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim(),this.range},_.prototype.toString=function(){return this.range},_.prototype.parseRange=function(e){var a=this.options.loose;e=(e=e.trim()).replace(a?i[s.HYPHENRANGELOOSE]:i[s.HYPHENRANGE],A),p("hyphen replace",e),e=e.replace(i[s.COMPARATORTRIM],"$1$2$3"),p("comparator trim",e,i[s.COMPARATORTRIM]),e=(e=(e=e.replace(i[s.TILDETRIM],"$1~")).replace(i[s.CARETTRIM],"$1^")).split(/\s+/).join(" ");var t=a?i[s.COMPARATORLOOSE]:i[s.COMPARATOR],d=e.split(" ").map(function(e){return function(e,a){return p("comp",e,a),e=function(e,a){return e.trim().split(/\s+/).map(function(e){return function(e,a){return p("caret",e,a),e.replace(a.loose?i[s.CARETLOOSE]:i[s.CARET],function(a,t,i,d,s){var r;return p("caret",e,a,t,i,d,s),D(t)?r="":D(i)?r=">="+t+".0.0 <"+(+t+1)+".0.0":D(d)?r="0"===t?">="+t+"."+i+".0 <"+t+"."+(+i+1)+".0":">="+t+"."+i+".0 <"+(+t+1)+".0.0":s?(p("replaceCaret pr",s),r="0"===t?"0"===i?">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+i+"."+(+d+1):">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+(+i+1)+".0":">="+t+"."+i+"."+d+"-"+s+" <"+(+t+1)+".0.0"):(p("no pr"),r="0"===t?"0"===i?">="+t+"."+i+"."+d+" <"+t+"."+i+"."+(+d+1):">="+t+"."+i+"."+d+" <"+t+"."+(+i+1)+".0":">="+t+"."+i+"."+d+" <"+(+t+1)+".0.0"),p("caret return",r),r})}(e,a)}).join(" ")}(e,a),p("caret",e),e=function(e,a){return e.trim().split(/\s+/).map(function(e){return function(e,a){return e.replace(a.loose?i[s.TILDELOOSE]:i[s.TILDE],function(a,t,i,d,s){var r;return p("tilde",e,a,t,i,d,s),D(t)?r="":D(i)?r=">="+t+".0.0 <"+(+t+1)+".0.0":D(d)?r=">="+t+"."+i+".0 <"+t+"."+(+i+1)+".0":s?(p("replaceTilde pr",s),r=">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+(+i+1)+".0"):r=">="+t+"."+i+"."+d+" <"+t+"."+(+i+1)+".0",p("tilde return",r),r})}(e,a)}).join(" ")}(e,a),p("tildes",e),e=function(e,a){return p("replaceXRanges",e,a),e.split(/\s+/).map(function(e){return function(e,a){return(e=e.trim()).replace(a.loose?i[s.XRANGELOOSE]:i[s.XRANGE],function(t,i,d,s,r,n){p("xRange",e,t,i,d,s,r,n);var l=D(d),o=l||D(s),m=o||D(r);return"="===i&&m&&(i=""),n=a.includePrerelease?"-0":"",l?t=">"===i||"<"===i?"<0.0.0-0":"*":i&&m?(o&&(s=0),r=0,">"===i?(i=">=",o?(d=+d+1,s=0,r=0):(s=+s+1,r=0)):"<="===i&&(i="<",o?d=+d+1:s=+s+1),t=i+d+"."+s+"."+r+n):o?t=">="+d+".0.0"+n+" <"+(+d+1)+".0.0"+n:m&&(t=">="+d+"."+s+".0"+n+" <"+d+"."+(+s+1)+".0"+n),p("xRange return",t),t})}(e,a)}).join(" ")}(e,a),p("xrange",e),e=function(e,a){return p("replaceStars",e,a),e.trim().replace(i[s.STAR],"")}(e,a),p("stars",e),e}(e,this.options)},this).join(" ").split(/\s+/);return this.options.loose&&(d=d.filter(function(e){return!!e.match(t)})),d.map(function(e){return new E(e,this.options)},this)},_.prototype.intersects=function(e,a){if(!(e instanceof _))throw new TypeError("a Range is required");return this.set.some(function(p){return T(p,a)&&e.set.some(function(e){return T(e,a)&&p.every(function(p){return e.every(function(e){return p.intersects(e,a)})})})})},a.toComparators=function(e,a){return new _(e,a).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})},_.prototype.test=function(e){if(!e)return!1;if("string"==typeof e)try{e=new m(e,this.options)}catch(e){return!1}for(var a=0;a<this.set.length;a++)if(V(this.set[a],e,this.options))return!0;return!1},a.satisfies=C,a.maxSatisfying=function(e,a,p){var t=null,i=null;try{var d=new _(a,p)}catch(e){return null}return e.forEach(function(e){d.test(e)&&(t&&-1!==i.compare(e)||(i=new m(t=e,p)))}),t},a.minSatisfying=function(e,a,p){var t=null,i=null;try{var d=new _(a,p)}catch(e){return null}return e.forEach(function(e){d.test(e)&&(t&&1!==i.compare(e)||(i=new m(t=e,p)))}),t},a.minVersion=function(e,a){e=new _(e,a);var p=new m("0.0.0");if(e.test(p))return p;if(p=new m("0.0.0-0"),e.test(p))return p;p=null;for(var t=0;t<e.set.length;++t)e.set[t].forEach(function(e){var a=new m(e.semver.version);switch(e.operator){case">":0===a.prerelease.length?a.patch++:a.prerelease.push(0),a.raw=a.format();case"":case">=":p&&!f(p,a)||(p=a);break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+e.operator)}});return p&&e.test(p)?p:null},a.validRange=function(e,a){try{return new _(e,a).range||"*"}catch(e){return null}},a.ltr=function(e,a,p){return O(e,a,"<",p)},a.gtr=function(e,a,p){return O(e,a,">",p)},a.outside=O,a.prerelease=function(e,a){var p=o(e,a);return p&&p.prerelease.length?p.prerelease:null},a.intersects=function(e,a,p){return e=new _(e,p),a=new _(a,p),e.intersects(a)},a.coerce=function(e,a){if(e instanceof m)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;var p=null;if((a=a||{}).rtl){for(var t;(t=i[s.COERCERTL].exec(e))&&(!p||p.index+p[0].length!==e.length);)p&&t.index+t[0].length===p.index+p[0].length||(p=t),i[s.COERCERTL].lastIndex=t.index+t[1].length+t[2].length;i[s.COERCERTL].lastIndex=-1}else p=e.match(i[s.COERCE]);return null===p?null:o(p[2]+"."+(p[3]||"0")+"."+(p[4]||"0"),a)}});const{promisify:ld}=V.default,od=nd.satisfies(process.version,">=10.12.0"),md=e=>{if("win32"===process.platform&&/[<>:"|?*]/.test(e.replace(N.default.parse(e).root,""))){const a=new Error(`Path contains invalid characters: ${e}`);throw a.code="EINVAL",a}},ud=e=>({mode:511,fs:_.default,...e}),cd=e=>{const a=new Error(`operation not permitted, mkdir '${e}'`);return a.code="EPERM",a.errno=-4048,a.path=e,a.syscall="mkdir",a};var hd=async(e,a)=>{md(e),a=ud(a);const p=ld(a.fs.mkdir),t=ld(a.fs.stat);if(od&&a.fs.mkdir===_.default.mkdir){const t=N.default.resolve(e);return await p(t,{mode:a.mode,recursive:!0}),t}const i=async e=>{try{return await p(e,a.mode),e}catch(a){if("EPERM"===a.code)throw a;if("ENOENT"===a.code){if(N.default.dirname(e)===e)throw cd(e);if(a.message.includes("null bytes"))throw a;return await i(N.default.dirname(e)),i(e)}try{if(!(await t(e)).isDirectory())throw new Error("The path is not a directory")}catch(e){throw a}return e}};return i(N.default.resolve(e))};hd.sync=(e,a)=>{if(md(e),a=ud(a),od&&a.fs.mkdirSync===_.default.mkdirSync){const p=N.default.resolve(e);return _.default.mkdirSync(p,{mode:a.mode,recursive:!0}),p}const p=e=>{try{a.fs.mkdirSync(e,a.mode)}catch(t){if("EPERM"===t.code)throw t;if("ENOENT"===t.code){if(N.default.dirname(e)===e)throw cd(e);if(t.message.includes("null bytes"))throw t;return p(N.default.dirname(e)),p(e)}try{if(!a.fs.statSync(e).isDirectory())throw new Error("The path is not a directory")}catch(e){throw t}}return e};return p(N.default.resolve(e))};var fd=B(function(e,a){const p=T.default.homedir(),{env:t}=process;a.data=t.XDG_DATA_HOME||(p?N.default.join(p,".local","share"):void 0),a.config=t.XDG_CONFIG_HOME||(p?N.default.join(p,".config"):void 0),a.cache=t.XDG_CACHE_HOME||(p?N.default.join(p,".cache"):void 0),a.runtime=t.XDG_RUNTIME_DIR||void 0,a.dataDirs=(t.XDG_DATA_DIRS||"/usr/local/share/:/usr/share/").split(":"),a.data&&a.dataDirs.unshift(a.data),a.configDirs=(t.XDG_CONFIG_DIRS||"/etc/xdg").split(":"),a.config&&a.configDirs.unshift(a.config)}),vd=B(function(e){!function(){var a;function p(e,t){var i=this instanceof p?this:a;if(i.reset(t),"string"==typeof e&&e.length>0&&i.hash(e),i!==this)return i}p.prototype.hash=function(e){var a,p,t,i,d;switch(this.len+=d=e.length,p=this.k1,t=0,this.rem){case 0:p^=d>t?65535&e.charCodeAt(t++):0;case 1:p^=d>t?(65535&e.charCodeAt(t++))<<8:0;case 2:p^=d>t?(65535&e.charCodeAt(t++))<<16:0;case 3:p^=d>t?(255&e.charCodeAt(t))<<24:0,p^=d>t?(65280&e.charCodeAt(t++))>>8:0}if(this.rem=d+this.rem&3,(d-=this.rem)>0){for(a=this.h1;a=5*(a=(a^=p=13715*(p=(p=11601*p+3432906752*(65535&p)&4294967295)<<15|p>>>17)+461832192*(65535&p)&4294967295)<<13|a>>>19)+3864292196&4294967295,!(t>=d);)p=65535&e.charCodeAt(t++)^(65535&e.charCodeAt(t++))<<8^(65535&e.charCodeAt(t++))<<16,p^=(255&(i=e.charCodeAt(t++)))<<24^(65280&i)>>8;switch(p=0,this.rem){case 3:p^=(65535&e.charCodeAt(t+2))<<16;case 2:p^=(65535&e.charCodeAt(t+1))<<8;case 1:p^=65535&e.charCodeAt(t)}this.h1=a}return this.k1=p,this},p.prototype.result=function(){var e,a;return a=this.h1,(e=this.k1)>0&&(a^=e=13715*(e=(e=11601*e+3432906752*(65535&e)&4294967295)<<15|e>>>17)+461832192*(65535&e)&4294967295),a^=this.len,a=51819*(a^=a>>>16)+2246770688*(65535&a)&4294967295,a=44597*(a^=a>>>13)+3266445312*(65535&a)&4294967295,(a^=a>>>16)>>>0},p.prototype.reset=function(e){return this.h1="number"==typeof e?e:0,this.rem=this.k1=this.len=0,this},a=new p,e.exports=p}()}),wd=bd;bd.strict=Sd,bd.loose=Ed;var gd=Object.prototype.toString,yd={"[object Int8Array]":!0,"[object Int16Array]":!0,"[object Int32Array]":!0,"[object Uint8Array]":!0,"[object Uint8ClampedArray]":!0,"[object Uint16Array]":!0,"[object Uint32Array]":!0,"[object Float32Array]":!0,"[object Float64Array]":!0};function bd(e){return Sd(e)||Ed(e)}function Sd(e){return e instanceof Int8Array||e instanceof Int16Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Uint16Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array}function Ed(e){return yd[gd.call(e)]}var Nd=wd.strict,_d=function(e){if(Nd(e)){var a=Buffer.from(e.buffer);return e.byteLength!==e.buffer.byteLength&&(a=a.slice(e.byteOffset,e.byteOffset+e.byteLength)),a}return Buffer.from(e)},Td=function(e,a,p,t){p instanceof Function&&(t=p,p={});const i=async function(e,a,p={}){let t,i;"string"==typeof p&&(p={encoding:p});const d=dp(Rd(()=>i)),s=N.default.resolve(e);try{await function(e){return new Promise(a=>{Cd[e]||(Cd[e]=[]),Cd[e].push(a),1===Cd[e].length&&a()})}(s);const r=await Vd(_.default.realpath)(e).catch(()=>e);if(i=xd(r),!p.mode||!p.chown){const e=await Vd(_.default.stat)(r).catch(()=>{});e&&(null==p.mode&&(p.mode=e.mode),null==p.chown&&process.getuid&&(p.chown={uid:e.uid,gid:e.gid}))}t=await Vd(_.default.open)(i,"w",p.mode),p.tmpfileCreated&&await p.tmpfileCreated(i),wd(a)&&(a=_d(a)),Buffer.isBuffer(a)?await Vd(_.default.write)(t,a,0,a.length,0):null!=a&&await Vd(_.default.write)(t,String(a),0,String(p.encoding||"utf8")),!1!==p.fsync&&await Vd(_.default.fsync)(t),await Vd(_.default.close)(t),t=null,p.chown&&await Vd(_.default.chown)(i,p.chown.uid,p.chown.gid).catch(e=>{if(!Pd(e))throw e}),p.mode&&await Vd(_.default.chmod)(i,p.mode).catch(e=>{if(!Pd(e))throw e}),await Vd(_.default.rename)(i,r)}finally{t&&await Vd(_.default.close)(t).catch(()=>{}),d(),await Vd(_.default.unlink)(i).catch(()=>{}),Cd[s].shift(),Cd[s].length>0?Cd[s][0]():delete Cd[s]}}(e,a,p);return t&&i.then(t,t),i},Dd=xd,Ad=Rd;const{promisify:Vd}=V.default,Cd={},Od=function(){try{return 0}catch(e){return 0}}();let Id=0;function xd(e){return e+"."+vd(__filename).hash(String(process.pid)).hash(String(Od)).hash(String(++Id)).result()}function Rd(e){return()=>{try{_.default.unlinkSync("function"==typeof e?e():e)}catch(e){}}}function Pd(e){return"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}Td.sync=function(e,a,p){"string"==typeof p?p={encoding:p}:p||(p={});try{e=_.default.realpathSync(e)}catch(e){}const t=xd(e);if(!p.mode||!p.chown)try{const a=_.default.statSync(e);(p=Object.assign({},p)).mode||(p.mode=a.mode),!p.chown&&process.getuid&&(p.chown={uid:a.uid,gid:a.gid})}catch(e){}let i;const d=Rd(t),s=dp(d);let r=!0;try{if(i=_.default.openSync(t,"w",p.mode||438),p.tmpfileCreated&&p.tmpfileCreated(t),wd(a)&&(a=_d(a)),Buffer.isBuffer(a)?_.default.writeSync(i,a,0,a.length,0):null!=a&&_.default.writeSync(i,String(a),0,String(p.encoding||"utf8")),!1!==p.fsync&&_.default.fsyncSync(i),_.default.closeSync(i),i=null,p.chown)try{_.default.chownSync(t,p.chown.uid,p.chown.gid)}catch(e){if(!Pd(e))throw e}if(p.mode)try{_.default.chmodSync(t,p.mode)}catch(e){if(!Pd(e))throw e}_.default.renameSync(t,e),r=!1}finally{if(i)try{_.default.closeSync(i)}catch(e){}s(),r&&d()}},Td._getTmpname=Dd,Td._cleanupOnExit=Ad;var kd=e=>{const a=typeof e;return null!==e&&("object"===a||"function"===a)};const Ld=["__proto__","prototype","constructor"];function jd(e){const a=e.split("."),p=[];for(let e=0;e<a.length;e++){let t=a[e];for(;"\\"===t[t.length-1]&&void 0!==a[e+1];)t=t.slice(0,-1)+".",t+=a[++e];p.push(t)}return p.some(e=>Ld.includes(e))?[]:p}var Bd={get(e,a,p){if(!kd(e)||"string"!=typeof a)return void 0===p?e:p;const t=jd(a);if(0!==t.length){for(let a=0;a<t.length;a++){if(!Object.prototype.propertyIsEnumerable.call(e,t[a]))return p;if(null==(e=e[t[a]])){if(a!==t.length-1)return p;break}}return e}},set(e,a,p){if(!kd(e)||"string"!=typeof a)return e;const t=e,i=jd(a);for(let a=0;a<i.length;a++){const t=i[a];kd(e[t])||(e[t]={}),a===i.length-1&&(e[t]=p),e=e[t]}return t},delete(e,a){if(!kd(e)||"string"!=typeof a)return!1;const p=jd(a);for(let a=0;a<p.length;a++){const t=p[a];if(a===p.length-1)return delete e[t],!0;if(!kd(e=e[t]))return!1}},has(e,a){if(!kd(e)||"string"!=typeof a)return!1;const p=jd(a);if(0===p.length)return!1;for(let a=0;a<p.length;a++){if(!kd(e))return!1;if(!(p[a]in e))return!1;e=e[p[a]]}return!0}};const Fd=fd.config||N.default.join(T.default.tmpdir(),(e=>{if(!Number.isFinite(32))throw new TypeError("Expected a finite number");return O.default.randomBytes(Math.ceil(16)).toString("hex").slice(0,32)})()),$d={mode:448},Md={mode:384};let Ud;const Gd=()=>(Ud||(Ud=new class{constructor(e,a,p={}){const t=p.globalConfigPath?N.default.join(e,"config.json"):N.default.join("configstore",`${e}.json`);this.path=p.configPath||N.default.join(Fd,t),a&&(this.all={...a,...this.all})}get all(){try{return JSON.parse(at.readFileSync(this.path,"utf8"))}catch(e){if("ENOENT"===e.code)return{};if("EACCES"===e.code&&(e.message=`${e.message}\nYou don't have access to this file.\n`),"SyntaxError"===e.name)return Td.sync(this.path,"",Md),{};throw e}}set all(e){try{hd.sync(N.default.dirname(this.path),$d),Td.sync(this.path,JSON.stringify(e,void 0,"\t"),Md)}catch(e){throw"EACCES"===e.code&&(e.message=`${e.message}\nYou don't have access to this file.\n`),e}}get size(){return Object.keys(this.all||{}).length}get(e){return Bd.get(this.all,e)}set(e,a){const p=this.all;if(1===arguments.length)for(const a of Object.keys(e))Bd.set(p,a,e[a]);else Bd.set(p,e,a);this.all=p}has(e){return Bd.has(this.all,e)}delete(e){const a=this.all;Bd.delete(a,e),this.all=a}clear(){this.all={}}}("gatsby",{},{globalConfigPath:!0})),Ud),qd=(e=1)=>new Promise(a=>{process.stderr.moveCursor(0,-e,()=>{process.stderr.write("[2K"),a()})}),zd=e=>{const a=Gd();return a.get("cli.packageManager")||(null!=e&&e.includes("yarn")?(a.set("cli.packageManager","yarn"),"yarn"):(a.set("cli.packageManager","npm"),"npm"))},Hd=(e,a)=>require.resolve(e,a),Yd=e=>null!=e&&"object"!=typeof e&&"function"!=typeof e;class Wd extends ia.Form{async renderChoice(e,a){await this.onChoice(e,a);const{state:p,styles:t}=this;let{cursor:i,initial:d="",name:s,input:r=""}=e;const{muted:n,submitted:l,primary:o,danger:m}=t,u=this.index===a,c=e.validate||(()=>!0),h=await this.choiceSeparator(e,a);let f=e.message;"right"===this.align&&(f=f.padStart(this.longest+1," ")),"left"===this.align&&(f=f.padEnd(this.longest+1," "));const v=this.values[s]=r||d;let w=r?"success":"dark";!0!==await c.call(e,v,this.state)&&(w="danger");const g=(0,t[w])(await this.indicator(e,a))+(e.pad||""),y=this.indent(e),b=()=>[y,g,f+h,r].filter(Boolean).join(" ");return p.submitted?(f=U.unstyle(f),r=l(r),b()):(r=e.format?await e.format.call(this,r,e,a):((e,a={})=>{e.cursorHide();let{input:p="",initial:t="",pos:i,showCursor:d=!0,color:s}=a;const r=s||e.styles.placeholder,n=e.styles.primary.inverse;let l=e=>n(e),o=p,m=l(" ");if(e.blink&&!0===e.blink.off&&(l=e=>e,m=""),d&&0===i&&""===t&&""===p)return l(" ");if(d&&0===i&&(p===t||""===p))return l(t[0])+r(t.slice(1));t=Yd(t)?`${t}`:"",p=Yd(p)?`${p}`:"";const u=t&&t.startsWith(p)&&t!==p;let c=u?l(t[p.length]):m;if(i!==p.length&&!0===d&&(o=p.slice(0,i)+l(p[i])+p.slice(i+1),c=""),!1===d&&(c=""),u){const a=e.styles.unstyle(o+c);return o+c+r(t.slice(a.length))}return o+c})(this,{input:r,initial:d,pos:i,showCursor:u,color:this.styles.muted}),this.isValue(r)||(r=this.styles.muted(this.symbols.ellipsis)),e.result&&(this.values[s]=await e.result.call(this,v,e,a)),u&&(f=o(f)),e.error?r+=(r?" ":"")+m(e.error.trim()):e.hint&&u&&(r+=(r?`\n${" ".repeat(this.longest+6)}`:"")+n(e.hint.trim())),b())}}class Xd extends ia.Input{constructor(e){super(e),this.cursorShow()}async render(){var e;const a=this.state.size,p=await this.prefix(),t=await this.separator(),i=await this.message();let d=[p," ",this.styles.muted(await this.element("hint")),t].filter(Boolean).join("");this.state.prompt=d;const s=await this.header();let r=await this.format();const n=this.styles.unstyle(r);null!=(e=this.input)&&e.length||!n.length?this.cursorShow():(this.cursorHide(),r=this.styles.highlight(n[0])+this.styles.placeholder(n.slice(1)));const l=await this.footer();d+=" "+r,this.clear(a),this.write([s,i,d,await this.error(),l].filter(Boolean).join("\n")),this.restore()}}class Kd extends ia.Select{format(){return!this.state.submitted||this.state.cancelled?"":Array.isArray(this.selected)?this.selected.map(e=>this.styles.primary(this.symbols.middot+" "+e.message)).join("\n"):this.styles.primary(this.symbols.middot+" "+this.selected.message)}async indicator(e){return this.multiple&&"separator"!==e.role&&"___done"!==e.name?this.symbols.radio[e.enabled?"on":"off"]:""}async pointer(e,a){const p=await this.element("pointer",e,a);if(!p)return;const t=this.index===a,i=t?this.styles.primary:e=>e,d=await this.resolve(p[t?"on":"off"]||p,this.state);return t?i(d):" ".repeat(d.length)}async render(){const{submitted:e,size:a}=this.state;let p="";const t=await this.header(),i=await this.prefix(),d=await this.message();!1!==this.options.promptLine&&(p=[i,d].join(" "),this.state.prompt=p);const s=await this.format(),r=await this.error()||await this.hint(),n=await this.renderChoices(),l=await this.footer();s&&(p+="\n"+s),r&&!p.includes(r)&&(p+="\n"+r),e&&!s&&!n.trim()&&this.multiple&&null!=this.emptyError&&(p+=this.styles.danger(this.emptyError)),this.clear(a),this.write([t,p,n,l].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}}class Jd extends Kd{constructor(e){super({...e,multiple:!0})}toggle(e,a){super.toggle(e,a)}async toChoices(e,a){const p=[{role:"separator"},{message:this.styles.bold("Done"),name:"___done"}];return"function"==typeof e&&(e=await e.call(this)),e instanceof Promise&&(e=await e),super.toChoices([...e,...p],a)}submit(){return"___done"===this.focused.name?super.submit():this.space()}next(){return this.index===this.choices.length-1?super.next():this.end()}}const Zd=e=>(e.register("textinput",Xd),e.register("selectinput",Kd),e.register("multiselectinput",Jd),e.register("forminput",Wd),e);var Qd=function(){function e(e,a){for(var p=0;p<a.length;p++){var t=a[p];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(a,p,t){return p&&e(a.prototype,p),t&&e(a,t),a}}(),es=Object.freeze(Object.defineProperties(["",""],{raw:{value:Object.freeze(["",""])}}));function as(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}var ps=function(){function e(){for(var a=this,p=arguments.length,t=Array(p),i=0;i<p;i++)t[i]=arguments[i];return as(this,e),this.tag=function(e){for(var p=arguments.length,t=Array(p>1?p-1:0),i=1;i<p;i++)t[i-1]=arguments[i];return"function"==typeof e?a.interimTag.bind(a,e):"string"==typeof e?a.transformEndResult(e):(e=e.map(a.transformString.bind(a)),a.transformEndResult(e.reduce(a.processSubstitutions.bind(a,t))))},t.length>0&&Array.isArray(t[0])&&(t=t[0]),this.transformers=t.map(function(e){return"function"==typeof e?e():e}),this.tag}return Qd(e,[{key:"interimTag",value:function(e,a){for(var p=arguments.length,t=Array(p>2?p-2:0),i=2;i<p;i++)t[i-2]=arguments[i];return this.tag(es,e.apply(void 0,[a].concat(t)))}},{key:"processSubstitutions",value:function(e,a,p){var t=this.transformSubstitution(e.shift(),a);return"".concat(a,t,p)}},{key:"transformString",value:function(e){return this.transformers.reduce(function(e,a){return a.onString?a.onString(e):e},e)}},{key:"transformSubstitution",value:function(e,a){return this.transformers.reduce(function(e,p){return p.onSubstitution?p.onSubstitution(e,a):e},e)}},{key:"transformEndResult",value:function(e){return this.transformers.reduce(function(e,a){return a.onEndResult?a.onEndResult(e):e},e)}}]),e}(),ts=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{onEndResult:function(a){if(""===e)return a.trim();if("start"===(e=e.toLowerCase())||"left"===e)return a.replace(/^\s*/,"");if("end"===e||"right"===e)return a.replace(/\s*$/,"");throw new Error("Side not supported: "+e)}}};function is(e){if(Array.isArray(e)){for(var a=0,p=Array(e.length);a<e.length;a++)p[a]=e[a];return p}return Array.from(e)}var ds=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"initial";return{onEndResult:function(a){if("initial"===e){var p=a.match(/^[^\S\n]*(?=\S)/gm),t=p&&Math.min.apply(Math,is(p.map(function(e){return e.length})));if(t){var i=new RegExp("^.{"+t+"}","gm");return a.replace(i,"")}return a}if("all"===e)return a.replace(/^[^\S\n]+/gm,"");throw new Error("Unknown type: "+e)}}},ss=function(e,a){return{onEndResult:function(p){if(null==e||null==a)throw new Error("replaceResultTransformer requires at least 2 arguments.");return p.replace(e,a)}}},rs=function(e,a){return{onSubstitution:function(p,t){if(null==e||null==a)throw new Error("replaceSubstitutionTransformer requires at least 2 arguments.");return null==p?p:p.toString().replace(e,a)}}},ns={separator:"",conjunction:"",serial:!1},ls=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ns;return{onSubstitution:function(a,p){if(Array.isArray(a)){var t=a.length,i=e.separator,d=e.conjunction,s=e.serial,r=p.match(/(\n?[^\S\n]+)$/);if(a=a.join(r?i+r[1]:i+" "),d&&t>1){var n=a.lastIndexOf(i);a=a.slice(0,n)+(s?i:"")+" "+d+a.slice(n+1)}}return a}}},os=function(e){return{onSubstitution:function(a,p){if(null==e||"string"!=typeof e)throw new Error("You need to specify a string character to split by.");return"string"==typeof a&&a.includes(e)&&(a=a.split(e)),a}}},ms=function(e){return null!=e&&!Number.isNaN(e)&&"boolean"!=typeof e};new ps(ls({separator:","}),ds,ts),new ps(ls({separator:",",conjunction:"and"}),ds,ts),new ps(ls({separator:",",conjunction:"or"}),ds,ts),new ps(os("\n"),function(){return{onSubstitution:function(e){return Array.isArray(e)?e.filter(ms):ms(e)?e:""}}},ls,ds,ts),new ps(os("\n"),ls,ds,ts,rs(/&/g,"&amp;"),rs(/</g,"&lt;"),rs(/>/g,"&gt;"),rs(/"/g,"&quot;"),rs(/'/g,"&#x27;"),rs(/`/g,"&#x60;")),new ps(ss(/(?:\n(?:\s*))+/g," "),ts),new ps(ss(/(?:\n\s*)/g,""),ts),new ps(ls({separator:","}),ss(/(?:\s+)/g," "),ts),new ps(ls({separator:",",conjunction:"or"}),ss(/(?:\s+)/g," "),ts),new ps(ls({separator:",",conjunction:"and"}),ss(/(?:\s+)/g," "),ts),new ps(ls,ds,ts),new ps(ls,ss(/(?:\s+)/g," "),ts);var us=new ps(ds,ts);new ps(ds("all"),ts);var cs=B(function(e){const a=e.exports;e.exports.default=a;const p="[",t="]",i="",d=";",s="Apple_Terminal"===process.env.TERM_PROGRAM;a.cursorTo=(e,a)=>{if("number"!=typeof e)throw new TypeError("The `x` argument is required");return"number"!=typeof a?p+(e+1)+"G":p+(a+1)+";"+(e+1)+"H"},a.cursorMove=(e,a)=>{if("number"!=typeof e)throw new TypeError("The `x` argument is required");let t="";return e<0?t+=p+-e+"D":e>0&&(t+=p+e+"C"),a<0?t+=p+-a+"A":a>0&&(t+=p+a+"B"),t},a.cursorUp=(e=1)=>p+e+"A",a.cursorDown=(e=1)=>p+e+"B",a.cursorForward=(e=1)=>p+e+"C",a.cursorBackward=(e=1)=>p+e+"D",a.cursorLeft="[G",a.cursorSavePosition=s?"7":"[s",a.cursorRestorePosition=s?"8":"[u",a.cursorGetPosition="[6n",a.cursorNextLine="[E",a.cursorPrevLine="[F",a.cursorHide="[?25l",a.cursorShow="[?25h",a.eraseLines=e=>{let p="";for(let t=0;t<e;t++)p+=a.eraseLine+(t<e-1?a.cursorUp():"");return e&&(p+=a.cursorLeft),p},a.eraseEndLine="[K",a.eraseStartLine="[1K",a.eraseLine="[2K",a.eraseDown="[J",a.eraseUp="[1J",a.eraseScreen="[2J",a.scrollUp="[S",a.scrollDown="[T",a.clearScreen="c",a.clearTerminal="win32"===process.platform?`${a.eraseScreen}[0f`:`${a.eraseScreen}[3J[H`,a.beep=i,a.link=(e,a)=>[t,"8",d,d,a,i,e,t,"8",d,d,i].join(""),a.image=(e,a={})=>{let p=`${t}1337;File=inline=1`;return a.width&&(p+=`;width=${a.width}`),a.height&&(p+=`;height=${a.height}`),!1===a.preserveAspectRatio&&(p+=";preserveAspectRatio=0"),p+":"+e.toString("base64")+i},a.iTerm={setCwd:(e=process.cwd())=>`${t}50;CurrentDir=${e}${i}`,annotation:(e,a={})=>{let p=`${t}1337;`;const d=void 0!==a.x,s=void 0!==a.y;if((d||s)&&(!d||!s||void 0===a.length))throw new Error("`x`, `y` and `length` must be defined when `x` or `y` is defined");return e=e.replace(/\|/g,""),p+=a.isHidden?"AddHiddenAnnotation=":"AddAnnotation=",p+=a.length>0?(d?[e,a.length,a.x,a.y]:[a.length,e]).join("|"):e,p+i}}}),hs=(e,a=process.argv)=>{const p=e.startsWith("-")?"":1===e.length?"-":"--",t=a.indexOf(p+e),i=a.indexOf("--");return-1!==t&&(-1===i||t<i)};const{env:fs}=process;let vs;function ws(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function gs(e,a){if(0===vs)return 0;if(hs("color=16m")||hs("color=full")||hs("color=truecolor"))return 3;if(hs("color=256"))return 2;if(e&&!a&&void 0===vs)return 0;const p=vs||0;if("dumb"===fs.TERM)return p;if("win32"===process.platform){const e=T.default.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in fs)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in fs)||"codeship"===fs.CI_NAME?1:p;if("TEAMCITY_VERSION"in fs)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(fs.TEAMCITY_VERSION)?1:0;if("GITHUB_ACTIONS"in fs)return 1;if("truecolor"===fs.COLORTERM)return 3;if("TERM_PROGRAM"in fs){const e=parseInt((fs.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(fs.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(fs.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(fs.TERM)||"COLORTERM"in fs?1:p}function ys(e){if(/^\d{3,4}$/.test(e)){const a=/(\d{1,2})(\d{2})/.exec(e);return{major:0,minor:parseInt(a[1],10),patch:parseInt(a[2],10)}}const a=(e||"").split(".").map(e=>parseInt(e,10));return{major:a[0],minor:a[1],patch:a[2]}}function bs(e){const{env:a}=process;if("FORCE_HYPERLINK"in a)return!(a.FORCE_HYPERLINK.length>0&&0===parseInt(a.FORCE_HYPERLINK,10));if(hs("no-hyperlink")||hs("no-hyperlinks")||hs("hyperlink=false")||hs("hyperlink=never"))return!1;if(hs("hyperlink=true")||hs("hyperlink=always"))return!0;if(!function(e){return ws(gs(e,e&&e.isTTY))}(e))return!1;if(e&&!e.isTTY)return!1;if("win32"===process.platform)return!1;if("CI"in a)return!1;if("TEAMCITY_VERSION"in a)return!1;if("TERM_PROGRAM"in a){const e=ys(a.TERM_PROGRAM_VERSION);if("iTerm.app"===a.TERM_PROGRAM)return 3===e.major?e.minor>=1:e.major>3}if("VTE_VERSION"in a){if("0.50.0"===a.VTE_VERSION)return!1;const e=ys(a.VTE_VERSION);return e.major>0||e.minor>=50}return!1}hs("no-color")||hs("no-colors")||hs("color=false")||hs("color=never")?vs=0:(hs("color")||hs("colors")||hs("color=true")||hs("color=always"))&&(vs=1),"FORCE_COLOR"in fs&&(vs="true"===fs.FORCE_COLOR?1:"false"===fs.FORCE_COLOR?0:0===fs.FORCE_COLOR.length?1:Math.min(parseInt(fs.FORCE_COLOR,10),3)),ws(gs(!0,I.default.isatty(1))),ws(gs(!0,I.default.isatty(2)));var Ss={supportsHyperlink:bs,stdout:bs(process.stdout),stderr:bs(process.stderr)},Es=B(function(e){const a=(e,a,{target:p="stdout",...t}={})=>Ss[p]?cs.link(e,a):!1===t.fallback?e:"function"==typeof t.fallback?t.fallback(e,a):`${e} (‚Äã${a}‚Äã)`;e.exports=(e,p,t={})=>a(e,p,t),e.exports.stderr=(e,p,t={})=>a(e,p,{target:"stderr",...t}),e.exports.isSupported=Ss.stdout,e.exports.stderr.isSupported=Ss.stderr}),Ns={"gatsby-source-wordpress":{type:"object",keys:{url:{type:"string",flags:{description:"This should be the full url of your GraphQL endpoint set up by WP GraphQL",presence:"required"}}}},"gatsby-source-contentful":{type:"object",externals:[{}],keys:{accessToken:{type:"string",flags:{description:"Contentful delivery api key, when using the Preview API use your Preview API key",presence:"required"}},spaceId:{type:"string",flags:{description:"Contentful spaceId",presence:"required"}},host:{type:"string",flags:{description:"The base host for all the API requests, by default it's 'cdn.contentful.com', if you want to use the Preview API set it to 'preview.contentful.com'. You can use your own host for debugging/testing purposes as long as you respect the same Contentful JSON structure.",default:"cdn.contentful.com"}},environment:{type:"string",flags:{description:"The environment to pull the content from, for more info on environments check out this [Guide](https://www.contentful.com/developers/docs/concepts/multiple-environments/).",default:"master"}},downloadLocal:{type:"boolean",flags:{description:"Downloads and caches ContentfulAsset's to the local filesystem. Allows you to query a ContentfulAsset's localFile field, which is not linked to Contentful's CDN. Useful for reducing data usage.\nYou can pass in any other options available in the [contentful.js SDK](https://github.com/contentful/contentful.js#configuration).",default:!1}},localeFilter:{type:"function",flags:{description:"Possibility to limit how many locales/nodes are created in GraphQL. This can limit the memory usage by reducing the amount of nodes created. Useful if you have a large space in contentful and only want to get the data from one selected locale.\nFor example, to filter locales on only germany `localeFilter: locale => locale.code === 'de-DE'`\n\nList of locales and their codes can be found in Contentful app -> Settings -> Locales"}},forceFullSync:{type:"boolean",flags:{description:"Prevents the use of sync tokens when accessing the Contentful API.",default:!1}},pageLimit:{type:"number",flags:{description:"Number of entries to retrieve from Contentful at a time. Due to some technical limitations, the response payload should not be greater than 7MB when pulling content from Contentful. If you encounter this issue you can set this param to a lower number than 100, e.g 50.",default:100},rules:[{name:"integer"}]},assetDownloadWorkers:{type:"number",flags:{description:"Number of workers to use when downloading contentful assets. Due to technical limitations, opening too many concurrent requests can cause stalled downloads. If you encounter this issue you can set this param to a lower number than 50, e.g 25.",default:50},rules:[{name:"integer"}]},proxy:{type:"object",flags:{description:"Axios proxy configuration. See the [axios request config documentation](https://github.com/mzabriskie/axios#request-config) for further information about the supported values."},keys:{host:{type:"string",flags:{presence:"required"}},port:{type:"number",flags:{presence:"required"}},auth:{type:"object",keys:{username:{type:"string"},password:{type:"string"}}}}},useNameForId:{type:"boolean",flags:{description:"Use the content's `name` when generating the GraphQL schema e.g. a Content Type called `[Component] Navigation bar` will be named `contentfulComponentNavigationBar`.\n    When set to `false`, the content's internal ID will be used instead e.g. a Content Type with the ID `navigationBar` will be called `contentfulNavigationBar`.\n\n    Using the ID is a much more stable property to work with as it will change less often. However, in some scenarios, Content Types' IDs will be auto-generated (e.g. when creating a new Content Type without specifying an ID) which means the name in the GraphQL schema will be something like `contentfulC6XwpTaSiiI2Ak2Ww0oi6qa`. This won't change and will still function perfectly as a valid field name but it is obviously pretty ugly to work with.\n\n    If you are confident your Content Types will have natural-language IDs (e.g. `blogPost`), then you should set this option to `false`. If you are unable to ensure this, then you should leave this option set to `true` (the default).",default:!0}},plugins:{type:"array"},richText:{type:"object",flags:{default:{}},keys:{resolveFieldLocales:{type:"boolean",flags:{description:"If you want to resolve the locales in fields of assets and entries that are referenced by rich text (e.g., via embedded entries or entry hyperlinks), set this to `true`. Otherwise, fields of referenced assets or entries will be objects keyed by locale.",default:!1}}}}}},"gatsby-source-sanity":{type:"object",keys:{projectId:{type:"string",flags:{description:"Your Sanity project's ID",presence:"required"}},dataset:{type:"string",flags:{description:"The dataset to fetch from",presence:"required"}}}},"gatsby-source-shopify":{type:"object",keys:{shopName:{type:"string",flags:{description:"The domain name of your Shopify shop",presence:"required"}},accessToken:{type:"string",flags:{description:"An API access token to your Shopify shop",presence:"required"}}}},"gatsby-source-datocms":{type:"object",keys:{apiToken:{type:"string",flags:{description:"Your read-only API token under the Settings > API tokens section of your administrative area in DatoCMS",presence:"required"}}}},"gatsby-source-agility":{type:"object",keys:{guid:{type:"string",flags:{description:"your Agility Content Fetch API Guid",presence:"required"}}}},"gatsby-plugin-postcss":{},"gatsby-plugin-styled-components":{},"gatsby-plugin-emotion":{},"gatsby-plugin-sass":{},"gatsby-plugin-theme-ui":{},"gatsby-plugin-google-analytics":{type:"object",keys:{trackingId:{type:"string",flags:{description:"The property ID; the tracking code won't be generated without it",presence:"required"}},head:{type:"boolean",flags:{default:!1,description:"Defines where to place the tracking script - `true` in the head and `false` in the body"}},anonymize:{type:"boolean",flags:{default:!1}},respectDNT:{type:"boolean",flags:{default:!1}},exclude:{type:"array",flags:{default:[],description:"Avoids sending pageview hits from custom paths"},items:[{type:"string"}]},pageTransitionDelay:{type:"number",flags:{default:0,description:"Delays sending pageview hits on route update (in milliseconds)"}},optimizeId:{type:"string",flags:{description:"Enables Google Optimize using your container Id"}},experimentId:{type:"string",flags:{description:"Enables Google Optimize Experiment ID"}},variationId:{type:"string",flags:{description:"Set Variation ID. 0 for original 1,2,3...."}},defer:{type:"boolean",flags:{description:"Defers execution of google analytics script after page load"}},sampleRate:{type:"number"},siteSpeedSampleRate:{type:"number"},cookieDomain:{type:"string"}}},"gatsby-plugin-sitemap":{},"gatsby-plugin-mdx":{},"gatsby-plugin-offline":{},"gatsby-plugin-manifest":{type:"object",keys:{name:{type:"string"},short_name:{type:"string"},description:{type:"string"},lang:{type:"string"},localize:{type:"array",items:[{type:"object",keys:{start_url:{type:"string"},name:{type:"string"},short_name:{type:"string"},description:{type:"string"},lang:{type:"string"}}}]},start_url:{type:"string"},background_color:{type:"string"},theme_color:{type:"string"},display:{type:"string"},legacy:{type:"boolean"},include_favicon:{type:"boolean"},icon:{type:"string"},theme_color_in_head:{type:"boolean"},crossOrigin:{type:"string",flags:{only:!0},allow:["use-credentials","anonymous"]},cache_busting_mode:{type:"string",flags:{only:!0},allow:["query","name","none"]},icons:{type:"array",items:[{type:"object",keys:{src:{type:"string"},sizes:{type:"string"},type:{type:"string"},purpose:{type:"string"}}}]},icon_options:{type:"object",keys:{purpose:{type:"string"}}}}}};const _s=["string","boolean","number"];function Ts(e){const a=[da,sa];for(const p of a)if(e in p)return p[e].message;return e}function Ds(e){return U.blueBright(Es("the plugin docs",`https://www.gatsbyjs.com/plugins/${e}/`,{fallback:(e,a)=>a}))}const As=([e,a])=>{var p;return"required"===(null==a||null==(p=a.flags)?void 0:p.presence)},Vs=([e,a])=>{var p,t,i,d;return{name:e,initial:(null==(p=a.flags)?void 0:p.default)&&_s.includes(typeof(null==(t=a.flags)?void 0:t.default))?null==(i=a.flags)?void 0:i.default.toString():void 0,message:e,hint:null==(d=a.flags)?void 0:d.description}};function Cs(e,a){let p=0;for(let t of a.patterns){let a=e.match(t);if(a)for(let e of a)p+=e.length}return e.length-p}const Os=process.stdout.columns;var Is={},xs=Is;function Rs(e){return e<0?-1:1}function Ps(e,a){a.unsigned||--e;const p=a.unsigned?0:-Math.pow(2,e),t=Math.pow(2,e)-1,i=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),d=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,s){s||(s={});let r=+e;if(s.enforceRange){if(!Number.isFinite(r))throw new TypeError("Argument is not a finite number");if(r=Rs(r)*Math.floor(Math.abs(r)),r<p||r>t)throw new TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&s.clamp)return r=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(r),r<p&&(r=p),r>t&&(r=t),r;if(!Number.isFinite(r)||0===r)return 0;if(r=Rs(r)*Math.floor(Math.abs(r)),r%=i,!a.unsigned&&r>=d)return r-i;if(a.unsigned)if(r<0)r+=i;else if(-0===r)return 0;return r}}Is.void=function(){},Is.boolean=function(e){return!!e},Is.byte=Ps(8,{unsigned:!1}),Is.octet=Ps(8,{unsigned:!0}),Is.short=Ps(16,{unsigned:!1}),Is["unsigned short"]=Ps(16,{unsigned:!0}),Is.long=Ps(32,{unsigned:!1}),Is["unsigned long"]=Ps(32,{unsigned:!0}),Is["long long"]=Ps(32,{unsigned:!1,moduloBitLength:64}),Is["unsigned long long"]=Ps(32,{unsigned:!0,moduloBitLength:64}),Is.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},Is["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},Is.float=Is.double,Is["unrestricted float"]=Is["unrestricted double"],Is.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},Is.ByteString=function(e,a){const p=String(e);let t;for(let e=0;void 0!==(t=p.codePointAt(e));++e)if(t>255)throw new TypeError("Argument is not a valid bytestring");return p},Is.USVString=function(e){const a=String(e),p=a.length,t=[];for(let e=0;e<p;++e){const i=a.charCodeAt(e);if(i<55296||i>57343)t.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)t.push(String.fromCodePoint(65533));else if(e===p-1)t.push(String.fromCodePoint(65533));else{const p=a.charCodeAt(e+1);56320<=p&&p<=57343?(t.push(String.fromCodePoint(65536+1024*(1023&i)+(1023&p))),++e):t.push(String.fromCodePoint(65533))}}return t.join("")},Is.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},Is.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e};var ks=B(function(e){e.exports.mixin=function(e,a){const p=Object.getOwnPropertyNames(a);for(let t=0;t<p.length;++t)Object.defineProperty(e,p[t],Object.getOwnPropertyDescriptor(a,p[t]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}}),Ls=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]],js={TRANSITIONAL:0,NONTRANSITIONAL:1};function Bs(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function Fs(e){for(var a=0,p=Ls.length-1;a<=p;){var t=Math.floor((a+p)/2),i=Ls[t];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?p=t-1:a=t+1}return null}var $s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Ms(e){return e.replace($s,"_").length}var Us=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function Gs(e,a){"xn--"===e.substr(0,4)&&(e=P.default.toUnicode(e));var p=!1;(Bs(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(Us))&&(p=!0);for(var t=Ms(e),i=0;i<t;++i){var d=Fs(e.codePointAt(i));if(qs===js.TRANSITIONAL&&"valid"!==d[1]||qs===js.NONTRANSITIONAL&&"valid"!==d[1]&&"deviation"!==d[1]){p=!0;break}}return{label:e,error:p}}function qs(e,a,p){var t=function(e,a,p){for(var t=!1,i="",d=Ms(e),s=0;s<d;++s){var r=e.codePointAt(s),n=Fs(r);switch(n[1]){case"disallowed":t=!0,i+=String.fromCodePoint(r);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,n[2]);break;case"deviation":i+=p===js.TRANSITIONAL?String.fromCodePoint.apply(String,n[2]):String.fromCodePoint(r);break;case"valid":i+=String.fromCodePoint(r);break;case"disallowed_STD3_mapped":a?(t=!0,i+=String.fromCodePoint(r)):i+=String.fromCodePoint.apply(String,n[2]);break;case"disallowed_STD3_valid":a&&(t=!0),i+=String.fromCodePoint(r)}}return{string:i,error:t}}(e,a,p);t.string=Bs(t.string);for(var i=t.string.split("."),d=0;d<i.length;++d)try{var s=Gs(i[d]);i[d]=s.label,t.error=t.error||s.error}catch(e){t.error=!0}return{string:i.join("."),error:t.error}}var zs=js,Hs=B(function(e){const a={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},p=Symbol("failure");function t(e){return P.default.ucs2.decode(e).length}function i(e,a){const p=e[a];return isNaN(p)?void 0:String.fromCodePoint(p)}function d(e){return e>=48&&e<=57}function s(e){return e>=65&&e<=90||e>=97&&e<=122}function r(e){return d(e)||e>=65&&e<=70||e>=97&&e<=102}function n(e){return"."===e||"%2e"===e.toLowerCase()}function l(e){return 2===e.length&&s(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function o(e){return void 0!==a[e]}function m(e){return o(e.scheme)}function u(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function c(e){return e<=31||e>126}const h=new Set([32,34,35,60,62,63,96,123,125]);function f(e){return c(e)||h.has(e)}const v=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return f(e)||v.has(e)}function g(e,a){const p=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let p="";for(let e=0;e<a.length;++e)p+=u(a[e]);return p}(p):p}function y(e){let a=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e?0:(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?p:parseInt(e,a)}function b(e,a){if("["===e[0])return"]"!==e[e.length-1]?p:function(e){const a=[0,0,0,0,0,0,0,0];let t=0,s=null,n=0;if(58===(e=P.default.ucs2.decode(e))[n]){if(58!==e[n+1])return p;n+=2,++t,s=t}for(;n<e.length;){if(8===t)return p;if(58===e[n]){if(null!==s)return p;++n,++t,s=t;continue}let l=0,o=0;for(;o<4&&r(e[n]);)l=16*l+parseInt(i(e,n),16),++n,++o;if(46===e[n]){if(0===o)return p;if(n-=o,t>6)return p;let s=0;for(;void 0!==e[n];){let r=null;if(s>0){if(!(46===e[n]&&s<4))return p;++n}if(!d(e[n]))return p;for(;d(e[n]);){const a=parseInt(i(e,n));if(null===r)r=a;else{if(0===r)return p;r=10*r+a}if(r>255)return p;++n}a[t]=256*a[t]+r,++s,2!==s&&4!==s||++t}if(4!==s)return p;break}if(58===e[n]){if(++n,void 0===e[n])return p}else if(void 0!==e[n])return p;a[t]=l,++t}if(null!==s){let e=t-s;for(t=7;0!==t&&e>0;){const p=a[s+e-1];a[s+e-1]=a[t],a[t]=p,--t,--e}}else if(null===s&&8!==t)return p;return a}(e.substring(1,e.length-1));if(!a)return function(e){if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)}(e))return p;let a="";const t=P.default.ucs2.decode(e);for(let e=0;e<t.length;++e)a+=g(t[e],c);return a}(e);const t=function(e){const a=new Buffer(e),p=[];for(let e=0;e<a.length;++e)37!==a[e]?p.push(a[e]):37===a[e]&&r(a[e+1])&&r(a[e+2])?(p.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):p.push(a[e]);return new Buffer(p).toString()}(e),s=(l=(l=(n=qs(t,!1,zs.NONTRANSITIONAL)).string.split(".")).map(function(e){try{return P.default.toASCII(e)}catch(a){return n.error=!0,e}}),n.error?null:l.join("."));var n,l;if(null===s)return p;if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)}(s))return p;const o=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const t=[];for(const i of a){if(""===i)return e;const a=y(i);if(a===p)return e;t.push(a)}for(let e=0;e<t.length-1;++e)if(t[e]>255)return p;if(t[t.length-1]>=Math.pow(256,5-t.length))return p;let i=t.pop(),d=0;for(const e of t)i+=e*Math.pow(256,3-d),++d;return i}(s);return"number"==typeof o||o===p?o:s}function S(e){return"number"==typeof e?function(e){let a="",p=e;for(let e=1;e<=4;++e)a=String(p%256)+a,4!==e&&(a="."+a),p=Math.floor(p/256);return a}(e):e instanceof Array?"["+function(e){let a="";const p=function(e){let a=null,p=1,t=null,i=0;for(let d=0;d<e.length;++d)0!==e[d]?(i>p&&(a=t,p=i),t=null,i=0):(null===t&&(t=d),++i);return i>p&&(a=t,p=i),{idx:a,len:p}}(e).idx;let t=!1;for(let i=0;i<=7;++i)t&&0===e[i]||(t&&(t=!1),p!==i?(a+=e[i].toString(16),7!==i&&(a+=":")):(a+=0===i?"::":":",t=!0));return a}(e)+"]":e}function E(e){const a=e.path;0!==a.length&&("file"===e.scheme&&1===a.length&&function(e){return/^[A-Za-z]:$/.test(e)}(a[0])||a.pop())}function N(e){return""!==e.username||""!==e.password}function _(e,a,t,i,d){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=t||"utf-8",this.stateOverride=d,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const s=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(s!==this.input&&(this.parseError=!0),this.input=s,this.state=d||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=P.default.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),t=this["parse "+this.state](e,a);if(!t)break;if(t===p){this.failure=!0;break}}}_.prototype["parse scheme start"]=function(e,a){if(s(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,p;this.state="no scheme",--this.pointer}return!0},_.prototype["parse scheme"]=function(e,a){if(function(e){return s(e)||d(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(m(this.url)&&!o(this.buffer))return!1;if(!m(this.url)&&o(this.buffer))return!1;if((N(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):m(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":m(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,p;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},_.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?p:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},_.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},_.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},_.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):m(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},_.prototype["parse relative slash"]=function(e){return!m(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},_.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},_.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},_.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=t(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const p=g(e,w);this.passwordTokenSeenFlag?this.url.password+=p:this.url.username+=p}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,p;this.pointer-=t(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},_.prototype["parse hostname"]=_.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(--this.pointer,m(this.url)&&""===this.buffer)return this.parseError=!0,p;if(this.stateOverride&&""===this.buffer&&(N(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=b(this.buffer,m(this.url));if(e===p)return p;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,p;const e=b(this.buffer,m(this.url));if(e===p)return p;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},_.prototype["parse port"]=function(e,t){if(d(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e||this.stateOverride))return this.parseError=!0,p;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,p;this.url.port=e===a[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};const T=new Set([47,92,63,35]);_.prototype["parse file"]=function(e){var a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=this.input[this.pointer+1],!s(e)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!T.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),E(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},_.prototype["parse file slash"]=function(e){return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(function(e){return 2===e.length&&s(e.codePointAt(0))&&":"===e[1]}(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},_.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&l(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=b(this.buffer,m(this.url));if(e===p)return p;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},_.prototype["parse path start"]=function(e){return m(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},_.prototype["parse path"]=function(e){if(isNaN(e)||47===e||m(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(m(this.url)&&92===e&&(this.parseError=!0),".."!==(a=(a=this.buffer).toLowerCase())&&"%2e."!==a&&".%2e"!==a&&"%2e%2e"!==a?!n(this.buffer)||47===e||m(this.url)&&92===e?n(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&l(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""):(E(this.url),47===e||m(this.url)&&92===e||this.url.path.push("")),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=g(e,f);var a;return!0},_.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+g(e,c))),!0},_.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){m(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)this.url.query+=a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?u(a[e]):String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},_.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=g(e,c))),!0},e.exports.serializeURL=function(e,a){let p=e.scheme+":";if(null!==e.host?(p+="//",""===e.username&&""===e.password||(p+=e.username,""!==e.password&&(p+=":"+e.password),p+="@"),p+=S(e.host),null!==e.port&&(p+=":"+e.port)):null===e.host&&"file"===e.scheme&&(p+="//"),e.cannotBeABaseURL)p+=e.path[0];else for(const a of e.path)p+="/"+a;return null!==e.query&&(p+="?"+e.query),a||null===e.fragment||(p+="#"+e.fragment),p},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=S(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const p=new _(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return p.failure?"failure":p.url},e.exports.setTheUsername=function(e,a){e.username="";const p=P.default.ucs2.decode(a);for(let a=0;a<p.length;++a)e.username+=g(p[a],w)},e.exports.setThePassword=function(e,a){e.password="";const p=P.default.ucs2.decode(a);for(let a=0;a<p.length;++a)e.password+=g(p[a],w)},e.exports.serializeHost=S,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,p){return void 0===p&&(p={}),e.exports.basicURLParse(a,{baseURL:p.baseURL,encodingOverride:p.encodingOverride})}}),Ys=class{constructor(e){const a=e[0],p=e[1];let t=null;if(void 0!==p&&(t=Hs.basicURLParse(p),"failure"===t))throw new TypeError("Invalid base URL");const i=Hs.basicURLParse(a,{baseURL:t});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return Hs.serializeURL(this._url)}set href(e){const a=Hs.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return Hs.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){Hs.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||Hs.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||Hs.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?Hs.serializeHost(e.host):Hs.serializeHost(e.host)+":"+Hs.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||Hs.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":Hs.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||Hs.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":Hs.serializeInteger(this._url.port)}set port(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:Hs.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],Hs.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const p="?"===e[0]?e.substring(1):e;a.query="",Hs.basicURLParse(p,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",Hs.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},Ws=B(function(e){const a=ks.implSymbol;function p(t){if(!this||this[a]||!(this instanceof p))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const i=[];for(let e=0;e<arguments.length&&e<2;++e)i[e]=arguments[e];i[0]=xs.USVString(i[0]),void 0!==i[1]&&(i[1]=xs.USVString(i[1])),e.exports.setup(this,i)}p.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const p=[];for(let e=0;e<arguments.length&&e<0;++e)p[e]=arguments[e];return this[a].toJSON.apply(this[a],p)},Object.defineProperty(p.prototype,"href",{get(){return this[a].href},set(e){e=xs.USVString(e),this[a].href=e},enumerable:!0,configurable:!0}),p.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(p.prototype,"origin",{get(){return this[a].origin},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"protocol",{get(){return this[a].protocol},set(e){e=xs.USVString(e),this[a].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"username",{get(){return this[a].username},set(e){e=xs.USVString(e),this[a].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"password",{get(){return this[a].password},set(e){e=xs.USVString(e),this[a].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"host",{get(){return this[a].host},set(e){e=xs.USVString(e),this[a].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hostname",{get(){return this[a].hostname},set(e){e=xs.USVString(e),this[a].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"port",{get(){return this[a].port},set(e){e=xs.USVString(e),this[a].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"pathname",{get(){return this[a].pathname},set(e){e=xs.USVString(e),this[a].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"search",{get(){return this[a].search},set(e){e=xs.USVString(e),this[a].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hash",{get(){return this[a].hash},set(e){e=xs.USVString(e),this[a].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[a]instanceof Ys,create(e,a){let t=Object.create(p.prototype);return this.setup(t,e,a),t},setup(e,p,t){t||(t={}),t.wrapper=e,e[a]=new Ys(p,t),e[a][ks.wrapperSymbol]=e},interface:p,expose:{Window:{URL:p},Worker:{URL:p}}}}),Xs={URL:Ws.interface,serializeURL:Hs.serializeURL,serializeURLOrigin:Hs.serializeURLOrigin,basicURLParse:Hs.basicURLParse,setTheUsername:Hs.setTheUsername,setThePassword:Hs.setThePassword,serializeHost:Hs.serializeHost,serializeInteger:Hs.serializeInteger,parseURL:Hs.parseURL};const Ks=A.default.Readable,Js=Symbol("buffer"),Zs=Symbol("type");class Qs{constructor(){this[Zs]="";const e=arguments[0],a=arguments[1],p=[];if(e){const a=e,t=Number(a.length);for(let e=0;e<t;e++){const t=a[e];let i;i=t instanceof Buffer?t:ArrayBuffer.isView(t)?Buffer.from(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?Buffer.from(t):t instanceof Qs?t[Js]:Buffer.from("string"==typeof t?t:String(t)),p.push(i)}}this[Js]=Buffer.concat(p);let t=a&&void 0!==a.type&&String(a.type).toLowerCase();t&&!/[^\u0020-\u007E]/.test(t)&&(this[Zs]=t)}get size(){return this[Js].length}get type(){return this[Zs]}text(){return Promise.resolve(this[Js].toString())}arrayBuffer(){const e=this[Js],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new Ks;return e._read=function(){},e.push(this[Js]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,a=arguments[0],p=arguments[1];let t,i;t=void 0===a?0:a<0?Math.max(e+a,0):Math.min(a,e),i=void 0===p?e:p<0?Math.max(e+p,0):Math.min(p,e);const d=Math.max(i-t,0),s=this[Js].slice(t,t+d),r=new Qs([],{type:arguments[2]});return r[Js]=s,r}}function er(e,a,p){Error.call(this,e),this.message=e,this.type=a,p&&(this.code=this.errno=p.code),Error.captureStackTrace(this,this.constructor)}let ar;Object.defineProperties(Qs.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Qs.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),(er.prototype=Object.create(Error.prototype)).constructor=er,er.prototype.name="FetchError";try{ar=require("encoding").convert}catch(e){}const pr=Symbol("Body internals"),tr=A.default.PassThrough;function ir(e){var a=this,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=p.size;let i=void 0===t?0:t;var d=p.timeout;let s=void 0===d?0:d;null==e?e=null:sr(e)?e=Buffer.from(e.toString()):rr(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof A.default||(e=Buffer.from(String(e)))),this[pr]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=s,e instanceof A.default&&e.on("error",function(e){const p="AbortError"===e.name?e:new er(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[pr].error=p})}function dr(){var e=this;if(this[pr].disturbed)return ir.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[pr].disturbed=!0,this[pr].error)return ir.Promise.reject(this[pr].error);let a=this.body;if(null===a)return ir.Promise.resolve(Buffer.alloc(0));if(rr(a)&&(a=a.stream()),Buffer.isBuffer(a))return ir.Promise.resolve(a);if(!(a instanceof A.default))return ir.Promise.resolve(Buffer.alloc(0));let p=[],t=0,i=!1;return new ir.Promise(function(d,s){let r;e.timeout&&(r=setTimeout(function(){i=!0,s(new er(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(a){"AbortError"===a.name?(i=!0,s(a)):s(new er(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}),a.on("data",function(a){if(!i&&null!==a){if(e.size&&t+a.length>e.size)return i=!0,void s(new er(`content size at ${e.url} over limit: ${e.size}`,"max-size"));t+=a.length,p.push(a)}}),a.on("end",function(){if(!i){clearTimeout(r);try{d(Buffer.concat(p,t))}catch(a){s(new er(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}})})}function sr(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function rr(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function nr(e){let a,p,t=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return t instanceof A.default&&"function"!=typeof t.getBoundary&&(a=new tr,p=new tr,t.pipe(a),t.pipe(p),e[pr].body=a,t=p),t}function lr(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":sr(e)?"application/x-www-form-urlencoded;charset=UTF-8":rr(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof A.default?null:"text/plain;charset=UTF-8"}function or(e){const a=e.body;return null===a?0:rr(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}ir.prototype={get body(){return this[pr].body},get bodyUsed(){return this[pr].disturbed},arrayBuffer(){return dr.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return dr.call(this).then(function(a){return Object.assign(new Qs([],{type:e.toLowerCase()}),{[Js]:a})})},json(){var e=this;return dr.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(a){return ir.Promise.reject(new er(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}})},text(){return dr.call(this).then(function(e){return e.toString()})},buffer(){return dr.call(this)},textConverted(){var e=this;return dr.call(this).then(function(a){return function(e,a){if("function"!=typeof ar)throw new Error("The package `encoding` must be installed to use the textConverted() function");const p=a.get("content-type");let t,i,d="utf-8";return p&&(t=/charset=([^;]*)/i.exec(p)),i=e.slice(0,1024).toString(),!t&&i&&(t=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!t&&i&&(t=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),t||(t=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),t&&t.pop()),t&&(t=/charset=(.*)/i.exec(t.pop()))),!t&&i&&(t=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),t&&(d=t.pop(),"gb2312"!==d&&"gbk"!==d||(d="gb18030")),ar(e,"UTF-8",d).toString()}(a,e.headers)})}},Object.defineProperties(ir.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),ir.mixIn=function(e){for(const a of Object.getOwnPropertyNames(ir.prototype))if(!(a in e)){const p=Object.getOwnPropertyDescriptor(ir.prototype,a);Object.defineProperty(e,a,p)}},ir.Promise=global.Promise;const mr=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,ur=/[^\t\x20-\x7e\x80-\xff]/;function cr(e){if(mr.test(e=`${e}`)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function hr(e){if(ur.test(e=`${e}`))throw new TypeError(`${e} is not a legal HTTP header value`)}function fr(e,a){a=a.toLowerCase();for(const p in e)if(p.toLowerCase()===a)return p}const vr=Symbol("map");class wr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[vr]=Object.create(null),e instanceof wr){const a=e.raw(),p=Object.keys(a);for(const e of p)for(const p of a[e])this.append(e,p)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw new TypeError("Header pairs must be iterable");const p=[];for(const a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw new TypeError("Each header pair must be iterable");p.push(Array.from(a))}for(const e of p){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const a of Object.keys(e))this.append(a,e[a])}}}get(e){cr(e=`${e}`);const a=fr(this[vr],e);return void 0===a?null:this[vr][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,p=gr(this),t=0;for(;t<p.length;){var i=p[t];e.call(a,i[1],i[0],this),p=gr(this),t++}}set(e,a){a=`${a}`,cr(e=`${e}`),hr(a);const p=fr(this[vr],e);this[vr][void 0!==p?p:e]=[a]}append(e,a){a=`${a}`,cr(e=`${e}`),hr(a);const p=fr(this[vr],e);void 0!==p?this[vr][p].push(a):this[vr][e]=[a]}has(e){return cr(e=`${e}`),void 0!==fr(this[vr],e)}delete(e){cr(e=`${e}`);const a=fr(this[vr],e);void 0!==a&&delete this[vr][a]}raw(){return this[vr]}keys(){return br(this,"key")}values(){return br(this,"value")}[Symbol.iterator](){return br(this,"key+value")}}function gr(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const p=Object.keys(e[vr]).sort();return p.map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[vr][a].join(", ")}:function(a){return[a.toLowerCase(),e[vr][a].join(", ")]})}wr.prototype.entries=wr.prototype[Symbol.iterator],Object.defineProperty(wr.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(wr.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const yr=Symbol("internal");function br(e,a){const p=Object.create(Sr);return p[yr]={target:e,kind:a,index:0},p}const Sr=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==Sr)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[yr];const a=e.index,p=gr(e.target,e.kind);return a>=p.length?{value:void 0,done:!0}:(this[yr].index=a+1,{value:p[a],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function Er(e){const a=Object.assign({__proto__:null},e[vr]),p=fr(e[vr],"Host");return void 0!==p&&(a[p]=a[p][0]),a}Object.defineProperty(Sr,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Nr=Symbol("Response internals"),_r=x.default.STATUS_CODES;class Tr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ir.call(this,e,a);const p=a.status||200,t=new wr(a.headers);if(null!=e&&!t.has("Content-Type")){const a=lr(e);a&&t.append("Content-Type",a)}this[Nr]={url:a.url,status:p,statusText:a.statusText||_r[p],headers:t,counter:a.counter}}get url(){return this[Nr].url||""}get status(){return this[Nr].status}get ok(){return this[Nr].status>=200&&this[Nr].status<300}get redirected(){return this[Nr].counter>0}get statusText(){return this[Nr].statusText}get headers(){return this[Nr].headers}clone(){return new Tr(nr(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}ir.mixIn(Tr.prototype),Object.defineProperties(Tr.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Tr.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const Dr=Symbol("Request internals"),Ar=R.default.URL||Xs.URL,Vr=R.default.parse,Cr=R.default.format;function Or(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new Ar(e).toString()),Vr(e)}const Ir="destroy"in A.default.Readable.prototype;function xr(e){return"object"==typeof e&&"object"==typeof e[Dr]}class Rr{constructor(e){let a,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};xr(e)?a=Or(e.url):(a=Or(e&&e.href?e.href:`${e}`),e={});let t=p.method||e.method||"GET";if(t=t.toUpperCase(),(null!=p.body||xr(e)&&null!==e.body)&&("GET"===t||"HEAD"===t))throw new TypeError("Request with GET/HEAD method cannot have body");let i=null!=p.body?p.body:xr(e)&&null!==e.body?nr(e):null;ir.call(this,i,{timeout:p.timeout||e.timeout||0,size:p.size||e.size||0});const d=new wr(p.headers||e.headers||{});if(null!=i&&!d.has("Content-Type")){const e=lr(i);e&&d.append("Content-Type",e)}let s=xr(e)?e.signal:null;if("signal"in p&&(s=p.signal),null!=s&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(s))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[Dr]={method:t,redirect:p.redirect||e.redirect||"follow",headers:d,parsedURL:a,signal:s},this.follow=void 0!==p.follow?p.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==p.compress?p.compress:void 0===e.compress||e.compress,this.counter=p.counter||e.counter||0,this.agent=p.agent||e.agent}get method(){return this[Dr].method}get url(){return Cr(this[Dr].parsedURL)}get headers(){return this[Dr].headers}get redirect(){return this[Dr].redirect}get signal(){return this[Dr].signal}clone(){return new Rr(this)}}function Pr(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}ir.mixIn(Rr.prototype),Object.defineProperty(Rr.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Rr.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),(Pr.prototype=Object.create(Error.prototype)).constructor=Pr,Pr.prototype.name="AbortError";const kr=R.default.URL||Xs.URL,Lr=A.default.PassThrough;function jr(e,a){if(!jr.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return ir.Promise=jr.Promise,new jr.Promise(function(p,t){const i=new Rr(e,a),d=function(e){const a=e[Dr].parsedURL,p=new wr(e[Dr].headers);if(p.has("Accept")||p.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof A.default.Readable&&!Ir)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let t=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(t="0"),null!=e.body){const a=or(e);"number"==typeof a&&(t=String(a))}t&&p.set("Content-Length",t),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(a)),p.has("Connection")||i||p.set("Connection","close"),Object.assign({},a,{method:e.method,headers:Er(p),agent:i})}(i),s=("https:"===d.protocol?k.default:x.default).request,r=i.signal;let n=null;const l=function(){let e=new Pr("The user aborted a request.");t(e),i.body&&i.body instanceof A.default.Readable&&i.body.destroy(e),n&&n.body&&n.body.emit("error",e)};if(r&&r.aborted)return void l();const o=function(){l(),c()},m=s(d);let u;function c(){m.abort(),r&&r.removeEventListener("abort",o),clearTimeout(u)}r&&r.addEventListener("abort",o),i.timeout&&m.once("socket",function(e){u=setTimeout(function(){t(new er(`network timeout at: ${i.url}`,"request-timeout")),c()},i.timeout)}),m.on("error",function(e){t(new er(`request to ${i.url} failed, reason: ${e.message}`,"system",e)),c()}),m.on("response",function(e){clearTimeout(u);const a=function(e){const a=new wr;for(const p of Object.keys(e))if(!mr.test(p))if(Array.isArray(e[p]))for(const t of e[p])ur.test(t)||(void 0===a[vr][p]?a[vr][p]=[t]:a[vr][p].push(t));else ur.test(e[p])||(a[vr][p]=[e[p]]);return a}(e.headers);if(jr.isRedirect(e.statusCode)){const d=a.get("Location");let s=null;try{s=null===d?null:new kr(d,i.url).toString()}catch(e){if("manual"!==i.redirect)return t(new er(`uri requested responds with an invalid redirect URL: ${d}`,"invalid-redirect")),void c()}switch(i.redirect){case"error":return t(new er(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect")),void c();case"manual":if(null!==s)try{a.set("Location",s)}catch(e){t(e)}break;case"follow":if(null===s)break;if(i.counter>=i.follow)return t(new er(`maximum redirect reached at: ${i.url}`,"max-redirect")),void c();const d={headers:new wr(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!function(e,a){const p=new kr(a).hostname,t=new kr(e).hostname;return p===t||"."===p[p.length-t.length-1]&&p.endsWith(t)}(i.url,s))for(const e of["authorization","www-authenticate","cookie","cookie2"])d.headers.delete(e);return 303!==e.statusCode&&i.body&&null===or(i)?(t(new er("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void c()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==i.method)||(d.method="GET",d.body=void 0,d.headers.delete("content-length")),p(jr(new Rr(s,d))),void c())}}e.once("end",function(){r&&r.removeEventListener("abort",o)});let d=e.pipe(new Lr);const s={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:i.size,timeout:i.timeout,counter:i.counter},l=a.get("Content-Encoding");if(!i.compress||"HEAD"===i.method||null===l||204===e.statusCode||304===e.statusCode)return n=new Tr(d,s),void p(n);if("gzip"==l||"x-gzip"==l)return d=d.pipe(L.default.createGunzip({flush:L.default.Z_SYNC_FLUSH,finishFlush:L.default.Z_SYNC_FLUSH})),n=new Tr(d,s),void p(n);if("deflate"!=l&&"x-deflate"!=l){if("br"==l&&"function"==typeof L.default.createBrotliDecompress)return d=d.pipe(L.default.createBrotliDecompress()),n=new Tr(d,s),void p(n);n=new Tr(d,s),p(n)}else e.pipe(new Lr).once("data",function(e){d=d.pipe(8==(15&e[0])?L.default.createInflate():L.default.createInflateRaw()),n=new Tr(d,s),p(n)})}),function(e,a){const p=a.body;null===p?e.end():rr(p)?p.stream().pipe(e):Buffer.isBuffer(p)?(e.write(p),e.end()):p.pipe(e)}(m,i)})}jr.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},jr.Promise=global.Promise;for(var Br,Fr=256,$r=[];Fr--;)$r[Fr]=(Fr+256).toString(16).substring(1);function Mr(){var e,a=0,p="";if(!Br||Fr+16>256){for(Br=Array(a=256);a--;)Br[a]=256*Math.random()|0;a=Fr=0}for(;a<16;a++)e=Br[Fr+a],p+=6==a?$r[15&e|64]:8==a?$r[63&e|128]:$r[e],1&a&&a>1&&a<11&&(p+="-");return Fr++,p}const Ur=Gd(),Gr=require("../package.json").version,qr=process.env.GATSBY_TELEMETRY_API||"https://analytics.gatsbyjs.com/events";let zr;const Hr=function(e){if("boolean"==typeof e)return e;if(null==e)return!1;if("true"===e.toLowerCase())return!0;if("false"===e.toLowerCase())return!1;const a=parseInt(e,10);return!isNaN(a)&&a>0}(process.env.GATSBY_TELEMETRY_DISABLED),Yr=()=>{let e=Ur.get("telemetry.machineId");return"string"!=typeof e&&(e=Mr(),Ur.set("telemetry.machineId",e)),e},Wr=Mr(),Xr=(e,a)=>{(function(){if(void 0!==zr)return zr;let e=Ur.get("telemetry.enabled");return null==e&&(e=!0,Ur.set("telemetry.enabled",e)),Hr&&(e=!1),zr=e,e})()&&jr(qr,{method:"POST",headers:{"content-type":"application/json","user-agent":`create-gatsby:${Gr}`},body:JSON.stringify({eventType:e,time:new Date,sessionId:Wr,machineId:Yr(),componentId:"create-gatsby",componentVersion:1,gatsbyCliVersion:Gr,...a})}).catch(()=>{})},Kr=e=>e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase().replace(/[^a-z0-9_.]+/g,"-").replace(/^[_\-.]+|[_\-.]+$/g,"");var Jr={js:{message:"JavaScript"},ts:{message:"TypeScript"}};const Zr=/[<>:"/\\|?*\u0000-\u001F]/g,Qr=/^(con|prn|aux|nul|com\d|lpt\d)$/i,en=(e,a=!1)=>{const p=Object.entries(e).map(([e,a])=>({name:e,message:a.message}));return a?p:[{name:"none",message:"No (or I'll add it later)"},{name:"‚Äì",role:"separator",message:"‚Äì"},...p]};function an(e){return e?(e=e.trim(),Zr.test(e)?(dd(`The destination "${e}" is not a valid filename. Please try again, avoiding special characters.`),!1):"win32"===process.platform&&Qr.test(e)?(dd(`The destination "${e}" is not a valid Windows filename. Please try another name`),!1):!_.default.existsSync(N.default.resolve(e))||(dd(`The destination "${e}" already exists. Please choose a different name`),!1)):(dd("You have not provided a directory name for your site. Please do so when running with the 'y' flag."),!1)}const pn=e=>"win32"===process.platform?"":e;var tn;!function(e){e.yes="-y",e.ts="-ts"}(tn||(tn={}));const dn={js:"https://github.com/gatsbyjs/gatsby-starter-minimal.git",ts:"https://github.com/gatsbyjs/gatsby-starter-minimal-ts.git"};process.on("exit",e=>{Xr("CREATE_GATSBY_END",{exitCode:e}),-1===e&&Xr("CREATE_GATSBY_ERROR")}),exports.DEFAULT_STARTERS=dn,exports.run=async function(){var e;const{flags:a,dirName:p}=function(e){const{flags:a,dirName:p}=e.reduce((e,a)=>{switch(a){case tn.yes:e.flags.yes=!0;break;case tn.ts:e.flags.ts=!0;break;default:if(a.startsWith("-")){dd(`Found unknown argument "${a}", ignoring. Known arguments are: ${tn.yes}, ${tn.ts}`);break}e.dirName=a}return e},{flags:{yes:!1,ts:!1},dirName:""});return{flags:a,dirName:p}}(process.argv.slice(2));Xr("CREATE_GATSBY_START");const{version:i}=require("../package.json");pd(U.grey(`create-gatsby version ${i}`)),pd(`\n\n\n${function(e,a=" ",p=Os){return a.repeat(Math.round((p-(e=>{if(""===e)return 0;const a=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const a=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(a,e?void 0:"g")})(),""):e)(e);return""===a?0:a.match((()=>{const e="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff]",a="\\ud83c[\\udffb-\\udfff]",p="[^\\ud800-\\udfff]",t="(?:\\uD83C[\\uDDE6-\\uDDFF]){2}",i="[\\ud800-\\udbff][\\udc00-\\udfff]",d=`(?:${e}|${a})?`,s="[\\ufe0e\\ufe0f]?",r=s+d+`(?:\\u200d(?:${[p,t,i].join("|")})${s+d})*`,n=`(?:${[`${p}${e}?`,e,t,i,"[\\ud800-\\udfff]","[\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF93]"].join("|")})`;return new RegExp(`(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40(?:\\udc65|\\udc73|\\udc77)\\udb40(?:\\udc6e|\\udc63|\\udc6c)\\udb40(?:\\udc67|\\udc74|\\udc73)\\udb40\\udc7f)|${a}(?=${a})|${n+r}`,"g")})()).length})(e))/2))+e}(U.blueBright.bold.underline("Welcome to Gatsby!"))}\n\n\n`),a.yes||pd(((e,a=Os)=>function(e,a){(a=a||{}).width=a.hasOwnProperty("width")?a.width:80,a.ignoreAnsi=!a.hasOwnProperty("ignoreAnsi")||a.ignoreAnsi,a.patterns=a.hasOwnProperty("patterns")?a.patterns:[],a.ignoreAnsi&&(a.patterns=[/\u001b.*?m/g].concat(a.patterns));let p=e.split("\n"),t=[];for(let e of p){let p=e.split(" "),i="";for(let e of p)Cs(e,a)+Cs(i,a)+1>a.width&&(t.push(i),i=""),i&&(i+=" "),i+=e;t.push(i)}return t.join("\n")}(e,{width:a}))(`This command will generate a new Gatsby site for you in ${U.bold(process.cwd())} with the setup you select. ${U.white.bold("Let's answer some questions:\n\n")}`,process.stdout.columns));const d=new ia;let s;d.use(Zd);let r="";if(a.yes){if(r=p,!an(p))return;s=Kr(p)}else{const{name:e}=await d.prompt({type:"textinput",name:"name",message:"What would you like to call your site?",initial:"My Gatsby Site",format:e=>U.cyan(e)});s=Kr(e),r=e}const n=((e,a)=>{const p={type:"textinput",name:"project",message:"What would you like to name the folder where your site will be created?",hint:N.default.basename(process.cwd()),separator:"/",initial:e,format:e=>U.cyan(e),validate:an,skip:a.yes},t={type:"selectinput",name:"language",message:"Will you be using JavaScript or TypeScript?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(Jr,!0)},i=[{type:"selectinput",name:"cms",message:"Will you be using a CMS?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(da)},{type:"selectinput",name:"styling",message:"Would you like to install a styling system?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(sa)},{type:"multiselectinput",name:"features",message:"Would you like to install additional features with other plugins?",hint:'(Multiple choice) Use arrow keys to move, spacebar to select, and confirm with an enter on "Done"',choices:en(ra,!0)}];return a.yes?p:a.ts?[p,...i]:[p,t,...i]})(s,a),l=await d.prompt(n);var o;l.project=l.project.trim(),a.yes&&(l.language="js"),a.ts&&(l.language="ts"),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"project_name",valueString:(o=l.project,O.default.createHash("sha256").update(o).digest("hex"))}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"LANGUAGE",valueString:l.language}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"CMS",valueString:l.cms||"none"}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"CSS_TOOLS",valueString:l.styling||"none"}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"PLUGIN",valueStringArray:l.features||[]});const m=[`${pn("üõ†  ")}Create a new Gatsby site in the folder ${U.magenta(l.project)}`],u=[],c=[];let h={};if(l.cms&&"none"!==l.cms){m.push(`${pn("üìö ")}Install and configure the plugin for ${U.magenta(da[l.cms].message)}`);const e=da[l.cms].plugins||[];u.push(l.cms,...e),c.push(l.cms,...da[l.cms].dependencies||[],...e),h={...h,...da[l.cms].options}}if(l.styling&&"none"!==l.styling){m.push(`${pn("üé® ")}Get you set up to use ${U.magenta(sa[l.styling].message)} for styling your site`);const e=sa[l.styling].plugins||[];u.push(l.styling,...e),c.push(l.styling,...sa[l.styling].dependencies||[],...e),h={...h,...sa[l.styling].options}}if(null!=(e=l.features)&&e.length){var f,v;m.push(`${pn("üîå ")}Install ${null==(f=l.features)?void 0:f.map(e=>U.magenta(e)).join(", ")}`),u.push(...l.features);const e=null==(v=l.features)?void 0:v.map(e=>{const a=ra[e].plugins||[];return u.push(...a),[...ra[e].dependencies||[],...a]}),a=[].concat.apply([],e);c.push(...l.features,...a),h=l.features.reduce((e,a)=>({...e,...ra[a].options}),h)}const w=(e=>{const a=[];return e.forEach(e=>{const p=Ns[e];if(!p||"string"==typeof p||!("keys"in p))return;const t=null==p?void 0:p.keys;if(!t)return;const i=Object.entries(t).filter(As).map(Vs);i.length>0&&a.push({type:"forminput",name:e,multiple:!0,message:us`
+var e=require("assert"),a=require("events"),p=require("readline"),t=require("child_process"),i=require("path"),d=require("fs"),s=require("os"),r=require("buffer"),n=require("stream"),l=require("util"),o=require("constants"),m=require("crypto"),u=require("tty"),c=require("http"),h=require("url"),f=require("punycode/"),v=require("https"),w=require("zlib");function g(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var y=/*#__PURE__*/g(e),b=/*#__PURE__*/g(a),S=/*#__PURE__*/g(p),E=/*#__PURE__*/g(t),N=/*#__PURE__*/g(i),_=/*#__PURE__*/g(d),T=/*#__PURE__*/g(s),D=/*#__PURE__*/g(r),A=/*#__PURE__*/g(n),V=/*#__PURE__*/g(l),C=/*#__PURE__*/g(o),O=/*#__PURE__*/g(m),I=/*#__PURE__*/g(u),x=/*#__PURE__*/g(c),R=/*#__PURE__*/g(h),P=/*#__PURE__*/g(f),k=/*#__PURE__*/g(v),L=/*#__PURE__*/g(w),j="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function B(e){var a={exports:{}};return e(a,a.exports),a.exports}var F=B(function(e){const a="Hyper"===process.env.TERM_PROGRAM,p="win32"===process.platform,t="linux"===process.platform,i={ballotDisabled:"‚òí",ballotOff:"‚òê",ballotOn:"‚òë",bullet:"‚Ä¢",bulletWhite:"‚ó¶",fullBlock:"‚ñà",heart:"‚ù§",identicalTo:"‚â°",line:"‚îÄ",mark:"‚Äª",middot:"¬∑",minus:"Ôºç",multiplication:"√ó",obelus:"√∑",pencilDownRight:"‚úé",pencilRight:"‚úè",pencilUpRight:"‚úê",percent:"%",pilcrow2:"‚ù°",pilcrow:"¬∂",plusMinus:"¬±",section:"¬ß",starsOff:"‚òÜ",starsOn:"‚òÖ",upDownArrow:"‚Üï"},d=Object.assign({},i,{check:"‚àö",cross:"√ó",ellipsisLarge:"...",ellipsis:"...",info:"i",question:"?",questionSmall:"?",pointer:">",pointerSmall:"¬ª",radioOff:"( )",radioOn:"(*)",warning:"‚Äº"}),s=Object.assign({},i,{ballotCross:"‚úò",check:"‚úî",cross:"‚úñ",ellipsisLarge:"‚ãØ",ellipsis:"‚Ä¶",info:"‚Ñπ",question:"?",questionFull:"Ôºü",questionSmall:"Ôπñ",pointer:t?"‚ñ∏":"‚ùØ",pointerSmall:t?"‚Ä£":"‚Ä∫",radioOff:"‚óØ",radioOn:"‚óâ",warning:"‚ö†"});e.exports=p&&!a?d:s,Reflect.defineProperty(e.exports,"common",{enumerable:!1,value:i}),Reflect.defineProperty(e.exports,"windows",{enumerable:!1,value:d}),Reflect.defineProperty(e.exports,"other",{enumerable:!1,value:s})});const $=/[\u001b\u009b][[\]#;?()]*(?:(?:(?:[^\W_]*;?[^\W_]*)\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g,M=()=>{const e={enabled:!0,visible:!0,styles:{},keys:{}};"FORCE_COLOR"in process.env&&(e.enabled="0"!==process.env.FORCE_COLOR);const a=(e,a,p)=>"function"==typeof e?e(a):e.wrap(a,p),p=(p,t)=>{if(""===p||null==p)return"";if(!1===e.enabled)return p;if(!1===e.visible)return"";let i=""+p,d=i.includes("\n"),s=t.length;for(s>0&&t.includes("unstyle")&&(t=[...new Set(["unstyle",...t])].reverse());s-- >0;)i=a(e.styles[t[s]],i,d);return i},t=(a,t,i)=>{e.styles[a]=(e=>{let a=e.open=`[${e.codes[0]}m`,p=e.close=`[${e.codes[1]}m`,t=e.regex=new RegExp(`\\u001b\\[${e.codes[1]}m`,"g");return e.wrap=(e,i)=>{e.includes(p)&&(e=e.replace(t,p+a));let d=a+e+p;return i?d.replace(/\r*\n/g,`${p}$&${a}`):d},e})({name:a,codes:t}),(e.keys[i]||(e.keys[i]=[])).push(a),Reflect.defineProperty(e,a,{configurable:!0,enumerable:!0,set(p){e.alias(a,p)},get(){let t=e=>p(e,t.stack);return Reflect.setPrototypeOf(t,e),t.stack=this.stack?this.stack.concat(a):[a],t}})};return t("reset",[0,0],"modifier"),t("bold",[1,22],"modifier"),t("dim",[2,22],"modifier"),t("italic",[3,23],"modifier"),t("underline",[4,24],"modifier"),t("inverse",[7,27],"modifier"),t("hidden",[8,28],"modifier"),t("strikethrough",[9,29],"modifier"),t("black",[30,39],"color"),t("red",[31,39],"color"),t("green",[32,39],"color"),t("yellow",[33,39],"color"),t("blue",[34,39],"color"),t("magenta",[35,39],"color"),t("cyan",[36,39],"color"),t("white",[37,39],"color"),t("gray",[90,39],"color"),t("grey",[90,39],"color"),t("bgBlack",[40,49],"bg"),t("bgRed",[41,49],"bg"),t("bgGreen",[42,49],"bg"),t("bgYellow",[43,49],"bg"),t("bgBlue",[44,49],"bg"),t("bgMagenta",[45,49],"bg"),t("bgCyan",[46,49],"bg"),t("bgWhite",[47,49],"bg"),t("blackBright",[90,39],"bright"),t("redBright",[91,39],"bright"),t("greenBright",[92,39],"bright"),t("yellowBright",[93,39],"bright"),t("blueBright",[94,39],"bright"),t("magentaBright",[95,39],"bright"),t("cyanBright",[96,39],"bright"),t("whiteBright",[97,39],"bright"),t("bgBlackBright",[100,49],"bgBright"),t("bgRedBright",[101,49],"bgBright"),t("bgGreenBright",[102,49],"bgBright"),t("bgYellowBright",[103,49],"bgBright"),t("bgBlueBright",[104,49],"bgBright"),t("bgMagentaBright",[105,49],"bgBright"),t("bgCyanBright",[106,49],"bgBright"),t("bgWhiteBright",[107,49],"bgBright"),e.ansiRegex=$,e.hasColor=e.hasAnsi=a=>(e.ansiRegex.lastIndex=0,"string"==typeof a&&""!==a&&e.ansiRegex.test(a)),e.alias=(a,t)=>{let i="string"==typeof t?e[t]:t;if("function"!=typeof i)throw new TypeError("Expected alias to be the name of an existing color (string) or a function");i.stack||(Reflect.defineProperty(i,"name",{value:a}),e.styles[a]=i,i.stack=[a]),Reflect.defineProperty(e,a,{configurable:!0,enumerable:!0,set(p){e.alias(a,p)},get(){let a=e=>p(e,a.stack);return Reflect.setPrototypeOf(a,e),a.stack=this.stack?this.stack.concat(i.stack):i.stack,a}})},e.theme=a=>{if(null===(p=a)||"object"!=typeof p||Array.isArray(p))throw new TypeError("Expected theme to be an object");var p;for(let p of Object.keys(a))e.alias(p,a[p]);return e},e.alias("unstyle",a=>"string"==typeof a&&""!==a?(e.ansiRegex.lastIndex=0,a.replace(e.ansiRegex,"")):""),e.alias("noop",e=>e),e.none=e.clear=e.noop,e.stripColor=e.unstyle,e.symbols=F,e.define=t,e};var U=M();U.create=M;var G=B(function(e,a){const p=Object.prototype.toString;let t=!1,i=[];const d={yellow:"blue",cyan:"red",green:"magenta",black:"white",blue:"yellow",red:"cyan",magenta:"green",white:"black"};a.longest=(e,a)=>e.reduce((e,p)=>Math.max(e,a?p[a].length:p.length),0),a.hasColor=e=>!!e&&U.hasColor(e);const s=a.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e);a.nativeType=e=>p.call(e).slice(8,-1).toLowerCase().replace(/\s/g,""),a.isAsyncFn=e=>"asyncfunction"===a.nativeType(e),a.isPrimitive=e=>null!=e&&"object"!=typeof e&&"function"!=typeof e,a.resolve=(e,a,...p)=>"function"==typeof a?a.call(e,...p):a,a.scrollDown=(e=[])=>[...e.slice(1),e[0]],a.scrollUp=(e=[])=>[e.pop(),...e],a.reorder=(e=[])=>{let a=e.slice();return a.sort((e,a)=>e.index>a.index?1:e.index<a.index?-1:0),a},a.swap=(e,a,p)=>{let t=e.length,i=p===t?0:p<0?t-1:p,d=e[a];e[a]=e[i],e[i]=d},a.width=(e,a=80)=>{let p=e&&e.columns?e.columns:a;return e&&"function"==typeof e.getWindowSize&&(p=e.getWindowSize()[0]),"win32"===process.platform?p-1:p},a.height=(e,a=20)=>{let p=e&&e.rows?e.rows:a;return e&&"function"==typeof e.getWindowSize&&(p=e.getWindowSize()[1]),p},a.wordWrap=(e,a={})=>{if(!e)return e;"number"==typeof a&&(a={width:a});let{indent:p="",newline:t="\n"+p,width:i=80}=a,d=(t+p).match(/[^\S\n]/g)||[];i-=d.length;let s=`.{1,${i}}([\\s\\u200B]+|$)|[^\\s\\u200B]+?([\\s\\u200B]+|$)`,r=e.trim(),n=new RegExp(s,"g"),l=r.match(n)||[];return l=l.map(e=>e.replace(/\n$/,"")),a.padEnd&&(l=l.map(e=>e.padEnd(i," "))),a.padStart&&(l=l.map(e=>e.padStart(i," "))),p+l.join(t)},a.unmute=e=>{let a=e.stack.find(e=>U.keys.color.includes(e));return a?U[a]:e.stack.find(e=>"bg"===e.slice(2))?U[a.slice(2)]:e=>e},a.pascal=e=>e?e[0].toUpperCase()+e.slice(1):"",a.inverse=e=>{if(!e||!e.stack)return e;let p=e.stack.find(e=>U.keys.color.includes(e));if(p){let t=U["bg"+a.pascal(p)];return t?t.black:e}let t=e.stack.find(e=>"bg"===e.slice(0,2));return t?U[t.slice(2).toLowerCase()]||e:U.none},a.complement=e=>{if(!e||!e.stack)return e;let p=e.stack.find(e=>U.keys.color.includes(e)),t=e.stack.find(e=>"bg"===e.slice(0,2));if(p&&!t)return U[d[p]||p];if(t){let p=t.slice(2).toLowerCase(),i=d[p];return i&&U["bg"+a.pascal(i)]||e}return U.none},a.meridiem=e=>{let a=e.getHours(),p=e.getMinutes(),t=a>=12?"pm":"am";return a%=12,(0===a?12:a)+":"+(p<10?"0"+p:p)+" "+t},a.set=(e={},p="",t)=>p.split(".").reduce((e,p,i,d)=>{let s=d.length-1>i?e[p]||{}:t;return!a.isObject(s)&&i<d.length-1&&(s={}),e[p]=s},e),a.get=(e={},a="",p)=>{let t=null==e[a]?a.split(".").reduce((e,a)=>e&&e[a],e):e[a];return null==t?p:t},a.mixin=(e,p)=>{if(!s(e))return p;if(!s(p))return e;for(let t of Object.keys(p)){let i=Object.getOwnPropertyDescriptor(p,t);if(i.hasOwnProperty("value"))if(e.hasOwnProperty(t)&&s(i.value)){let d=Object.getOwnPropertyDescriptor(e,t);s(d.value)?e[t]=a.merge({},e[t],p[t]):Reflect.defineProperty(e,t,i)}else Reflect.defineProperty(e,t,i);else Reflect.defineProperty(e,t,i)}return e},a.merge=(...e)=>{let p={};for(let t of e)a.mixin(p,t);return p},a.mixinEmitter=(e,p)=>{let t=p.constructor.prototype;for(let i of Object.keys(t)){let d=t[i];a.define(e,i,"function"==typeof d?d.bind(p):d)}},a.onExit=e=>{const a=(e,a)=>{t||(t=!0,i.forEach(e=>e()),!0===e&&process.exit(128+a))};0===i.length&&(process.once("SIGTERM",a.bind(null,!0,15)),process.once("SIGINT",a.bind(null,!0,2)),process.once("exit",a)),i.push(e)},a.define=(e,a,p)=>{Reflect.defineProperty(e,a,{value:p})},a.defineExport=(e,a,p)=>{let t;Reflect.defineProperty(e,a,{enumerable:!0,configurable:!0,set(e){t=e},get:()=>t?t():p()})}}),q={ctrl:{a:"first",b:"backward",c:"cancel",d:"deleteForward",e:"last",f:"forward",g:"reset",i:"tab",k:"cutForward",l:"reset",n:"newItem",m:"cancel",j:"submit",p:"search",r:"remove",s:"save",u:"undo",w:"cutLeft",x:"toggleCursor",v:"paste"},shift:{up:"shiftUp",down:"shiftDown",left:"shiftLeft",right:"shiftRight",tab:"prev"},fn:{up:"pageUp",down:"pageDown",left:"pageLeft",right:"pageRight",delete:"deleteForward"},option:{b:"backward",f:"forward",d:"cutRight",left:"cutLeft",up:"altUp",down:"altDown"},keys:{pageup:"pageUp",pagedown:"pageDown",home:"home",end:"end",cancel:"cancel",delete:"deleteForward",backspace:"delete",down:"down",enter:"submit",escape:"cancel",left:"left",space:"space",number:"number",return:"submit",right:"right",tab:"next",up:"up"}};const z=/^(?:\x1b)([a-zA-Z0-9])$/,H=/^(?:\x1b+)(O|N|\[|\[\[)(?:(\d+)(?:;(\d+))?([~^$])|(?:1;)?(\d+)?([a-zA-Z]))/,Y={OP:"f1",OQ:"f2",OR:"f3",OS:"f4","[11~":"f1","[12~":"f2","[13~":"f3","[14~":"f4","[[A":"f1","[[B":"f2","[[C":"f3","[[D":"f4","[[E":"f5","[15~":"f5","[17~":"f6","[18~":"f7","[19~":"f8","[20~":"f9","[21~":"f10","[23~":"f11","[24~":"f12","[A":"up","[B":"down","[C":"right","[D":"left","[E":"clear","[F":"end","[H":"home",OA:"up",OB:"down",OC:"right",OD:"left",OE:"clear",OF:"end",OH:"home","[1~":"home","[2~":"insert","[3~":"delete","[4~":"end","[5~":"pageup","[6~":"pagedown","[[5~":"pageup","[[6~":"pagedown","[7~":"home","[8~":"end","[a":"up","[b":"down","[c":"right","[d":"left","[e":"clear","[2$":"insert","[3$":"delete","[5$":"pageup","[6$":"pagedown","[7$":"home","[8$":"end",Oa:"up",Ob:"down",Oc:"right",Od:"left",Oe:"clear","[2^":"insert","[3^":"delete","[5^":"pageup","[6^":"pagedown","[7^":"home","[8^":"end","[Z":"tab"},W=(e="",a={})=>{let p,t={name:a.name,ctrl:!1,meta:!1,shift:!1,option:!1,sequence:e,raw:e,...a};if(Buffer.isBuffer(e)?e[0]>127&&void 0===e[1]?(e[0]-=128,e=""+String(e)):e=String(e):void 0!==e&&"string"!=typeof e?e=String(e):e||(e=t.sequence||""),t.sequence=t.sequence||e||t.name,"\r"===e)t.raw=void 0,t.name="return";else if("\n"===e)t.name="enter";else if("\t"===e)t.name="tab";else if("\b"===e||""===e||""===e||"\b"===e)t.name="backspace",t.meta=""===e.charAt(0);else if(""===e||""===e)t.name="escape",t.meta=2===e.length;else if(" "===e||" "===e)t.name="space",t.meta=2===e.length;else if(e<="")t.name=String.fromCharCode(e.charCodeAt(0)+"a".charCodeAt(0)-1),t.ctrl=!0;else if(1===e.length&&e>="0"&&e<="9")t.name="number";else if(1===e.length&&e>="a"&&e<="z")t.name=e;else if(1===e.length&&e>="A"&&e<="Z")t.name=e.toLowerCase(),t.shift=!0;else if(p=z.exec(e))t.meta=!0,t.shift=/^[A-Z]$/.test(p[1]);else if(p=H.exec(e)){let a=[...e];""===a[0]&&""===a[1]&&(t.option=!0);let i=[p[1],p[2],p[4],p[6]].filter(Boolean).join(""),d=(p[3]||p[5]||1)-1;t.ctrl=!!(4&d),t.meta=!!(10&d),t.shift=!!(1&d),t.code=i,t.name=Y[i],t.shift=function(e){return["[a","[b","[c","[d","[e","[2$","[3$","[5$","[6$","[7$","[8$","[Z"].includes(e)}(i)||t.shift,t.ctrl=function(e){return["Oa","Ob","Oc","Od","Oe","[2^","[3^","[5^","[6^","[7^","[8^"].includes(e)}(i)||t.ctrl}return t};W.listen=(e={},a)=>{let{stdin:p}=e;if(!p||p!==process.stdin&&!p.isTTY)throw new Error("Invalid stream passed");let t=S.default.createInterface({terminal:!0,input:p});S.default.emitKeypressEvents(p,t);let i=(e,p)=>a(e,W(e,p),t),d=p.isRaw;return p.isTTY&&p.setRawMode(!0),p.on("keypress",i),t.resume(),()=>{p.isTTY&&p.setRawMode(d),p.removeListener("keypress",i),t.pause(),t.close()}},W.action=(e,a,p)=>{let t={...q,...p};return a.ctrl?(a.action=t.ctrl[a.name],a):a.option&&t.option?(a.action=t.option[a.name],a):a.shift?(a.action=t.shift[a.name],a):(a.action=t.keys[a.name],a)};var X=W;function K(e,a,p={}){let t=e.timers[a]={name:a,start:Date.now(),ms:0,tick:0},i=p.interval||120;t.frames=p.frames||[],t.loading=!0;let d=setInterval(()=>{t.ms=Date.now()-t.start,t.tick++,e.render()},i);return t.stop=()=>{t.loading=!1,clearInterval(d)},Reflect.defineProperty(t,"interval",{value:d}),e.once("close",()=>t.stop()),t.stop}const{define:J,width:Z}=G,Q={default:U.noop,noop:U.noop,set inverse(e){this._inverse=e},get inverse(){return this._inverse||G.inverse(this.primary)},set complement(e){this._complement=e},get complement(){return this._complement||G.complement(this.primary)},primary:U.cyan,success:U.green,danger:U.magenta,strong:U.bold,warning:U.yellow,muted:U.dim,disabled:U.gray,dark:U.dim.gray,underline:U.underline,set info(e){this._info=e},get info(){return this._info||this.primary},set em(e){this._em=e},get em(){return this._em||this.primary.underline},set heading(e){this._heading=e},get heading(){return this._heading||this.muted.underline},set pending(e){this._pending=e},get pending(){return this._pending||this.primary},set submitted(e){this._submitted=e},get submitted(){return this._submitted||this.success},set cancelled(e){this._cancelled=e},get cancelled(){return this._cancelled||this.danger},set typing(e){this._typing=e},get typing(){return this._typing||this.dim},set placeholder(e){this._placeholder=e},get placeholder(){return this._placeholder||this.primary.dim},set highlight(e){this._highlight=e},get highlight(){return this._highlight||this.inverse},merge:(e={})=>{e.styles&&"boolean"==typeof e.styles.enabled&&(U.enabled=e.styles.enabled),e.styles&&"boolean"==typeof e.styles.visible&&(U.visible=e.styles.visible);let a=G.merge({},Q,e.styles);delete a.merge;for(let e of Object.keys(U))a.hasOwnProperty(e)||Reflect.defineProperty(a,e,{get:()=>U[e]});for(let e of Object.keys(U.styles))a.hasOwnProperty(e)||Reflect.defineProperty(a,e,{get:()=>U[e]});return a}};var ee=Q;const ae="win32"===process.platform,pe={...U.symbols,upDownDoubleArrow:"‚áï",upDownDoubleArrow2:"‚¨ç",upDownArrow:"‚Üï",asterisk:"*",asterism:"‚ÅÇ",bulletWhite:"‚ó¶",electricArrow:"‚åÅ",ellipsisLarge:"‚ãØ",ellipsisSmall:"‚Ä¶",fullBlock:"‚ñà",identicalTo:"‚â°",indicator:U.symbols.check,leftAngle:"‚Äπ",mark:"‚Äª",minus:"‚àí",multiplication:"√ó",obelus:"√∑",percent:"%",pilcrow:"¬∂",pilcrow2:"‚ù°",pencilUpRight:"‚úê",pencilDownRight:"‚úé",pencilRight:"‚úè",plus:"+",plusMinus:"¬±",pointRight:"‚òû",rightAngle:"‚Ä∫",section:"¬ß",hexagon:{off:"‚¨°",on:"‚¨¢",disabled:"‚¨¢"},ballot:{on:"‚òë",off:"‚òê",disabled:"‚òí"},stars:{on:"‚òÖ",off:"‚òÜ",disabled:"‚òÜ"},folder:{on:"‚ñº",off:"‚ñ∂",disabled:"‚ñ∂"},prefix:{pending:U.symbols.question,submitted:U.symbols.check,cancelled:U.symbols.cross},separator:{pending:U.symbols.pointerSmall,submitted:U.symbols.middot,cancelled:U.symbols.middot},radio:{off:ae?"( )":"‚óØ",on:ae?"(*)":"‚óâ",disabled:ae?"(|)":"‚íæ"},numbers:["‚ì™","‚ë†","‚ë°","‚ë¢","‚ë£","‚ë§","‚ë•","‚ë¶","‚ëß","‚ë®","‚ë©","‚ë™","‚ë´","‚ë¨","‚ë≠","‚ëÆ","‚ëØ","‚ë∞","‚ë±","‚ë≤","‚ë≥","„âë","„âí","„âì","„âî","„âï","„âñ","„âó","„âò","„âô","„âö","„âõ","„âú","„âù","„âû","„âü","„ä±","„ä≤","„ä≥","„ä¥","„äµ","„ä∂","„ä∑","„ä∏","„äπ","„ä∫","„äª","„äº","„äΩ","„äæ","„äø"]};pe.merge=e=>{let a=G.merge({},U.symbols,pe,e.symbols);return delete a.merge,a};var te=pe,ie=B(function(e,a){const p="Apple_Terminal"===process.env.TERM_PROGRAM,t=e.exports=a,i="[";let d=!1;const s=t.code={bell:"",beep:"",beginning:"[G",down:"[J",esc:i,getPosition:"[6n",hide:"[?25l",line:"[2K",lineEnd:"[K",lineStart:"[1K",restorePosition:i+(p?"8":"u"),savePosition:i+(p?"7":"s"),screen:"[2J",show:"[?25h",up:"[1J"},r=t.cursor={get hidden(){return d},hide:()=>(d=!0,s.hide),show:()=>(d=!1,s.show),forward:(e=1)=>`[${e}C`,backward:(e=1)=>`[${e}D`,nextLine:(e=1)=>"[E".repeat(e),prevLine:(e=1)=>"[F".repeat(e),up:(e=1)=>e?`[${e}A`:"",down:(e=1)=>e?`[${e}B`:"",right:(e=1)=>e?`[${e}C`:"",left:(e=1)=>e?`[${e}D`:"",to:(e,a)=>a?`[${a+1};${e+1}H`:`[${e+1}G`,move(e=0,a=0){let p="";return p+=e<0?r.left(-e):e>0?r.right(e):"",p+=a<0?r.up(-a):a>0?r.down(a):"",p},restore(e={}){let{after:a,cursor:p,initial:i,input:d,prompt:s,size:r,value:n}=e;if(i=G.isPrimitive(i)?String(i):"",d=G.isPrimitive(d)?String(d):"",n=G.isPrimitive(n)?String(n):"",r){let e=t.cursor.up(r)+t.cursor.to(s.length),a=d.length-p;return a>0&&(e+=t.cursor.left(a)),e}if(n||a){let e=!d&&i?-i.length:-d.length+p;return a&&(e-=a.length),""===d&&i&&!s.includes(i)&&(e+=i.length),t.cursor.move(e)}}},n=t.erase={screen:s.screen,up:s.up,down:s.down,line:s.line,lineEnd:s.lineEnd,lineStart:s.lineStart,lines(e){let a="";for(let p=0;p<e;p++)a+=t.erase.line+(p<e-1?t.cursor.up(1):"");return e&&(a+=t.code.beginning),a}};t.clear=(e="",a=process.stdout.columns)=>{if(!a)return n.line+r.to(0);let p=e.split(/\r?\n/),t=0;for(let e of p)t+=1+Math.floor(Math.max([...U.unstyle(e)].length-1,0)/a);return(n.line+r.prevLine()).repeat(t-1)+n.line+r.to(0)}});class de extends b.default{constructor(e={}){super(),this.name=e.name,this.type=e.type,this.options=e,(e=>{e.options=G.merge({},e.options.theme,e.options),e.symbols=te.merge(e.options),e.styles=ee.merge(e.options)})(this),(e=>{e.timers=e.timers||{};let a=e.options.timers;if(a)for(let p of Object.keys(a)){let t=a[p];"number"==typeof t&&(t={interval:t}),K(e,p,t)}})(this),this.state=new class{constructor(e){let a=e.options;J(this,"_prompt",e),this.type=e.type,this.name=e.name,this.message="",this.header="",this.footer="",this.error="",this.hint="",this.input="",this.cursor=0,this.index=0,this.lines=0,this.tick=0,this.prompt="",this.buffer="",this.width=Z(a.stdout||process.stdout),Object.assign(this,a),this.name=this.name||this.message,this.message=this.message||this.name,this.symbols=e.symbols,this.styles=e.styles,this.required=new Set,this.cancelled=!1,this.submitted=!1}clone(){let e={...this};return e.status=this.status,e.buffer=Buffer.from(e.buffer),delete e.clone,e}set color(e){this._color=e}get color(){let e=this.prompt.styles;if(this.cancelled)return e.cancelled;if(this.submitted)return e.submitted;let a=this._color||e[this.status];return"function"==typeof a?a:e.pending}set loading(e){this._loading=e}get loading(){return"boolean"==typeof this._loading?this._loading:!!this.loadingChoices&&"choices"}get status(){return this.cancelled?"cancelled":this.submitted?"submitted":"pending"}}(this),this.initial=[e.initial,e.default].find(e=>null!=e),this.stdout=e.stdout||process.stdout,this.stdin=e.stdin||process.stdin,this.scale=e.scale||1,this.term=this.options.term||process.env.TERM_PROGRAM,this.margin=function(e){"number"==typeof e&&(e=[e,e,e,e]);let a=[].concat(e||[]),p=e=>e%2==0?"\n":" ",t=[];for(let e=0;e<4;e++){let i=p(e);t.push(a[e]?i.repeat(a[e]):"")}return t}(this.options.margin),this.setMaxListeners(0),function(e){let a=a=>void 0===e[a]||"function"==typeof e[a],p=["actions","choices","initial","margin","roles","styles","symbols","theme","timers","value"],t=["body","footer","error","header","hint","indicator","message","prefix","separator","skip"];for(let i of Object.keys(e.options)){if(p.includes(i))continue;if(/^on[A-Z]/.test(i))continue;let d=e.options[i];"function"==typeof d&&a(i)?t.includes(i)||(e[i]=d.bind(e)):"function"!=typeof e[i]&&(e[i]=d)}}(this)}async keypress(e,a={}){this.keypressed=!0;let p=X.action(e,X(e,a),this.options.actions);this.state.keypress=p,this.emit("keypress",e,p),this.emit("state",this.state.clone());let t=this.options[p.action]||this[p.action]||this.dispatch;if("function"==typeof t)return await t.call(this,e,p);this.alert()}alert(){delete this.state.alert,!1===this.options.show?this.emit("alert"):this.stdout.write(ie.code.beep)}cursorHide(){this.stdout.write(ie.cursor.hide()),G.onExit(()=>this.cursorShow())}cursorShow(){this.stdout.write(ie.cursor.show())}write(e){e&&(this.stdout&&!1!==this.state.show&&this.stdout.write(e),this.state.buffer+=e)}clear(e=0){let a=this.state.buffer;this.state.buffer="",(a||e)&&!1!==this.options.show&&this.stdout.write(ie.cursor.down(e)+ie.clear(a,this.width))}restore(){if(this.state.closed||!1===this.options.show)return;let{prompt:e,after:a,rest:p}=this.sections(),{cursor:t,initial:i="",input:d="",value:s=""}=this,r=this.state.size=p.length,n=ie.cursor.restore({after:a,cursor:t,initial:i,input:d,prompt:e,size:r,value:s});n&&this.stdout.write(n)}sections(){let{buffer:e,input:a,prompt:p}=this.state;p=U.unstyle(p);let t=U.unstyle(e),i=t.indexOf(p),d=t.slice(0,i),s=t.slice(i).split("\n"),r=s[0],n=s[s.length-1],l=(p+(a?" "+a:"")).length,o=l<r.length?r.slice(l+1):"";return{header:d,prompt:r,after:o,rest:s.slice(1),last:n}}async submit(){this.state.submitted=!0,this.state.validating=!0,this.options.onSubmit&&await this.options.onSubmit.call(this,this.name,this.value,this);let e=this.state.error||await this.validate(this.value,this.state);if(!0!==e){let a="\n"+this.symbols.pointer+" ";return a+="string"==typeof e?e.trim():"Invalid input",this.state.error="\n"+this.styles.danger(a),this.state.submitted=!1,await this.render(),await this.alert(),this.state.validating=!1,void(this.state.error=void 0)}this.state.validating=!1,await this.render(),await this.close(),this.value=await this.result(this.value),this.emit("submit",this.value)}async cancel(e){this.state.cancelled=this.state.submitted=!0,await this.render(),await this.close(),"function"==typeof this.options.onCancel&&await this.options.onCancel.call(this,this.name,this.value,this),this.emit("cancel",await this.error(e))}async close(){this.state.closed=!0;try{let e=this.sections(),a=Math.ceil(e.prompt.length/this.width);e.rest&&this.write(ie.cursor.down(e.rest.length)),this.write("\n".repeat(a))}catch(e){}this.emit("close")}start(){this.stop||!1===this.options.show||(this.stop=X.listen(this,this.keypress.bind(this)),this.once("close",this.stop))}async skip(){return this.skipped=!0===this.options.skip,"function"==typeof this.options.skip&&(this.skipped=await this.options.skip.call(this,this.name,this.value)),this.skipped}async initialize(){let{format:e,options:a,result:p}=this;if(this.format=()=>e.call(this,this.value),this.result=()=>p.call(this,this.value),"function"==typeof a.initial&&(this.initial=await a.initial.call(this,this)),"function"==typeof a.onRun&&await a.onRun.call(this,this),"function"==typeof a.onSubmit){let e=a.onSubmit.bind(this),p=this.submit.bind(this);delete this.options.onSubmit,this.submit=async()=>(await e(this.name,this.value,this),p())}await this.start(),await this.render()}render(){throw new Error("expected prompt to have a custom render method")}run(){return new Promise(async(e,a)=>{if(this.once("submit",e),this.once("cancel",a),await this.skip())return this.render=()=>{},this.submit();await this.initialize(),this.emit("run")})}async element(e,a,p){let{options:t,state:i,symbols:d,timers:s}=this;i.timer=s&&s[e];let r=t[e]||i[e]||d[e],n=a&&null!=a[e]?a[e]:await r;if(""===n)return n;let l=await this.resolve(n,i,a,p);return!l&&a&&a[e]?this.resolve(r,i,a,p):l}async prefix(){let e=await this.element("prefix")||this.symbols,a=this.state;return a.timer=this.timers&&this.timers.prefix,G.isObject(e)&&(e=e[a.status]||e.pending),G.hasColor(e)?e:(this.styles[a.status]||this.styles.pending)(e)}async message(){let e=await this.element("message");return G.hasColor(e)?e:this.styles.strong(e)}async separator(){let e=await this.element("separator")||this.symbols,a=this.state;a.timer=this.timers&&this.timers.separator;let p=e[a.status]||e.pending||a.separator,t=await this.resolve(p,a);return G.isObject(t)&&(t=t[a.status]||t.pending),G.hasColor(t)?t:this.styles.muted(t)}async pointer(e,a){let p=await this.element("pointer",e,a);if("string"==typeof p&&G.hasColor(p))return p;if(p){let e=this.styles,t=this.index===a,i=t?e.primary:e=>e,d=await this.resolve(p[t?"on":"off"]||p,this.state),s=G.hasColor(d)?d:i(d);return t?s:" ".repeat(d.length)}}async indicator(e,a){let p=await this.element("indicator",e,a);if("string"==typeof p&&G.hasColor(p))return p;if(p){let a=this.styles,t=!0===e.enabled,i=t?a.success:a.dark,d=p[t?"on":"off"]||p;return G.hasColor(d)?d:i(d)}return""}body(){return null}footer(){if("pending"===this.state.status)return this.element("footer")}header(){if("pending"===this.state.status)return this.element("header")}async hint(){if("pending"===this.state.status&&!this.isValue(this.state.input)){let e=await this.element("hint");return G.hasColor(e)?e:this.styles.muted(e)}}error(e){return this.state.submitted?"":e||this.state.error}format(e){return e}result(e){return e}validate(e){return!0!==this.options.required||this.isValue(e)}isValue(e){return null!=e&&""!==e}resolve(e,...a){return G.resolve(this,e,...a)}get base(){return de.prototype}get style(){return this.styles[this.state.status]}get height(){return this.options.rows||G.height(this.stdout,25)}get width(){return this.options.columns||G.width(this.stdout,80)}get size(){return{width:this.width,height:this.height}}set cursor(e){this.state.cursor=e}get cursor(){return this.state.cursor}set input(e){this.state.input=e}get input(){return this.state.input}set value(e){this.state.value=e}get value(){let{input:e,value:a}=this.state,p=[a,e].find(this.isValue.bind(this));return this.isValue(p)?p:this.initial}static get prompt(){return e=>new this(e).run()}}var se=de;const re={default:(e,a)=>a,checkbox(e,a){throw new Error("checkbox role is not implemented yet")},editable(e,a){throw new Error("editable role is not implemented yet")},expandable(e,a){throw new Error("expandable role is not implemented yet")},heading:(e,a)=>(a.disabled="",a.indicator=[a.indicator," "].find(e=>null!=e),a.message=a.message||"",a),input(e,a){throw new Error("input role is not implemented yet")},option:(e,a)=>re.default(e,a),radio(e,a){throw new Error("radio role is not implemented yet")},separator:(e,a)=>(a.disabled="",a.indicator=[a.indicator," "].find(e=>null!=e),a.message=a.message||e.symbols.line.repeat(5),a),spacer:(e,a)=>a},{reorder:ne,scrollUp:le,scrollDown:oe,isObject:me,swap:ue}=G;function ce(e,a){if(a instanceof Promise)return a;if("function"==typeof a){if(G.isAsyncFn(a))return a;a=a.call(e,e)}for(let p of a){if(Array.isArray(p.choices)){let a=p.choices.filter(a=>!e.isDisabled(a));p.enabled=a.every(e=>!0===e.enabled)}!0===e.isDisabled(p)&&delete p.enabled}return a}var he=class extends se{constructor(e){super(e),this.cursorHide(),this.maxSelected=e.maxSelected||Infinity,this.multiple=e.multiple||!1,this.initial=e.initial||0,this.delay=e.delay||0,this.longest=0,this.num=""}async initialize(){"function"==typeof this.options.initial&&(this.initial=await this.options.initial.call(this)),await this.reset(!0),await super.initialize()}async reset(){let{choices:e,initial:a,autofocus:p,suggest:t}=this.options;if(this.state._choices=[],this.state.choices=[],this.choices=await Promise.all(await this.toChoices(e)),this.choices.forEach(e=>e.enabled=!1),"function"!=typeof t&&0===this.selectable.length)throw new Error("At least one choice must be selectable");me(a)&&(a=Object.keys(a)),Array.isArray(a)?(null!=p&&(this.index=this.findIndex(p)),a.forEach(e=>this.enable(this.find(e))),await this.render()):(null!=p&&(a=p),"string"==typeof a&&(a=this.findIndex(a)),"number"==typeof a&&a>-1&&(this.index=Math.max(0,Math.min(a,this.choices.length)),this.enable(this.find(this.index)))),this.isDisabled(this.focused)&&await this.down()}async toChoices(e,a){this.state.loadingChoices=!0;let p=[],t=0,i=async(e,a)=>{"function"==typeof e&&(e=await e.call(this)),e instanceof Promise&&(e=await e);for(let d=0;d<e.length;d++){let s=e[d]=await this.toChoice(e[d],t++,a);p.push(s),s.choices&&await i(s.choices,s)}return p};return i(e,a).then(e=>(this.state.loadingChoices=!1,e))}async toChoice(e,a,p){if("function"==typeof e&&(e=await e.call(this,this)),e instanceof Promise&&(e=await e),"string"==typeof e&&(e={name:e}),e.normalized)return e;e.normalized=!0;let t=e.value,i=((e,a={})=>{let p=G.merge({},re,a.roles);return p[e]||p.default})(e.role,this.options);if("string"!=typeof(e=i(this,e)).disabled||e.hint||(e.hint=e.disabled,e.disabled=!0),!0===e.disabled&&null==e.hint&&(e.hint="(disabled)"),null!=e.index)return e;e.name=e.name||e.key||e.title||e.value||e.message,e.message=e.message||e.name||"",e.value=[e.value,e.name].find(this.isValue.bind(this)),e.input="",e.index=a,e.cursor=0,G.define(e,"parent",p),e.level=p?p.level+1:1,null==e.indent&&(e.indent=p?p.indent+"  ":e.indent||""),e.path=p?p.path+"."+e.name:e.name,e.enabled=!(!this.multiple||this.isDisabled(e)||!e.enabled&&!this.isSelected(e)),this.isDisabled(e)||(this.longest=Math.max(this.longest,U.unstyle(e.message).length));let d={...e};return e.reset=(a=d.input,p=d.value)=>{for(let a of Object.keys(d))e[a]=d[a];e.input=a,e.value=p},null==t&&"function"==typeof e.initial&&(e.input=await e.initial.call(this,this.state,e,a)),e}async onChoice(e,a){this.emit("choice",e,a,this),"function"==typeof e.onChoice&&await e.onChoice.call(this,this.state,e,a)}async addChoice(e,a,p){let t=await this.toChoice(e,a,p);return this.choices.push(t),this.index=this.choices.length-1,this.limit=this.choices.length,t}async newItem(e,a,p){let t={name:"New choice name?",editable:!0,newChoice:!0,...e},i=await this.addChoice(t,a,p);return i.updateChoice=()=>{delete i.newChoice,i.name=i.message=i.input,i.input="",i.cursor=0},this.render()}indent(e){return null==e.indent?e.level>1?"  ".repeat(e.level-1):"":e.indent}dispatch(e,a){if(this.multiple&&this[a.name])return this[a.name]();this.alert()}focus(e,a){return"boolean"!=typeof a&&(a=e.enabled),a&&!e.enabled&&this.selected.length>=this.maxSelected?this.alert():(this.index=e.index,e.enabled=a&&!this.isDisabled(e),e)}space(){return this.multiple?(this.toggle(this.focused),this.render()):this.alert()}a(){if(this.maxSelected<this.choices.length)return this.alert();let e=this.selectable.every(e=>e.enabled);return this.choices.forEach(a=>a.enabled=!e),this.render()}i(){return this.choices.length-this.selected.length>this.maxSelected?this.alert():(this.choices.forEach(e=>e.enabled=!e.enabled),this.render())}g(e=this.focused){return this.choices.some(e=>!!e.parent)?(this.toggle(e.parent&&!e.choices?e.parent:e),this.render()):this.a()}toggle(e,a){if(!e.enabled&&this.selected.length>=this.maxSelected)return this.alert();"boolean"!=typeof a&&(a=!e.enabled),e.enabled=a,e.choices&&e.choices.forEach(e=>this.toggle(e,a));let p=e.parent;for(;p;){let e=p.choices.filter(e=>this.isDisabled(e));p.enabled=e.every(e=>!0===e.enabled),p=p.parent}return ce(this,this.choices),this.emit("toggle",e,this),e}enable(e){return this.selected.length>=this.maxSelected?this.alert():(e.enabled=!this.isDisabled(e),e.choices&&e.choices.forEach(this.enable.bind(this)),e)}disable(e){return e.enabled=!1,e.choices&&e.choices.forEach(this.disable.bind(this)),e}number(e){this.num+=e;let a=e=>{let a=Number(e);if(a>this.choices.length-1)return this.alert();let p=this.focused,t=this.choices.find(e=>a===e.index);if(!t.enabled&&this.selected.length>=this.maxSelected)return this.alert();if(-1===this.visible.indexOf(t)){let e=ne(this.choices),a=e.indexOf(t);if(p.index>a){let p=e.slice(a,a+this.limit),t=e.filter(e=>!p.includes(e));this.choices=p.concat(t)}else{let p=a-this.limit+1;this.choices=e.slice(p).concat(e.slice(0,p))}}return this.index=this.choices.indexOf(t),this.toggle(this.focused),this.render()};return clearTimeout(this.numberTimeout),new Promise(e=>{let p=this.choices.length,t=this.num,i=(p=!1,i)=>{clearTimeout(this.numberTimeout),p&&(i=a(t)),this.num="",e(i)};return"0"===t||1===t.length&&Number(t+"0")>p?i(!0):Number(t)>p?i(!1,this.alert()):void(this.numberTimeout=setTimeout(()=>i(!0),this.delay))})}home(){return this.choices=ne(this.choices),this.index=0,this.render()}end(){let e=this.choices.length-this.limit,a=ne(this.choices);return this.choices=a.slice(e).concat(a.slice(0,e)),this.index=this.limit-1,this.render()}first(){return this.index=0,this.render()}last(){return this.index=this.visible.length-1,this.render()}prev(){return this.visible.length<=1?this.alert():this.up()}next(){return this.visible.length<=1?this.alert():this.down()}right(){return this.cursor>=this.input.length?this.alert():(this.cursor++,this.render())}left(){return this.cursor<=0?this.alert():(this.cursor--,this.render())}up(){let e=this.choices.length,a=this.visible.length,p=this.index;return!1===this.options.scroll&&0===p?this.alert():e>a&&0===p?this.scrollUp():(this.index=(p-1%e+e)%e,this.isDisabled()?this.up():this.render())}down(){let e=this.choices.length,a=this.visible.length,p=this.index;return!1===this.options.scroll&&p===a-1?this.alert():e>a&&p===a-1?this.scrollDown():(this.index=(p+1)%e,this.isDisabled()?this.down():this.render())}scrollUp(e=0){return this.choices=le(this.choices),this.index=e,this.isDisabled()?this.up():this.render()}scrollDown(e=this.visible.length-1){return this.choices=oe(this.choices),this.index=e,this.isDisabled()?this.down():this.render()}async shiftUp(){return!0===this.options.sort?(this.sorting=!0,this.swap(this.index-1),await this.up(),void(this.sorting=!1)):this.scrollUp(this.index)}async shiftDown(){return!0===this.options.sort?(this.sorting=!0,this.swap(this.index+1),await this.down(),void(this.sorting=!1)):this.scrollDown(this.index)}pageUp(){return this.visible.length<=1?this.alert():(this.limit=Math.max(this.limit-1,0),this.index=Math.min(this.limit-1,this.index),this._limit=this.limit,this.isDisabled()?this.up():this.render())}pageDown(){return this.visible.length>=this.choices.length?this.alert():(this.index=Math.max(0,this.index),this.limit=Math.min(this.limit+1,this.choices.length),this._limit=this.limit,this.isDisabled()?this.down():this.render())}swap(e){ue(this.choices,this.index,e)}isDisabled(e=this.focused){return!(!e||!["disabled","collapsed","hidden","completing","readonly"].some(a=>!0===e[a]))||e&&"heading"===e.role}isEnabled(e=this.focused){if(Array.isArray(e))return e.every(e=>this.isEnabled(e));if(e.choices){let a=e.choices.filter(e=>!this.isDisabled(e));return e.enabled&&a.every(e=>this.isEnabled(e))}return e.enabled&&!this.isDisabled(e)}isChoice(e,a){return e.name===a||e.index===Number(a)}isSelected(e){return Array.isArray(this.initial)?this.initial.some(a=>this.isChoice(e,a)):this.isChoice(e,this.initial)}map(e=[],a="value"){return[].concat(e||[]).reduce((e,p)=>(e[p]=this.find(p,a),e),{})}filter(e,a){let p=(this.options.multiple?this.state._choices:this.choices).filter("function"==typeof e?e:(a,p)=>[a.name,p].includes(e));return a?p.map(e=>e[a]):p}find(e,a){if(me(e))return a?e[a]:e;let p=this.choices.find("function"==typeof e?e:(a,p)=>[a.name,p].includes(e));return p?a?p[a]:p:void 0}findIndex(e){return this.choices.indexOf(this.find(e))}async submit(){let e=this.focused;if(!e)return this.alert();if(e.newChoice)return e.input?(e.updateChoice(),this.render()):this.alert();if(this.choices.some(e=>e.newChoice))return this.alert();let{reorder:a,sort:p}=this.options,t=!0===this.multiple,i=this.selected;return void 0===i?this.alert():(Array.isArray(i)&&!1!==a&&!0!==p&&(i=G.reorder(i)),this.value=t?i.map(e=>e.name):i.name,super.submit())}set choices(e=[]){this.state._choices=this.state._choices||[],this.state.choices=e;for(let a of e)this.state._choices.some(e=>e.name===a.name)||this.state._choices.push(a);if(!this._initial&&this.options.initial){this._initial=!0;let e=this.initial;if("string"==typeof e||"number"==typeof e){let a=this.find(e);a&&(this.initial=a.index,this.focus(a,!0))}}}get choices(){return ce(this,this.state.choices||[])}set visible(e){this.state.visible=e}get visible(){return(this.state.visible||this.choices).slice(0,this.limit)}set limit(e){this.state.limit=e}get limit(){let{state:e,options:a,choices:p}=this;return Math.min(e.limit||this._limit||a.limit||p.length,this.height)}set value(e){super.value=e}get value(){return"string"!=typeof super.value&&super.value===this.initial?this.input:super.value}set index(e){this.state.index=e}get index(){return Math.max(0,this.state?this.state.index:0)}get enabled(){return this.filter(this.isEnabled.bind(this))}get focused(){let e=this.choices[this.index];return e&&this.state.submitted&&!0!==this.multiple&&(e.enabled=!0),e}get selectable(){return this.choices.filter(e=>!this.isDisabled(e))}get selected(){return this.multiple?this.enabled:this.focused}},fe=class extends he{constructor(e){super(e),this.emptyError=this.options.emptyError||"No items were selected"}async dispatch(e,a){if(this.multiple)return this[a.name]?await this[a.name](e,a):await super.dispatch(e,a);this.alert()}separator(){if(this.options.separator)return super.separator();let e=this.styles.muted(this.symbols.ellipsis);return this.state.submitted?super.separator():e}pointer(e,a){return!this.multiple||this.options.pointer?super.pointer(e,a):""}indicator(e,a){return this.multiple?super.indicator(e,a):""}choiceMessage(e,a){let p=this.resolve(e.message,this.state,e,a);return"heading"!==e.role||G.hasColor(p)||(p=this.styles.strong(p)),this.resolve(p,this.state,e,a)}choiceSeparator(){return":"}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t=await this.pointer(e,a),i=await this.indicator(e,a)+(e.pad||""),d=await this.resolve(e.hint,this.state,e,a);d&&!G.hasColor(d)&&(d=this.styles.muted(d));let s=this.indent(e),r=await this.choiceMessage(e,a),n=()=>[this.margin[3],s+t+i,r,this.margin[1],d].filter(Boolean).join(" ");return"heading"===e.role?n():e.disabled?(G.hasColor(r)||(r=this.styles.disabled(r)),n()):(p&&(r=this.styles.em(r)),n())}async renderChoices(){if("choices"===this.state.loading)return this.styles.warning("Loading choices");if(this.state.submitted)return"";let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e);a.length||a.push(this.styles.danger("No matching choices"));let p,t=this.margin[0]+a.join("\n");return this.options.choicesHeader&&(p=await this.resolve(this.options.choicesHeader,this.state)),[p,t].filter(Boolean).join("\n")}format(){return!this.state.submitted||this.state.cancelled?"":Array.isArray(this.selected)?this.selected.map(e=>this.styles.primary(e.name)).join(", "):this.styles.primary(this.selected.name)}async render(){let{submitted:e,size:a}=this.state,p="",t=await this.header(),i=await this.prefix(),d=await this.separator(),s=await this.message();!1!==this.options.promptLine&&(p=[i,s,d,""].join(" "),this.state.prompt=p);let r=await this.format(),n=await this.error()||await this.hint(),l=await this.renderChoices(),o=await this.footer();r&&(p+=r),n&&!p.includes(n)&&(p+=" "+n),e&&!r&&!l.trim()&&this.multiple&&null!=this.emptyError&&(p+=this.styles.danger(this.emptyError)),this.clear(a),this.write([t,p,l,o].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}},ve=class extends fe{constructor(e){super(e),this.cursorShow()}moveCursor(e){this.state.cursor+=e}dispatch(e){return this.append(e)}space(e){return this.options.multiple?super.space(e):this.append(e)}append(e){let{cursor:a,input:p}=this.state;return this.input=p.slice(0,a)+e+p.slice(a),this.moveCursor(1),this.complete()}delete(){let{cursor:e,input:a}=this.state;return a?(this.input=a.slice(0,e-1)+a.slice(e),this.moveCursor(-1),this.complete()):this.alert()}deleteForward(){let{cursor:e,input:a}=this.state;return void 0===a[e]?this.alert():(this.input=`${a}`.slice(0,e)+`${a}`.slice(e+1),this.complete())}number(e){return this.append(e)}async complete(){this.completing=!0,this.choices=await this.suggest(this.input,this.state._choices),this.state.limit=void 0,this.index=Math.min(Math.max(this.visible.length-1,0),this.index),await this.render(),this.completing=!1}suggest(e=this.input,a=this.state._choices){if("function"==typeof this.options.suggest)return this.options.suggest.call(this,e,a);let p=e.toLowerCase();return a.filter(e=>e.message.toLowerCase().includes(p))}pointer(){return""}format(){if(!this.focused)return this.input;if(this.options.multiple&&this.state.submitted)return this.selected.map(e=>this.styles.primary(e.message)).join(", ");if(this.state.submitted){let e=this.value=this.input=this.focused.value;return this.styles.primary(e)}return this.input}async render(){if("pending"!==this.state.status)return super.render();let e=((e,a)=>{let p=this.input.toLowerCase();return e=>{let t=e.toLowerCase().indexOf(p),i=a(e.slice(t,t+p.length));return t>=0?e.slice(0,t)+i+e.slice(t+p.length):e}})(0,this.options.highlight?this.options.highlight.bind(this):this.styles.placeholder),a=this.choices;this.choices=a.map(a=>({...a,message:e(a.message)})),await super.render(),this.choices=a}submit(){return this.options.multiple&&(this.value=this.selected.map(e=>e.name)),super.submit()}},we=(e,a={})=>{e.cursorHide();let{input:p="",initial:t="",pos:i,showCursor:d=!0,color:s}=a,r=s||e.styles.placeholder,n=G.inverse(e.styles.primary),l=a=>n(e.styles.black(a)),o=p,m=l(" ");if(e.blink&&!0===e.blink.off&&(l=e=>e,m=""),d&&0===i&&""===t&&""===p)return l(" ");if(d&&0===i&&(p===t||""===p))return l(t[0])+r(t.slice(1));t=G.isPrimitive(t)?`${t}`:"",p=G.isPrimitive(p)?`${p}`:"";let u=t&&t.startsWith(p)&&t!==p,c=u?l(t[p.length]):m;if(i!==p.length&&!0===d&&(o=p.slice(0,i)+l(p[i])+p.slice(i+1),c=""),!1===d&&(c=""),u){let a=e.styles.unstyle(o+c);return o+c+r(t.slice(a.length))}return o+c},ge=class extends fe{constructor(e){super({...e,multiple:!0}),this.type="form",this.initial=this.options.initial,this.align=[this.options.align,"right"].find(e=>null!=e),this.emptyError="",this.values={}}async reset(e){return await super.reset(),!0===e&&(this._index=this.index),this.index=this._index,this.values={},this.choices.forEach(e=>e.reset&&e.reset()),this.render()}dispatch(e){return!!e&&this.append(e)}append(e){let a=this.focused;if(!a)return this.alert();let{cursor:p,input:t}=a;return a.value=a.input=t.slice(0,p)+e+t.slice(p),a.cursor++,this.render()}delete(){let e=this.focused;if(!e||e.cursor<=0)return this.alert();let{cursor:a,input:p}=e;return e.value=e.input=p.slice(0,a-1)+p.slice(a),e.cursor--,this.render()}deleteForward(){let e=this.focused;if(!e)return this.alert();let{cursor:a,input:p}=e;if(void 0===p[a])return this.alert();let t=`${p}`.slice(0,a)+`${p}`.slice(a+1);return e.value=e.input=t,this.render()}right(){let e=this.focused;return e?e.cursor>=e.input.length?this.alert():(e.cursor++,this.render()):this.alert()}left(){let e=this.focused;return e?e.cursor<=0?this.alert():(e.cursor--,this.render()):this.alert()}space(e,a){return this.dispatch(e,a)}number(e,a){return this.dispatch(e,a)}next(){let e=this.focused;if(!e)return this.alert();let{initial:a,input:p}=e;return a&&a.startsWith(p)&&p!==a?(e.value=e.input=a,e.cursor=e.value.length,this.render()):super.next()}prev(){let e=this.focused;return e?0===e.cursor?super.prev():(e.value=e.input="",e.cursor=0,this.render()):this.alert()}separator(){return""}format(e){return this.state.submitted?"":super.format(e)}pointer(){return""}indicator(e){return e.input?"‚¶ø":"‚äô"}async choiceSeparator(e,a){let p=await this.resolve(e.separator,this.state,e,a)||":";return p?" "+this.styles.disabled(p):""}async renderChoice(e,a){await this.onChoice(e,a);let{state:p,styles:t}=this,{cursor:i,initial:d="",name:s,hint:r,input:n=""}=e,{muted:l,submitted:o,primary:m,danger:u}=t,c=r,h=this.index===a,f=e.validate||(()=>!0),v=await this.choiceSeparator(e,a),w=e.message;"right"===this.align&&(w=w.padStart(this.longest+1," ")),"left"===this.align&&(w=w.padEnd(this.longest+1," "));let g=this.values[s]=n||d,y=n?"success":"dark";!0!==await f.call(e,g,this.state)&&(y="danger");let b=(0,t[y])(await this.indicator(e,a))+(e.pad||""),S=this.indent(e),E=()=>[S,b,w+v,n,c].filter(Boolean).join(" ");return p.submitted?(w=U.unstyle(w),n=o(n),c="",E()):(n=e.format?await e.format.call(this,n,e,a):we(this,{input:n,initial:d,pos:i,showCursor:h,color:this.styles.muted}),this.isValue(n)||(n=this.styles.muted(this.symbols.ellipsis)),e.result&&(this.values[s]=await e.result.call(this,g,e,a)),h&&(w=m(w)),e.error?n+=(n?" ":"")+u(e.error.trim()):e.hint&&(n+=(n?" ":"")+l(e.hint.trim())),E())}async submit(){return this.value=this.values,super.base.submit.call(this)}};const ye=()=>{throw new Error("expected prompt to have a custom authenticate method")},be=(e=ye)=>class extends ge{constructor(e){super(e)}async submit(){this.value=await e.call(this,this.values,this.state),super.base.submit.call(this)}static create(e){return be(e)}};var Se=be();function Ee(e,a){return e.username===this.options.username&&e.password===this.options.password}const Ne=(e=Ee)=>{const a=[{name:"username",message:"username"},{name:"password",message:"password",format(e){return this.options.showPassword?e:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(e.length))}}];class p extends(Se.create(e)){constructor(e){super({...e,choices:a})}static create(e){return Ne(e)}}return p};var _e=Ne();const{isPrimitive:Te,hasColor:De}=G;var Ae=class extends se{constructor(e){super(e),this.cursorHide()}async initialize(){let e=await this.resolve(this.initial,this.state);this.input=await this.cast(e),await super.initialize()}dispatch(e){return this.isValue(e)?(this.input=e,this.submit()):this.alert()}format(e){let{styles:a,state:p}=this;return p.submitted?a.success(e):a.primary(e)}cast(e){return this.isTrue(e)}isTrue(e){return/^[ty1]/i.test(e)}isFalse(e){return/^[fn0]/i.test(e)}isValue(e){return Te(e)&&(this.isTrue(e)||this.isFalse(e))}async hint(){if("pending"===this.state.status){let e=await this.element("hint");return De(e)?e:this.styles.muted(e)}}async render(){let{input:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=[p,await this.message(),this.styles.muted(this.default),t].filter(Boolean).join(" ");this.state.prompt=i;let d=await this.header(),s=this.value=this.cast(e),r=await this.format(s),n=await this.error()||await this.hint(),l=await this.footer();n&&!i.includes(n)&&(r+=" "+n),i+=" "+r,this.clear(a),this.write([d,i,l].filter(Boolean).join("\n")),this.restore()}set value(e){super.value=e}get value(){return this.cast(super.value)}},Ve=class extends Ae{constructor(e){super(e),this.default=this.options.default||(this.initial?"(Y/n)":"(y/N)")}};const Ce=ge.prototype;var Oe=class extends fe{constructor(e){super({...e,multiple:!0}),this.align=[this.options.align,"left"].find(e=>null!=e),this.emptyError="",this.values={}}dispatch(e,a){let p=this.focused;return p.editable||(p.parent||{}).editable||"a"!==e&&"i"!==e?Ce.dispatch.call(this,e,a):super[e]()}append(e,a){return Ce.append.call(this,e,a)}delete(e,a){return Ce.delete.call(this,e,a)}space(e){return this.focused.editable?this.append(e):super.space()}number(e){return this.focused.editable?this.append(e):super.number(e)}next(){return this.focused.editable?Ce.next.call(this):super.next()}prev(){return this.focused.editable?Ce.prev.call(this):super.prev()}async indicator(e,a){let p=e.editable?e.indicator||"":super.indicator(e,a);return await this.resolve(p,this.state,e,a)||""}indent(e){return"heading"===e.role?"":e.editable?" ":"  "}async renderChoice(e,a){return e.indent="",e.editable?Ce.renderChoice.call(this,e,a):super.renderChoice(e,a)}error(){return""}footer(){return this.state.error}async validate(){let e=!0;for(let a of this.choices){if("function"!=typeof a.validate)continue;if("heading"===a.role)continue;let p=a.parent?this.value[a.parent.name]:this.value;if(a.editable?p=a.value===a.name?a.initial||"":a.value:this.isDisabled(a)||(p=!0===a.enabled),e=await a.validate(p,this.state),!0!==e)break}return!0!==e&&(this.state.error="string"==typeof e?e:"Invalid Input"),e}submit(){if(!0===this.focused.newChoice)return super.submit();if(this.choices.some(e=>e.newChoice))return this.alert();this.value={};for(let e of this.choices){let a=e.parent?this.value[e.parent.name]:this.value;"heading"!==e.role?e.editable?a[e.name]=e.value===e.name?e.initial||"":e.value:this.isDisabled(e)||(a[e.name]=!0===e.enabled):this.value[e.name]={}}return this.base.submit.call(this)}};const{isPrimitive:Ie}=G;var xe=class extends se{constructor(e){super(e),this.initial=Ie(this.initial)?String(this.initial):"",this.initial&&this.cursorHide(),this.state.prevCursor=0,this.state.clipboard=[]}async keypress(e,a={}){let p=this.state.prevKeypress;return this.state.prevKeypress=a,!0!==this.options.multiline||"return"!==a.name||p&&"return"===p.name?super.keypress(e,a):this.append("\n",a)}moveCursor(e){this.cursor+=e}reset(){return this.input=this.value="",this.cursor=0,this.render()}dispatch(e,a){if(!e||a.ctrl||a.code)return this.alert();this.append(e)}append(e){let{cursor:a,input:p}=this.state;this.input=`${p}`.slice(0,a)+e+`${p}`.slice(a),this.moveCursor(String(e).length),this.render()}insert(e){this.append(e)}delete(){let{cursor:e,input:a}=this.state;if(e<=0)return this.alert();this.input=`${a}`.slice(0,e-1)+`${a}`.slice(e),this.moveCursor(-1),this.render()}deleteForward(){let{cursor:e,input:a}=this.state;if(void 0===a[e])return this.alert();this.input=`${a}`.slice(0,e)+`${a}`.slice(e+1),this.render()}cutForward(){let e=this.cursor;if(this.input.length<=e)return this.alert();this.state.clipboard.push(this.input.slice(e)),this.input=this.input.slice(0,e),this.render()}cutLeft(){let e=this.cursor;if(0===e)return this.alert();let a=this.input.slice(0,e),p=this.input.slice(e),t=a.split(" ");this.state.clipboard.push(t.pop()),this.input=t.join(" "),this.cursor=this.input.length,this.input+=p,this.render()}paste(){if(!this.state.clipboard.length)return this.alert();this.insert(this.state.clipboard.pop()),this.render()}toggleCursor(){this.state.prevCursor?(this.cursor=this.state.prevCursor,this.state.prevCursor=0):(this.state.prevCursor=this.cursor,this.cursor=0),this.render()}first(){this.cursor=0,this.render()}last(){this.cursor=this.input.length-1,this.render()}next(){let e=null!=this.initial?String(this.initial):"";if(!e||!e.startsWith(this.input))return this.alert();this.input=this.initial,this.cursor=this.initial.length,this.render()}prev(){if(!this.input)return this.alert();this.reset()}backward(){return this.left()}forward(){return this.right()}right(){return this.cursor>=this.input.length?this.alert():(this.moveCursor(1),this.render())}left(){return this.cursor<=0?this.alert():(this.moveCursor(-1),this.render())}isValue(e){return!!e}async format(e=this.value){let a=await this.resolve(this.initial,this.state);return this.state.submitted?this.styles.submitted(e||a):we(this,{input:e,initial:a,pos:this.cursor})}async render(){let e=this.state.size,a=await this.prefix(),p=await this.separator(),t=[a,await this.message(),p].filter(Boolean).join(" ");this.state.prompt=t;let i=await this.header(),d=await this.format(),s=await this.error()||await this.hint(),r=await this.footer();s&&!d.includes(s)&&(d+=" "+s),t+=" "+d,this.clear(e),this.write([i,t,r].filter(Boolean).join("\n")),this.restore()}};const Re=e=>(e=>e.filter((a,p)=>e.lastIndexOf(a)===p))(e).filter(Boolean);var Pe=(e,a={},p="")=>{let t,i,{past:d=[],present:s=""}=a;switch(e){case"prev":case"undo":return t=d.slice(0,d.length-1),i=d[d.length-1]||"",{past:Re([p,...t]),present:i};case"next":case"redo":return t=d.slice(1),i=d[0]||"",{past:Re([...t,p]),present:i};case"save":return{past:Re([...d,p]),present:""};case"remove":return i=Re(d.filter(e=>e!==p)),s="",i.length&&(s=i.pop()),{past:i,present:s};default:throw new Error(`Invalid action: "${e}"`)}},ke=class extends xe{constructor(e){super(e);let a=this.options.history;if(a&&a.store){let e=a.values||this.initial;this.autosave=!!a.autosave,this.store=a.store,this.data=this.store.get("values")||{past:[],present:e},this.initial=this.data.present||this.data.past[this.data.past.length-1]}}completion(e){return this.store?(this.data=Pe(e,this.data,this.input),this.data.present?(this.input=this.data.present,this.cursor=this.input.length,this.render()):this.alert()):this.alert()}altUp(){return this.completion("prev")}altDown(){return this.completion("next")}prev(){return this.save(),super.prev()}save(){this.store&&(this.data=Pe("save",this.data,this.input),this.store.set("values",this.data))}submit(){return this.store&&!0===this.autosave&&this.save(),super.submit()}},Le=class extends xe{format(){return""}},je=class extends xe{constructor(e={}){super(e),this.sep=this.options.separator||/, */,this.initial=e.initial||""}split(e=this.value){return e?String(e).split(this.sep):[]}format(){return this.list.map(this.state.submitted?this.styles.primary:e=>e).join(", ")}async submit(e){let a=this.state.error||await this.validate(this.list,this.state);return!0!==a?(this.state.error=a,super.submit()):(this.value=this.list,super.submit())}get list(){return this.split()}},Be=class extends fe{constructor(e){super({...e,multiple:!0})}},Fe=class extends xe{constructor(e={}){super({style:"number",...e}),this.min=this.isValue(e.min)?this.toNumber(e.min):-Infinity,this.max=this.isValue(e.max)?this.toNumber(e.max):Infinity,this.delay=null!=e.delay?e.delay:1e3,this.float=!1!==e.float,this.round=!0===e.round||!1===e.float,this.major=e.major||10,this.minor=e.minor||1,this.initial=null!=e.initial?e.initial:"",this.input=String(this.initial),this.cursor=this.input.length,this.cursorShow()}append(e){return!/[-+.]/.test(e)||"."===e&&this.input.includes(".")?this.alert("invalid number"):super.append(e)}number(e){return super.append(e)}next(){return this.input&&this.input!==this.initial?this.alert():this.isValue(this.initial)?(this.input=this.initial,this.cursor=String(this.initial).length,this.render()):this.alert()}up(e){let a=e||this.minor,p=this.toNumber(this.input);return p>this.max+a?this.alert():(this.input=`${p+a}`,this.render())}down(e){let a=e||this.minor,p=this.toNumber(this.input);return p<this.min-a?this.alert():(this.input=""+(p-a),this.render())}shiftDown(){return this.down(this.major)}shiftUp(){return this.up(this.major)}format(e=this.input){return"function"==typeof this.options.format?this.options.format.call(this,e):this.styles.info(e)}toNumber(e=""){return this.float?+e:Math.round(+e)}isValue(e){return/^[-+]?[0-9]+((\.)|(\.[0-9]+))?$/.test(e)}submit(){let e=[this.input,this.initial].find(e=>this.isValue(e));return this.value=this.toNumber(e||0),super.submit()}},$e=Fe,Me=class extends xe{constructor(e){super(e),this.cursorShow()}format(e=this.input){return this.keypressed?(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(e.length)):""}},Ue=class extends he{constructor(e={}){super(e),this.widths=[].concat(e.messageWidth||50),this.align=[].concat(e.align||"left"),this.linebreak=e.linebreak||!1,this.edgeLength=e.edgeLength||3,this.newline=e.newline||"\n   ";let a=e.startNumber||1;"number"==typeof this.scale&&(this.scaleKey=!1,this.scale=Array(this.scale).fill(0).map((e,p)=>({name:p+a})))}async reset(){return this.tableized=!1,await super.reset(),this.render()}tableize(){if(!0===this.tableized)return;this.tableized=!0;let e=0;for(let a of this.choices){e=Math.max(e,a.message.length),a.scaleIndex=a.initial||2,a.scale=[];for(let e=0;e<this.scale.length;e++)a.scale.push({index:e})}this.widths[0]=Math.min(this.widths[0],e+3)}async dispatch(e,a){if(this.multiple)return this[a.name]?await this[a.name](e,a):await super.dispatch(e,a);this.alert()}heading(e,a,p){return this.styles.strong(e)}separator(){return this.styles.muted(this.symbols.ellipsis)}right(){let e=this.focused;return e.scaleIndex>=this.scale.length-1?this.alert():(e.scaleIndex++,this.render())}left(){let e=this.focused;return e.scaleIndex<=0?this.alert():(e.scaleIndex--,this.render())}indent(){return""}format(){return this.state.submitted?this.choices.map(e=>this.styles.info(e.index)).join(", "):""}pointer(){return""}renderScaleKey(){return!1===this.scaleKey||this.state.submitted?"":["",...this.scale.map(e=>`   ${e.name} - ${e.message}`)].map(e=>this.styles.muted(e)).join("\n")}renderScaleHeading(e){let a=this.scale.map(e=>e.name);"function"==typeof this.options.renderScaleHeading&&(a=this.options.renderScaleHeading.call(this,e));let p=this.scaleLength-a.join("").length,t=Math.round(p/(a.length-1)),i=a.map(e=>this.styles.strong(e)).join(" ".repeat(t)),d=" ".repeat(this.widths[0]);return this.margin[3]+d+this.margin[1]+i}scaleIndicator(e,a,p){if("function"==typeof this.options.scaleIndicator)return this.options.scaleIndicator.call(this,e,a,p);let t=e.scaleIndex===a.index;return a.disabled?this.styles.hint(this.symbols.radio.disabled):t?this.styles.success(this.symbols.radio.on):this.symbols.radio.off}renderScale(e,a){return e.scale.map(p=>this.scaleIndicator(e,p,a)).join(("Hyper"===this.term?"":" ")+this.symbols.line.repeat(this.edgeLength))}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t=await this.pointer(e,a),i=await e.hint;i&&!G.hasColor(i)&&(i=this.styles.muted(i));let d=e=>this.margin[3]+e.replace(/\s+$/,"").padEnd(this.widths[0]," "),s=this.newline,r=this.indent(e),n=await this.resolve(e.message,this.state,e,a),l=await this.renderScale(e,a),o=this.margin[1]+this.margin[3];this.scaleLength=U.unstyle(l).length,this.widths[0]=Math.min(this.widths[0],this.width-this.scaleLength-o.length);let m=G.wordWrap(n,{width:this.widths[0],newline:s}).split("\n").map(e=>d(e)+this.margin[1]);return p&&(l=this.styles.info(l),m=m.map(e=>this.styles.info(e))),m[0]+=l,this.linebreak&&m.push(""),[r+t,m.join("\n")].filter(Boolean)}async renderChoices(){if(this.state.submitted)return"";this.tableize();let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e),p=await this.renderScaleHeading();return this.margin[0]+[p,...a.map(e=>e.join(" "))].join("\n")}async render(){let{submitted:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=await this.message(),d="";!1!==this.options.promptLine&&(d=[p,i,t,""].join(" "),this.state.prompt=d);let s=await this.header(),r=await this.format(),n=await this.renderScaleKey(),l=await this.error()||await this.hint(),o=await this.renderChoices(),m=await this.footer(),u=this.emptyError;r&&(d+=r),l&&!d.includes(l)&&(d+=" "+l),e&&!r&&!o.trim()&&this.multiple&&null!=u&&(d+=this.styles.danger(u)),this.clear(a),this.write([s,d,n,o,m].filter(Boolean).join("\n")),this.state.submitted||this.write(this.margin[2]),this.restore()}submit(){this.value={};for(let e of this.choices)this.value[e.name]=e.scaleIndex;return this.base.submit.call(this)}};class Ge{constructor(e){this.name=e.key,this.field=e.field||{},this.value=((e="")=>"string"==typeof e?e.replace(/^['"]|['"]$/g,""):"")(e.initial||this.field.initial||""),this.message=e.message||this.name,this.cursor=0,this.input="",this.lines=[]}}function qe(e,a,p,t){return(p,i,d,s)=>"function"==typeof d.field[e]?d.field[e].call(a,p,i,d,s):[t,p].find(e=>a.isValue(e))}var ze=class extends se{constructor(e){super(e),this.cursorHide(),this.reset(!0)}async initialize(){this.interpolate=await(async e=>{let a=e.options,p=new Set(!0===a.required?[]:a.required||[]),t={...a.values,...a.initial},{tabstops:i,items:d,keys:s}=await(async(e={},a={},p=(e=>e))=>{let t=new Set,i=e.fields||[],d=e.template,s=[],r=[],n=[],l=1;"function"==typeof d&&(d=await d());let o=-1,m=()=>d[++o],u=()=>d[o+1],c=e=>{e.line=l,s.push(e)};for(c({type:"bos",value:""});o<d.length-1;){let e=m();if(/^[^\S\n ]$/.test(e)){c({type:"text",value:e});continue}if("\n"===e){c({type:"newline",value:e}),l++;continue}if("\\"===e){e+=m(),c({type:"text",value:e});continue}if(("$"===e||"#"===e||"{"===e)&&"{"===u()){e+=m();let d,s={type:"template",open:e,inner:"",close:"",value:e};for(;d=m();){if("}"===d){"}"===u()&&(d+=m()),s.value+=d,s.close=d;break}":"===d?(s.initial="",s.key=s.inner):void 0!==s.initial&&(s.initial+=d),s.value+=d,s.inner+=d}s.template=s.open+(s.initial||s.inner)+s.close,s.key=s.key||s.inner,a.hasOwnProperty(s.key)&&(s.initial=a[s.key]),s=p(s),c(s),n.push(s.key),t.add(s.key);let l=r.find(e=>e.name===s.key);s.field=i.find(e=>e.name===s.key),l||(l=new Ge(s),r.push(l)),l.lines.push(s.line-1);continue}let d=s[s.length-1];"text"===d.type&&d.line===l?d.value+=e:c({type:"text",value:e})}return c({type:"eos",value:""}),{input:d,tabstops:s,unique:t,keys:n,items:r}})(a,t),r=qe("result",e),n=qe("format",e),l=qe("validate",e,0,!0),o=e.isValue.bind(e);return async(t={},m=!1)=>{let u=0;t.required=p,t.items=d,t.keys=s,t.output="";let c=async(e,a,p,t)=>{let i=await l(e,a,p,t);return!1===i?"Invalid field "+p.name:i};for(let p of i){let i=p.value,s=p.key;if("template"===p.type){if("template"===p.type){let l=d.find(e=>e.name===s);!0===a.required&&t.required.add(l.name);let h=[l.input,t.values[l.value],l.value,i].find(o),f=(l.field||{}).message||p.inner;if(m){let e=await c(t.values[s],t,l,u);if(e&&"string"==typeof e||!1===e){t.invalid.set(s,e);continue}t.invalid.delete(s);let a=await r(t.values[s],t,l,u);t.output+=U.unstyle(a);continue}l.placeholder=!1;let v=i;i=await n(i,t,l,u),h!==i?(t.values[s]=h,i=e.styles.typing(h),t.missing.delete(f)):(t.values[s]=void 0,h=`<${f}>`,i=e.styles.primary(h),l.placeholder=!0,t.required.has(s)&&t.missing.add(f)),t.missing.has(f)&&t.validating&&(i=e.styles.warning(h)),t.invalid.has(s)&&t.validating&&(i=e.styles.danger(h)),u===t.index&&(i=v!==i?e.styles.underline(i):e.styles.heading(U.unstyle(i))),u++}i&&(t.output+=i)}else i&&(t.output+=i)}let h=t.output.split("\n").map(e=>" "+e),f=d.length,v=0;for(let a of d)t.invalid.has(a.name)&&a.lines.forEach(e=>{" "===h[e][0]&&(h[e]=t.styles.danger(t.symbols.bullet)+h[e].slice(1))}),e.isValue(t.values[a.name])&&v++;return t.completed=(v/f*100).toFixed(0),t.output=h.join("\n"),t.output}})(this),await super.initialize()}async reset(e){this.state.keys=[],this.state.invalid=new Map,this.state.missing=new Set,this.state.completed=0,this.state.values={},!0!==e&&(await this.initialize(),await this.render())}moveCursor(e){let a=this.getItem();this.cursor+=e,a.cursor+=e}dispatch(e,a){a.code||a.ctrl||null==e||!this.getItem()?this.alert():this.append(e,a)}append(e,a){let p=this.getItem(),t=p.input.slice(0,this.cursor),i=p.input.slice(this.cursor);this.input=p.input=`${t}${e}${i}`,this.moveCursor(1),this.render()}delete(){let e=this.getItem();if(this.cursor<=0||!e.input)return this.alert();let a=e.input.slice(this.cursor),p=e.input.slice(0,this.cursor-1);this.input=e.input=`${p}${a}`,this.moveCursor(-1),this.render()}increment(e){return e>=this.state.keys.length-1?0:e+1}decrement(e){return e<=0?this.state.keys.length-1:e-1}first(){this.state.index=0,this.render()}last(){this.state.index=this.state.keys.length-1,this.render()}right(){if(this.cursor>=this.input.length)return this.alert();this.moveCursor(1),this.render()}left(){if(this.cursor<=0)return this.alert();this.moveCursor(-1),this.render()}prev(){this.state.index=this.decrement(this.state.index),this.getItem(),this.render()}next(){this.state.index=this.increment(this.state.index),this.getItem(),this.render()}up(){this.prev()}down(){this.next()}format(e){let a=this.state.completed<100?this.styles.warning:this.styles.success;return!0===this.state.submitted&&100!==this.state.completed&&(a=this.styles.danger),a(`${this.state.completed}% completed`)}async render(){let{index:e,keys:a=[],submitted:p,size:t}=this.state,i=[this.options.newline,"\n"].find(e=>null!=e),d=await this.prefix(),s=await this.separator(),r=[d,await this.message(),s].filter(Boolean).join(" ");this.state.prompt=r;let n=await this.header(),l=await this.error()||"",o=await this.hint()||"",m=p?"":await this.interpolate(this.state),u=this.state.key=a[e]||"",c=await this.format(u),h=await this.footer();c&&(r+=" "+c),o&&!c&&0===this.state.completed&&(r+=" "+o),this.clear(t);let f=[n,r,m,h,l.trim()];this.write(f.filter(Boolean).join(i)),this.restore()}getItem(e){let{items:a,keys:p,index:t}=this.state,i=a.find(e=>e.name===p[t]);return i&&null!=i.input&&(this.input=i.input,this.cursor=i.cursor),i}async submit(){"function"!=typeof this.interpolate&&await this.initialize(),await this.interpolate(this.state,!0);let{invalid:e,missing:a,output:p,values:t}=this.state;if(e.size){let a="";for(let[p,t]of e)a+=`Invalid ${p}: ${t}\n`;return this.state.error=a,super.submit()}if(a.size)return this.state.error="Required: "+[...a.keys()].join(", "),super.submit();let i=U.unstyle(p).split("\n").map(e=>e.slice(1)).join("\n");return this.value={values:t,result:i},super.submit()}};const He="(Use <shift>+<up/down> to sort)";var Ye=class extends fe{constructor(e){super({...e,reorder:!1,sort:!0,multiple:!0}),this.state.hint=[this.options.hint,He].find(this.isValue.bind(this))}indicator(){return""}async renderChoice(e,a){let p=await super.renderChoice(e,a),t=this.index===a&&this.sorting?this.styles.muted(this.symbols.identicalTo+" "):"  ";return!1===this.options.drag&&(t=""),!0===this.options.numbered?t+`${a+1} - `+p:t+p}get selected(){return this.choices}submit(){return this.value=this.choices.map(e=>e.value),super.submit()}};function We(e,a={}){if(Array.isArray(a.scale))return a.scale.map(e=>({...e}));let p=[];for(let a=1;a<e+1;a++)p.push({i:a,selected:!1});return p}var Xe=class extends he{constructor(e={}){if(super(e),this.emptyError=e.emptyError||"No items were selected",this.term=process.env.TERM_PROGRAM,!this.options.header){let e=["","4 - Strongly Agree","3 - Agree","2 - Neutral","1 - Disagree","0 - Strongly Disagree",""];e=e.map(e=>this.styles.muted(e)),this.state.header=e.join("\n   ")}}async toChoices(...e){if(this.createdScales)return!1;this.createdScales=!0;let a=await super.toChoices(...e);for(let e of a)e.scale=We(5,this.options),e.scaleIdx=2;return a}dispatch(){this.alert()}space(){let e=this.focused,a=e.scale[e.scaleIdx],p=a.selected;return e.scale.forEach(e=>e.selected=!1),a.selected=!p,this.render()}indicator(){return""}pointer(){return""}separator(){return this.styles.muted(this.symbols.ellipsis)}right(){let e=this.focused;return e.scaleIdx>=e.scale.length-1?this.alert():(e.scaleIdx++,this.render())}left(){let e=this.focused;return e.scaleIdx<=0?this.alert():(e.scaleIdx--,this.render())}indent(){return"   "}async renderChoice(e,a){await this.onChoice(e,a);let p=this.index===a,t="Hyper"===this.term,i=t?9:8,d=t?"":" ",s=this.symbols.line.repeat(i),r=" ".repeat(i+(t?0:1)),n=e=>(e?this.styles.success("‚óâ"):"‚óØ")+d,l=a+1+".",o=p?this.styles.heading:this.styles.noop,m=await this.resolve(e.message,this.state,e,a),u=this.indent(e),c=u+e.scale.map((a,p)=>n(p===e.scaleIdx)).join(s),h=u+e.scale.map((a,p)=>(a=>a===e.scaleIdx?o(a):a)(p)).join(r);return p&&(c=this.styles.cyan(c),h=this.styles.cyan(h)),[[l,m].filter(Boolean).join(" "),c,h," "].filter(Boolean).join("\n")}async renderChoices(){if(this.state.submitted)return"";let e=this.visible.map(async(e,a)=>await this.renderChoice(e,a)),a=await Promise.all(e);return a.length||a.push(this.styles.danger("No matching choices")),a.join("\n")}format(){return this.state.submitted?this.choices.map(e=>this.styles.info(e.scaleIdx)).join(", "):""}async render(){let{submitted:e,size:a}=this.state,p=await this.prefix(),t=await this.separator(),i=[p,await this.message(),t].filter(Boolean).join(" ");this.state.prompt=i;let d=await this.header(),s=await this.format(),r=await this.error()||await this.hint(),n=await this.renderChoices(),l=await this.footer();!s&&r||(i+=" "+s),r&&!i.includes(r)&&(i+=" "+r),e&&!s&&!n&&this.multiple&&"form"!==this.type&&(i+=this.styles.danger(this.emptyError)),this.clear(a),this.write([i,d,n,l].filter(Boolean).join("\n")),this.restore()}submit(){this.value={};for(let e of this.choices)this.value[e.name]=e.scaleIdx;return this.base.submit.call(this)}},Ke=ke,Je=class extends Ae{async initialize(){await super.initialize(),this.value=this.initial=!!this.options.initial,this.disabled=this.options.disabled||"no",this.enabled=this.options.enabled||"yes",await this.render()}reset(){this.value=this.initial,this.render()}delete(){this.alert()}toggle(){this.value=!this.value,this.render()}enable(){if(!0===this.value)return this.alert();this.value=!0,this.render()}disable(){if(!1===this.value)return this.alert();this.value=!1,this.render()}up(){this.toggle()}down(){this.toggle()}right(){this.toggle()}left(){this.toggle()}next(){this.toggle()}prev(){this.toggle()}dispatch(e="",a){switch(e.toLowerCase()){case" ":return this.toggle();case"1":case"y":case"t":return this.enable();case"0":case"n":case"f":return this.disable();default:return this.alert()}}format(){let e=e=>this.styles.primary.underline(e);return[this.value?this.disabled:e(this.disabled),this.value?e(this.enabled):this.enabled].join(this.styles.muted(" / "))}async render(){let{size:e}=this.state,a=await this.header(),p=await this.prefix(),t=await this.separator(),i=await this.message(),d=await this.format(),s=await this.error()||await this.hint(),r=await this.footer(),n=[p,i,t,d].join(" ");this.state.prompt=n,s&&!n.includes(s)&&(n+=" "+s),this.clear(e),this.write([a,n,r].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}},Ze=class extends fe{constructor(e){if(super(e),"number"!=typeof this.options.correctChoice||this.options.correctChoice<0)throw new Error("Please specify the index of the correct answer from the list of choices")}async toChoices(e,a){let p=await super.toChoices(e,a);if(p.length<2)throw new Error("Please give at least two choices to the user");if(this.options.correctChoice>p.length)throw new Error("Please specify the index of the correct answer from the list of choices");return p}check(e){return e.index===this.options.correctChoice}async result(e){return{selectedAnswer:e,correctAnswer:this.options.choices[this.options.correctChoice].value,correct:await this.check(this.state)}}},Qe=B(function(e,a){const p=(e,p)=>{G.defineExport(a,e,p),G.defineExport(a,e.toLowerCase(),p)};p("AutoComplete",()=>ve),p("BasicAuth",()=>_e),p("Confirm",()=>Ve),p("Editable",()=>Oe),p("Form",()=>ge),p("Input",()=>ke),p("Invisible",()=>Le),p("List",()=>je),p("MultiSelect",()=>Be),p("Numeral",()=>$e),p("Password",()=>Me),p("Scale",()=>Ue),p("Select",()=>fe),p("Snippet",()=>ze),p("Sort",()=>Ye),p("Survey",()=>Xe),p("Text",()=>Ke),p("Toggle",()=>Je),p("Quiz",()=>Ze)}),ea={ArrayPrompt:he,AuthPrompt:Se,BooleanPrompt:Ae,NumberPrompt:Fe,StringPrompt:xe};class aa extends b.default{constructor(e,a){super(),this.options=G.merge({},e),this.answers={...a}}register(e,a){if(G.isObject(e)){for(let a of Object.keys(e))this.register(a,e[a]);return this}y.default.equal(typeof a,"function","expected a function");let p=e.toLowerCase();return this.prompts[p]=a.prototype instanceof this.Prompt?a:a(this.Prompt,this),this}async prompt(e=[]){for(let a of[].concat(e))try{"function"==typeof a&&(a=await a.call(this)),await this.ask(G.merge({},this.options,a))}catch(e){return Promise.reject(e)}return this.answers}async ask(e){"function"==typeof e&&(e=await e.call(this));let a=G.merge({},this.options,e),{type:p,name:t}=e,{set:i,get:d}=G;if("function"==typeof p&&(p=await p.call(this,e,this.answers)),!p)return this.answers[t];y.default(this.prompts[p],`Prompt "${p}" is not registered`);let s=new this.prompts[p](a),r=d(this.answers,t);s.state.answers=this.answers,s.enquirer=this,t&&s.on("submit",e=>{this.emit("answer",t,e,s),i(this.answers,t,e)});let n=s.emit.bind(s);return s.emit=(...e)=>(this.emit.call(this,...e),n(...e)),this.emit("prompt",s,this),a.autofill&&null!=r?(s.value=s.input=r,"show"===a.autofill&&await s.submit()):r=s.value=await s.run(),r}use(e){return e.call(this,this),this}set Prompt(e){this._Prompt=e}get Prompt(){return this._Prompt||this.constructor.Prompt}get prompts(){return this.constructor.prompts}static set Prompt(e){this._Prompt=e}static get Prompt(){return this._Prompt||se}static get prompts(){return Qe}static get types(){return ea}static get prompt(){const e=(a,...p)=>{let t=new this(...p),i=t.emit.bind(t);return t.emit=(...a)=>(e.emit(...a),i(...a)),t.prompt(a)};return G.mixinEmitter(e,new b.default),e}}G.mixinEmitter(aa,new b.default);const pa=aa.prompts;for(let e of Object.keys(pa)){let a=e.toLowerCase(),p=a=>new pa[e](a).run();aa.prompt[a]=p,aa[a]=p,aa[e]||Reflect.defineProperty(aa,e,{get:()=>pa[e]})}const ta=e=>{G.defineExport(aa,e,()=>aa.types[e])};ta("ArrayPrompt"),ta("AuthPrompt"),ta("BooleanPrompt"),ta("NumberPrompt"),ta("StringPrompt");var ia=aa,da={"gatsby-source-contentful":{message:"Contentful",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-datocms":{message:"DatoCMS",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-plugin-netlify-cms":{message:"Netlify CMS",dependencies:["netlify-cms-app"]},"gatsby-source-sanity":{message:"Sanity",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-shopify":{message:"Shopify",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]},"gatsby-source-wordpress":{message:"WordPress",plugins:["gatsby-plugin-image","gatsby-plugin-sharp","gatsby-transformer-sharp"]}},sa={"gatsby-plugin-emotion":{message:"Emotion",dependencies:["@emotion/react","@emotion/styled"]},"gatsby-plugin-postcss":{message:"PostCSS",dependencies:["postcss"]},"gatsby-plugin-sass":{message:"Sass",dependencies:["sass"]},"gatsby-plugin-styled-components":{message:"styled-components",dependencies:["styled-components","babel-plugin-styled-components"]},"gatsby-plugin-theme-ui":{message:"Theme UI",dependencies:["theme-ui","@emotion/react","@emotion/styled","@mdx-js/react@v1"]},"gatsby-plugin-vanilla-extract":{message:"vanilla-extract",dependencies:["@vanilla-extract/webpack-plugin","@vanilla-extract/css","@vanilla-extract/babel-plugin"]}},ra={"gatsby-plugin-google-analytics":{message:"Add the Google Analytics tracking script"},"gatsby-plugin-image":{message:"Add responsive images",plugins:["gatsby-plugin-sharp","gatsby-transformer-sharp","gatsby-source-filesystem:images"],options:{"gatsby-source-filesystem:images":{name:"images",path:"./src/images/"}}},"gatsby-plugin-sitemap":{message:"Add an automatic sitemap"},"gatsby-plugin-manifest":{message:"Generate a manifest file",options:{"gatsby-plugin-manifest":{icon:"src/images/icon.png"}}},"gatsby-plugin-mdx":{message:"Add Markdown and MDX support",plugins:["gatsby-source-filesystem:pages"],dependencies:["@mdx-js/react"],options:{"gatsby-source-filesystem:pages":{name:"pages",path:"./src/pages/"}}},"gatsby-transformer-remark":{message:"Add Markdown support (without MDX)",plugins:["gatsby-source-filesystem:pages"],options:{"gatsby-source-filesystem:pages":{name:"pages",path:"./src/pages/"}}}},na=oa;function la(e,a,p){return!(!e.isSymbolicLink()&&!e.isFile())&&function(e,a){var p=void 0!==a.pathExt?a.pathExt:process.env.PATHEXT;if(!p)return!0;if(-1!==(p=p.split(";")).indexOf(""))return!0;for(var t=0;t<p.length;t++){var i=p[t].toLowerCase();if(i&&e.substr(-i.length).toLowerCase()===i)return!0}return!1}(a,p)}function oa(e,a,p){_.default.stat(e,function(t,i){p(t,!t&&la(i,e,a))})}oa.sync=function(e,a){return la(_.default.statSync(e),e,a)};var ma,ua=ca;function ca(e,a,p){_.default.stat(e,function(e,t){p(e,!e&&ha(t,a))})}function ha(e,a){return e.isFile()&&function(e,a){var p=e.mode,t=e.uid,i=e.gid,d=void 0!==a.uid?a.uid:process.getuid&&process.getuid(),s=void 0!==a.gid?a.gid:process.getgid&&process.getgid(),r=parseInt("100",8),n=parseInt("010",8);return p&parseInt("001",8)||p&n&&i===s||p&r&&t===d||p&(r|n)&&0===d}(e,a)}ca.sync=function(e,a){return ha(_.default.statSync(e),a)},ma="win32"===process.platform||j.TESTING_WINDOWS?na:ua;var fa=va;function va(e,a,p){if("function"==typeof a&&(p=a,a={}),!p){if("function"!=typeof Promise)throw new TypeError("callback not provided");return new Promise(function(p,t){va(e,a||{},function(e,a){e?t(e):p(a)})})}ma(e,a||{},function(e,t){e&&("EACCES"===e.code||a&&a.ignoreErrors)&&(e=null,t=!1),p(e,t)})}va.sync=function(e,a){try{return ma.sync(e,a||{})}catch(e){if(a&&a.ignoreErrors||"EACCES"===e.code)return!1;throw e}};const wa="win32"===process.platform||"cygwin"===process.env.OSTYPE||"msys"===process.env.OSTYPE,ga=wa?";":":",ya=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"}),ba=(e,a)=>{const p=a.colon||ga,t=e.match(/\//)||wa&&e.match(/\\/)?[""]:[...wa?[process.cwd()]:[],...(a.path||process.env.PATH||"").split(p)],i=wa?a.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",d=wa?i.split(p):[""];return wa&&-1!==e.indexOf(".")&&""!==d[0]&&d.unshift(""),{pathEnv:t,pathExt:d,pathExtExe:i}},Sa=(e,a,p)=>{"function"==typeof a&&(p=a,a={}),a||(a={});const{pathEnv:t,pathExt:i,pathExtExe:d}=ba(e,a),s=[],r=p=>new Promise((i,d)=>{if(p===t.length)return a.all&&s.length?i(s):d(ya(e));const r=t[p],l=/^".*"$/.test(r)?r.slice(1,-1):r,o=N.default.join(l,e),m=!l&&/^\.[\\\/]/.test(e)?e.slice(0,2)+o:o;i(n(m,p,0))}),n=(e,p,t)=>new Promise((l,o)=>{if(t===i.length)return l(r(p+1));const m=i[t];fa(e+m,{pathExt:d},(i,d)=>{if(!i&&d){if(!a.all)return l(e+m);s.push(e+m)}return l(n(e,p,t+1))})});return p?r(0).then(e=>p(null,e),p):r(0)};var Ea=Sa;Sa.sync=(e,a)=>{a=a||{};const{pathEnv:p,pathExt:t,pathExtExe:i}=ba(e,a),d=[];for(let s=0;s<p.length;s++){const r=p[s],n=/^".*"$/.test(r)?r.slice(1,-1):r,l=N.default.join(n,e),o=!n&&/^\.[\\\/]/.test(e)?e.slice(0,2)+l:l;for(let e=0;e<t.length;e++){const p=o+t[e];try{if(fa.sync(p,{pathExt:i})){if(!a.all)return p;d.push(p)}}catch(e){}}}if(a.all&&d.length)return d;if(a.nothrow)return null;throw ya(e)};const Na=(e={})=>{const a=e.env||process.env;return"win32"!==(e.platform||process.platform)?"PATH":Object.keys(a).reverse().find(e=>"PATH"===e.toUpperCase())||"Path"};var _a=Na;function Ta(e,a){const p=e.options.env||process.env,t=process.cwd(),i=null!=e.options.cwd,d=i&&void 0!==process.chdir&&!process.chdir.disabled;if(d)try{process.chdir(e.options.cwd)}catch(e){}let s;try{s=Ea.sync(e.command,{path:p[_a({env:p})],pathExt:a?N.default.delimiter:void 0})}catch(e){}finally{d&&process.chdir(t)}return s&&(s=N.default.resolve(i?e.options.cwd:"",s)),s}_a.default=Na;var Da=function(e){return Ta(e)||Ta(e,!0)};const Aa=/([()\][%!^"`<>&|;, *?])/g;var Va=/^#!(.*)/;const Ca="win32"===process.platform,Oa=/\.(?:com|exe)$/i,Ia=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;var xa=function(e,a,p){a&&!Array.isArray(a)&&(p=a,a=null);const t={command:e,args:a=a?a.slice(0):[],options:p=Object.assign({},p),file:void 0,original:{command:e,args:a}};return p.shell?t:function(e){if(!Ca)return e;const a=function(e){e.file=Da(e);const a=e.file&&function(e){const a=Buffer.alloc(150);let p;try{p=_.default.openSync(e,"r"),_.default.readSync(p,a,0,150,0),_.default.closeSync(p)}catch(e){}return((e="")=>{const a=e.match(Va);if(!a)return null;const[p,t]=a[0].replace(/#! ?/,"").split(" "),i=p.split("/").pop();return"env"===i?t:t?`${i} ${t}`:i})(a.toString())}(e.file);return a?(e.args.unshift(e.file),e.command=a,Da(e)):e.file}(e),p=!Oa.test(a);if(e.options.forceShell||p){const p=Ia.test(a);e.command=N.default.normalize(e.command),e.command=e.command.replace(Aa,"^$1"),e.args=e.args.map(e=>function(e,a){return e=(e=`"${e=(e=(e=`${e}`).replace(/(\\*)"/g,'$1$1\\"')).replace(/(\\*)$/,"$1$1")}"`).replace(Aa,"^$1"),a&&(e=e.replace(Aa,"^$1")),e}(e,p));const t=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${t}"`],e.command=process.env.comspec||"cmd.exe",e.options.windowsVerbatimArguments=!0}return e}(t)};const Ra="win32"===process.platform;function Pa(e,a){return Object.assign(new Error(`${a} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${a} ${e.command}`,path:e.command,spawnargs:e.args})}function ka(e,a){return Ra&&1===e&&!a.file?Pa(a.original,"spawn"):null}var La={hookChildProcess:function(e,a){if(!Ra)return;const p=e.emit;e.emit=function(t,i){if("exit"===t){const t=ka(i,a);if(t)return p.call(e,"error",t)}return p.apply(e,arguments)}},verifyENOENT:ka,verifyENOENTSync:function(e,a){return Ra&&1===e&&!a.file?Pa(a.original,"spawnSync"):null},notFoundError:Pa};function ja(e,a,p){const t=xa(e,a,p),i=E.default.spawn(t.command,t.args,t.options);return La.hookChildProcess(i,t),i}var Ba=ja,Fa=xa,$a=La;Ba.spawn=ja,Ba.sync=function(e,a,p){const t=xa(e,a,p),i=E.default.spawnSync(t.command,t.args,t.options);return i.error=i.error||La.verifyENOENTSync(i.status,t),i},Ba._parse=Fa,Ba._enoent=$a;const Ma=(e={})=>{const a=e.env||process.env;return"win32"!==(e.platform||process.platform)?"PATH":Object.keys(a).reverse().find(e=>"PATH"===e.toUpperCase())||"Path"};var Ua=Ma;Ua.default=Ma;var Ga=B(function(e){const a=e=>{let a;e={cwd:process.cwd(),path:process.env[Ua()],execPath:process.execPath,...e};let p=N.default.resolve(e.cwd);const t=[];for(;a!==p;)t.push(N.default.join(p,"node_modules/.bin")),a=p,p=N.default.resolve(p,"..");const i=N.default.resolve(e.cwd,e.execPath,"..");return t.push(i),t.concat(e.path).join(N.default.delimiter)};e.exports=a,e.exports.default=a,e.exports.env=a=>{const p={...(a={env:process.env,...a}).env},t=Ua({env:p});return a.path=p[t],p[t]=e.exports(a),p}});const qa=(e,a)=>{for(const p of Reflect.ownKeys(a))Object.defineProperty(e,p,Object.getOwnPropertyDescriptor(a,p));return e};var za=qa;za.default=qa;const Ha=new WeakMap,Ya=(e,a={})=>{if("function"!=typeof e)throw new TypeError("Expected a function");let p,t=0;const i=e.displayName||e.name||"<anonymous>",d=function(...s){if(Ha.set(d,++t),1===t)p=e.apply(this,s),e=null;else if(!0===a.throw)throw new Error(`Function \`${i}\` can only be called once`);return p};return za(d,e),Ha.set(d,t),d};var Wa=Ya;Wa.default=Ya,Wa.callCount=e=>{if(!Ha.has(e))throw new Error(`The given function \`${e.name}\` is not wrapped by the \`onetime\` package`);return Ha.get(e)};var Xa=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.SIGNALS=void 0,a.SIGNALS=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:!0},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:!0},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:!0},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}]}),Ka=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.SIGRTMAX=a.getRealtimeSignals=void 0,a.getRealtimeSignals=function(){return Array.from({length:i-t+1},p)};const p=function(e,a){return{name:`SIGRT${a+1}`,number:t+a,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}},t=34,i=64;a.SIGRTMAX=i}),Ja=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.getSignals=void 0,a.getSignals=function(){const e=(0,Ka.getRealtimeSignals)();return[...Xa.SIGNALS,...e].map(p)};const p=function({name:e,number:a,description:p,action:t,forced:i=!1,standard:d}){const{signals:{[e]:s}}=T.default.constants,r=void 0!==s;return{name:e,number:r?s:a,description:p,supported:r,action:t,forced:i,standard:d}}}),Za=B(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.signalsByNumber=a.signalsByName=void 0;const p=(0,Ja.getSignals)().reduce(function(e,{name:a,number:p,description:t,supported:i,action:d,forced:s,standard:r}){return{...e,[a]:{name:a,number:p,description:t,supported:i,action:d,forced:s,standard:r}}},{});a.signalsByName=p;const t=function(){const e=(0,Ja.getSignals)(),a=Array.from({length:Ka.SIGRTMAX+1},(a,p)=>function(e,a){const p=function(e,a){const p=a.find(({name:a})=>T.default.constants.signals[a]===e);return void 0!==p?p:a.find(a=>a.number===e)}(e,a);if(void 0===p)return{};const{name:t,description:i,supported:d,action:s,forced:r,standard:n}=p;return{[e]:{name:t,number:e,description:i,supported:d,action:s,forced:r,standard:n}}}(p,e));return Object.assign({},...a)}();a.signalsByNumber=t});const{signalsByName:Qa}=Za;var ep=({stdout:e,stderr:a,all:p,error:t,signal:i,exitCode:d,command:s,escapedCommand:r,timedOut:n,isCanceled:l,killed:o,parsed:{options:{timeout:m}}})=>{const u=void 0===(i=null===i?void 0:i)?void 0:Qa[i].description,c=(({timedOut:e,timeout:a,errorCode:p,signal:t,signalDescription:i,exitCode:d,isCanceled:s})=>e?`timed out after ${a} milliseconds`:s?"was canceled":void 0!==p?`failed with ${p}`:void 0!==t?`was killed with ${t} (${i})`:void 0!==d?`failed with exit code ${d}`:"failed")({timedOut:n,timeout:m,errorCode:t&&t.code,signal:i,signalDescription:u,exitCode:d=null===d?void 0:d,isCanceled:l}),h=`Command ${c}: ${s}`,f="[object Error]"===Object.prototype.toString.call(t),v=f?`${h}\n${t.message}`:h,w=[v,a,e].filter(Boolean).join("\n");return f?(t.originalMessage=t.message,t.message=w):t=new Error(w),t.shortMessage=v,t.command=s,t.escapedCommand=r,t.exitCode=d,t.signal=i,t.signalDescription=u,t.stdout=e,t.stderr=a,void 0!==p&&(t.all=p),"bufferedData"in t&&delete t.bufferedData,t.failed=!0,t.timedOut=Boolean(n),t.isCanceled=l,t.killed=o&&!n,t};const ap=["stdin","stdout","stderr"],pp=e=>{if(!e)return;const{stdio:a}=e;if(void 0===a)return ap.map(a=>e[a]);if((e=>ap.some(a=>void 0!==e[a]))(e))throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${ap.map(e=>`\`${e}\``).join(", ")}`);if("string"==typeof a)return a;if(!Array.isArray(a))throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof a}\``);const p=Math.max(a.length,ap.length);return Array.from({length:p},(e,p)=>a[p])};var tp=pp;tp.node=e=>{const a=pp(e);return"ipc"===a?"ipc":void 0===a||"string"==typeof a?[a,a,a,"ipc"]:a.includes("ipc")?a:[...a,"ipc"]};var ip=B(function(e){e.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"],"win32"!==process.platform&&e.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT"),"linux"===process.platform&&e.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")}),dp=B(function(e){var a=j.process;const p=function(e){return e&&"object"==typeof e&&"function"==typeof e.removeListener&&"function"==typeof e.emit&&"function"==typeof e.reallyExit&&"function"==typeof e.listeners&&"function"==typeof e.kill&&"number"==typeof e.pid&&"function"==typeof e.on};if(p(a)){var t,i=y.default,d=ip,s=/^win/i.test(a.platform),r=b.default;"function"!=typeof r&&(r=r.EventEmitter),a.__signal_exit_emitter__?t=a.__signal_exit_emitter__:((t=a.__signal_exit_emitter__=new r).count=0,t.emitted={}),t.infinite||(t.setMaxListeners(Infinity),t.infinite=!0),e.exports=function(e,a){if(!p(j.process))return function(){};i.equal(typeof e,"function","a callback must be provided for exit handler"),!1===m&&u();var d="exit";return a&&a.alwaysLast&&(d="afterexit"),t.on(d,e),function(){t.removeListener(d,e),0===t.listeners("exit").length&&0===t.listeners("afterexit").length&&n()}};var n=function(){m&&p(j.process)&&(m=!1,d.forEach(function(e){try{a.removeListener(e,o[e])}catch(e){}}),a.emit=f,a.reallyExit=c,t.count-=1)};e.exports.unload=n;var l=function(e,a,p){t.emitted[e]||(t.emitted[e]=!0,t.emit(e,a,p))},o={};d.forEach(function(e){o[e]=function(){p(j.process)&&a.listeners(e).length===t.count&&(n(),l("exit",null,e),l("afterexit",null,e),s&&"SIGHUP"===e&&(e="SIGINT"),a.kill(a.pid,e))}}),e.exports.signals=function(){return d};var m=!1,u=function(){!m&&p(j.process)&&(m=!0,t.count+=1,d=d.filter(function(e){try{return a.on(e,o[e]),!0}catch(e){return!1}}),a.emit=v,a.reallyExit=h)};e.exports.load=u;var c=a.reallyExit,h=function(e){p(j.process)&&(a.exitCode=e||0,l("exit",a.exitCode,null),l("afterexit",a.exitCode,null),c.call(a,a.exitCode))},f=a.emit,v=function(e,t){if("exit"===e&&p(j.process)){void 0!==t&&(a.exitCode=t);var i=f.apply(this,arguments);return l("exit",a.exitCode,null),l("afterexit",a.exitCode,null),i}return f.apply(this,arguments)}}else e.exports=function(){return function(){}}}),sp={spawnedKill:(e,a="SIGTERM",p={})=>{const t=e(a);return((e,a,p,t)=>{if(!((e,{forceKillAfterTimeout:a},p)=>(e=>e===T.default.constants.signals.SIGTERM||"string"==typeof e&&"SIGTERM"===e.toUpperCase())(e)&&!1!==a&&p)(a,p,t))return;const i=(({forceKillAfterTimeout:e=!0})=>{if(!0===e)return 5e3;if(!Number.isFinite(e)||e<0)throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`);return e})(p),d=setTimeout(()=>{e("SIGKILL")},i);d.unref&&d.unref()})(e,a,p,t),t},spawnedCancel:(e,a)=>{e.kill()&&(a.isCanceled=!0)},setupTimeout:(e,{timeout:a,killSignal:p="SIGTERM"},t)=>{if(0===a||void 0===a)return t;let i;const d=new Promise((t,d)=>{i=setTimeout(()=>{((e,a,p)=>{e.kill(a),p(Object.assign(new Error("Timed out"),{timedOut:!0,signal:a}))})(e,p,d)},a)}),s=t.finally(()=>{clearTimeout(i)});return Promise.race([d,s])},validateTimeout:({timeout:e})=>{if(void 0!==e&&(!Number.isFinite(e)||e<0))throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`)},setExitHandler:async(e,{cleanup:a,detached:p},t)=>{if(!a||p)return t;const i=dp(()=>{e.kill()});return t.finally(()=>{i()})}};const rp=e=>null!==e&&"object"==typeof e&&"function"==typeof e.pipe;rp.writable=e=>rp(e)&&!1!==e.writable&&"function"==typeof e._write&&"object"==typeof e._writableState,rp.readable=e=>rp(e)&&!1!==e.readable&&"function"==typeof e._read&&"object"==typeof e._readableState,rp.duplex=e=>rp.writable(e)&&rp.readable(e),rp.transform=e=>rp.duplex(e)&&"function"==typeof e._transform&&"object"==typeof e._transformState;var np=rp;const{PassThrough:lp}=A.default,{constants:op}=D.default,{promisify:mp}=V.default,up=mp(A.default.pipeline);class cp extends Error{constructor(){super("maxBuffer exceeded"),this.name="MaxBufferError"}}async function hp(e,a){if(!e)throw new Error("Expected a stream");a={maxBuffer:Infinity,...a};const{maxBuffer:p}=a,t=(e=>{e={...e};const{array:a}=e;let{encoding:p}=e;const t="buffer"===p;let i=!1;a?i=!(p||t):p=p||"utf8",t&&(p=null);const d=new lp({objectMode:i});p&&d.setEncoding(p);let s=0;const r=[];return d.on("data",e=>{r.push(e),i?s=r.length:s+=e.length}),d.getBufferedValue=()=>a?r:t?Buffer.concat(r,s):r.join(""),d.getBufferedLength=()=>s,d})(a);return await new Promise((a,i)=>{const d=e=>{e&&t.getBufferedLength()<=op.MAX_LENGTH&&(e.bufferedData=t.getBufferedValue()),i(e)};(async()=>{try{await up(e,t),a()}catch(e){d(e)}})(),t.on("data",()=>{t.getBufferedLength()>p&&d(new cp)})}),t.getBufferedValue()}var fp=hp,vp=cp;fp.buffer=(e,a)=>hp(e,{...a,encoding:"buffer"}),fp.array=(e,a)=>hp(e,{...a,array:!0}),fp.MaxBufferError=vp;const{PassThrough:wp}=A.default,gp=async(e,a)=>{if(e){e.destroy();try{return await a}catch(e){return e.bufferedData}}},yp=(e,{encoding:a,buffer:p,maxBuffer:t})=>{if(e&&p)return a?fp(e,{encoding:a,maxBuffer:t}):fp.buffer(e,{maxBuffer:t})};var bp={handleInput:(e,a)=>{void 0!==a&&void 0!==e.stdin&&(np(a)?a.pipe(e.stdin):e.stdin.end(a))},makeAllStream:(e,{all:a})=>{if(!a||!e.stdout&&!e.stderr)return;const p=function(){var e=[],a=new wp({objectMode:!0});return a.setMaxListeners(0),a.add=p,a.isEmpty=t,a.on("unpipe",i),Array.prototype.slice.call(arguments).forEach(p),a;function p(t){return Array.isArray(t)?(t.forEach(p),this):(e.push(t),t.once("end",i.bind(null,t)),t.once("error",a.emit.bind(a,"error")),t.pipe(a,{end:!1}),this)}function t(){return 0==e.length}function i(p){!(e=e.filter(function(e){return e!==p})).length&&a.readable&&a.end()}}();return e.stdout&&p.add(e.stdout),e.stderr&&p.add(e.stderr),p},getSpawnedResult:async({stdout:e,stderr:a,all:p},{encoding:t,buffer:i,maxBuffer:d},s)=>{const r=yp(e,{encoding:t,buffer:i,maxBuffer:d}),n=yp(a,{encoding:t,buffer:i,maxBuffer:d}),l=yp(p,{encoding:t,buffer:i,maxBuffer:2*d});try{return await Promise.all([s,r,n,l])}catch(t){return Promise.all([{error:t,signal:t.signal,timedOut:t.timedOut},gp(e,r),gp(a,n),gp(p,l)])}},validateInputSync:({input:e})=>{if(np(e))throw new TypeError("The `input` option cannot be a stream in sync mode")}};const Sp=(async()=>{})().constructor.prototype,Ep=["then","catch","finally"].map(e=>[e,Reflect.getOwnPropertyDescriptor(Sp,e)]);var Np={mergePromise:(e,a)=>{for(const[p,t]of Ep){const i="function"==typeof a?(...e)=>Reflect.apply(t.value,a(),e):t.value.bind(a);Reflect.defineProperty(e,p,{...t,value:i})}return e},getSpawnedPromise:e=>new Promise((a,p)=>{e.on("exit",(e,p)=>{a({exitCode:e,signal:p})}),e.on("error",e=>{p(e)}),e.stdin&&e.stdin.on("error",e=>{p(e)})})};const _p=(e,a=[])=>Array.isArray(a)?[e,...a]:[e],Tp=/^[\w.-]+$/,Dp=/"/g,Ap=/ +/g;var Vp={joinCommand:(e,a)=>_p(e,a).join(" "),getEscapedCommand:(e,a)=>_p(e,a).map(e=>(e=>"string"!=typeof e||Tp.test(e)?e:`"${e.replace(Dp,'\\"')}"`)(e)).join(" "),parseCommand:e=>{const a=[];for(const p of e.trim().split(Ap)){const e=a[a.length-1];e&&e.endsWith("\\")?a[a.length-1]=`${e.slice(0,-1)} ${p}`:a.push(p)}return a}};const{spawnedKill:Cp,spawnedCancel:Op,setupTimeout:Ip,validateTimeout:xp,setExitHandler:Rp}=sp,{handleInput:Pp,getSpawnedResult:kp,makeAllStream:Lp,validateInputSync:jp}=bp,{mergePromise:Bp,getSpawnedPromise:Fp}=Np,{joinCommand:$p,parseCommand:Mp,getEscapedCommand:Up}=Vp,Gp=(e,a,p={})=>{const t=Ba._parse(e,a,p);return e=t.command,a=t.args,(p={maxBuffer:1e8,buffer:!0,stripFinalNewline:!0,extendEnv:!0,preferLocal:!1,localDir:(p=t.options).cwd||process.cwd(),execPath:process.execPath,encoding:"utf8",reject:!0,cleanup:!0,all:!1,windowsHide:!0,...p}).env=(({env:e,extendEnv:a,preferLocal:p,localDir:t,execPath:i})=>{const d=a?{...process.env,...e}:e;return p?Ga.env({env:d,cwd:t,execPath:i}):d})(p),p.stdio=tp(p),"win32"===process.platform&&"cmd"===N.default.basename(e,".exe")&&a.unshift("/q"),{file:e,args:a,options:p,parsed:t}},qp=(e,a,p)=>"string"==typeof a||Buffer.isBuffer(a)?e.stripFinalNewline?(e=>{const a="string"==typeof e?"\n":"\n".charCodeAt(),p="string"==typeof e?"\r":"\r".charCodeAt();return e[e.length-1]===a&&(e=e.slice(0,e.length-1)),e[e.length-1]===p&&(e=e.slice(0,e.length-1)),e})(a):a:void 0===p?void 0:"",zp=(e,a,p)=>{const t=Gp(e,a,p),i=$p(e,a),d=Up(e,a);let s;xp(t.options);try{s=E.default.spawn(t.file,t.args,t.options)}catch(e){const a=new E.default.ChildProcess,p=Promise.reject(ep({error:e,stdout:"",stderr:"",all:"",command:i,escapedCommand:d,parsed:t,timedOut:!1,isCanceled:!1,killed:!1}));return Bp(a,p)}const r=Fp(s),n=Ip(s,t.options,r),l=Rp(s,t.options,n),o={isCanceled:!1};s.kill=Cp.bind(null,s.kill.bind(s)),s.cancel=Op.bind(null,s,o);const m=Wa(async()=>{const[{error:e,exitCode:a,signal:p,timedOut:r},n,m,u]=await kp(s,t.options,l),c=qp(t.options,n),h=qp(t.options,m),f=qp(t.options,u);if(e||0!==a||null!==p){const n=ep({error:e,exitCode:a,signal:p,stdout:c,stderr:h,all:f,command:i,escapedCommand:d,parsed:t,timedOut:r,isCanceled:o.isCanceled,killed:s.killed});if(!t.options.reject)return n;throw n}return{command:i,escapedCommand:d,exitCode:0,stdout:c,stderr:h,all:f,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}});return Pp(s,t.options.input),s.all=Lp(s,t.options),Bp(s,m)};var Hp=zp;Hp.sync=(e,a,p)=>{const t=Gp(e,a,p),i=$p(e,a),d=Up(e,a);let s;jp(t.options);try{s=E.default.spawnSync(t.file,t.args,t.options)}catch(e){throw ep({error:e,stdout:"",stderr:"",all:"",command:i,escapedCommand:d,parsed:t,timedOut:!1,isCanceled:!1,killed:!1})}const r=qp(t.options,s.stdout,s.error),n=qp(t.options,s.stderr,s.error);if(s.error||0!==s.status||null!==s.signal){const e=ep({stdout:r,stderr:n,error:s.error,signal:s.signal,exitCode:s.status,command:i,escapedCommand:d,parsed:t,timedOut:s.error&&"ETIMEDOUT"===s.error.code,isCanceled:!1,killed:null!==s.signal});if(!t.options.reject)return e;throw e}return{command:i,escapedCommand:d,exitCode:0,stdout:r,stderr:n,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}},Hp.command=(e,a)=>{const[p,...t]=Mp(e);return zp(p,t,a)},Hp.commandSync=(e,a)=>{const[p,...t]=Mp(e);return zp.sync(p,t,a)},Hp.node=(e,a,p={})=>{a&&!Array.isArray(a)&&"object"==typeof a&&(p=a,a=[]);const t=tp.node(p),i=process.execArgv.filter(e=>!e.startsWith("--inspect")),{nodePath:d=process.execPath,nodeOptions:s=i}=p;return zp(d,[...s,e,...Array.isArray(a)?a:[]],{...p,stdin:void 0,stdout:void 0,stderr:void 0,stdio:t,shell:!1})};var Yp=function(e){return Object.defineProperty(function(...a){if("function"!=typeof a[a.length-1])return new Promise((p,t)=>{e.call(this,...a,(e,a)=>null!=e?t(e):p(a))});e.apply(this,a)},"name",{value:e.name})},Wp=function(e){return Object.defineProperty(function(...a){const p=a[a.length-1];if("function"!=typeof p)return e.apply(this,a);e.apply(this,a.slice(0,-1)).then(e=>p(null,e),p)},"name",{value:e.name})},Xp=process.cwd,Kp=null,Jp=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return Kp||(Kp=Xp.call(process)),Kp};try{process.cwd()}catch(e){}if("function"==typeof process.chdir){var Zp=process.chdir;process.chdir=function(e){Kp=null,Zp.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,Zp)}var Qp=A.default.Stream,et=Object.getPrototypeOf||function(e){return e.__proto__},at=B(function(e){var a,p;function t(e,p){Object.defineProperty(e,a,{get:function(){return p}})}"function"==typeof Symbol&&"function"==typeof Symbol.for?(a=Symbol.for("graceful-fs.queue"),p=Symbol.for("graceful-fs.previous")):(a="___graceful-fs.queue",p="___graceful-fs.previous");var i,d=function(){};function s(e){(function(e){function a(a){return a?function(p,t,i){return a.call(e,p,t,function(e){r(e)&&(e=null),i&&i.apply(this,arguments)})}:a}function p(a){return a?function(p,t){try{return a.call(e,p,t)}catch(e){if(!r(e))throw e}}:a}function t(a){return a?function(p,t,i,d){return a.call(e,p,t,i,function(e){r(e)&&(e=null),d&&d.apply(this,arguments)})}:a}function i(a){return a?function(p,t,i){try{return a.call(e,p,t,i)}catch(e){if(!r(e))throw e}}:a}function d(a){return a?function(p,t,i){function d(e,a){a&&(a.uid<0&&(a.uid+=4294967296),a.gid<0&&(a.gid+=4294967296)),i&&i.apply(this,arguments)}return"function"==typeof t&&(i=t,t=null),t?a.call(e,p,t,d):a.call(e,p,d)}:a}function s(a){return a?function(p,t){var i=t?a.call(e,p,t):a.call(e,p);return i&&(i.uid<0&&(i.uid+=4294967296),i.gid<0&&(i.gid+=4294967296)),i}:a}function r(e){return!e||"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}var n;C.default.hasOwnProperty("O_SYMLINK")&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)&&function(e){e.lchmod=function(a,p,t){e.open(a,C.default.O_WRONLY|C.default.O_SYMLINK,p,function(a,i){a?t&&t(a):e.fchmod(i,p,function(a){e.close(i,function(e){t&&t(a||e)})})})},e.lchmodSync=function(a,p){var t,i=e.openSync(a,C.default.O_WRONLY|C.default.O_SYMLINK,p),d=!0;try{t=e.fchmodSync(i,p),d=!1}finally{if(d)try{e.closeSync(i)}catch(e){}else e.closeSync(i)}return t}}(e),e.lutimes||function(e){C.default.hasOwnProperty("O_SYMLINK")&&e.futimes?(e.lutimes=function(a,p,t,i){e.open(a,C.default.O_SYMLINK,function(a,d){a?i&&i(a):e.futimes(d,p,t,function(a){e.close(d,function(e){i&&i(a||e)})})})},e.lutimesSync=function(a,p,t){var i,d=e.openSync(a,C.default.O_SYMLINK),s=!0;try{i=e.futimesSync(d,p,t),s=!1}finally{if(s)try{e.closeSync(d)}catch(e){}else e.closeSync(d)}return i}):e.futimes&&(e.lutimes=function(e,a,p,t){t&&process.nextTick(t)},e.lutimesSync=function(){})}(e),e.chown=t(e.chown),e.fchown=t(e.fchown),e.lchown=t(e.lchown),e.chmod=a(e.chmod),e.fchmod=a(e.fchmod),e.lchmod=a(e.lchmod),e.chownSync=i(e.chownSync),e.fchownSync=i(e.fchownSync),e.lchownSync=i(e.lchownSync),e.chmodSync=p(e.chmodSync),e.fchmodSync=p(e.fchmodSync),e.lchmodSync=p(e.lchmodSync),e.stat=d(e.stat),e.fstat=d(e.fstat),e.lstat=d(e.lstat),e.statSync=s(e.statSync),e.fstatSync=s(e.fstatSync),e.lstatSync=s(e.lstatSync),e.chmod&&!e.lchmod&&(e.lchmod=function(e,a,p){p&&process.nextTick(p)},e.lchmodSync=function(){}),e.chown&&!e.lchown&&(e.lchown=function(e,a,p,t){t&&process.nextTick(t)},e.lchownSync=function(){}),"win32"===Jp&&(e.rename="function"!=typeof e.rename?e.rename:function(a){function p(p,t,i){var d=Date.now(),s=0;a(p,t,function r(n){if(n&&("EACCES"===n.code||"EPERM"===n.code)&&Date.now()-d<6e4)return setTimeout(function(){e.stat(t,function(e,d){e&&"ENOENT"===e.code?a(p,t,r):i(n)})},s),void(s<100&&(s+=10));i&&i(n)})}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.rename)),e.read="function"!=typeof e.read?e.read:function(a){function p(p,t,i,d,s,r){var n;if(r&&"function"==typeof r){var l=0;n=function(o,m,u){if(o&&"EAGAIN"===o.code&&l<10)return l++,a.call(e,p,t,i,d,s,n);r.apply(this,arguments)}}return a.call(e,p,t,i,d,s,n)}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.read),e.readSync="function"!=typeof e.readSync?e.readSync:(n=e.readSync,function(a,p,t,i,d){for(var s=0;;)try{return n.call(e,a,p,t,i,d)}catch(e){if("EAGAIN"===e.code&&s<10){s++;continue}throw e}})})(e),e.gracefulify=s,e.createReadStream=function(a,p){return new e.ReadStream(a,p)},e.createWriteStream=function(a,p){return new e.WriteStream(a,p)};var a=e.readFile;e.readFile=function(e,p,t){return"function"==typeof p&&(t=p,p=null),function e(p,t,i,d){return a(p,t,function(a){!a||"EMFILE"!==a.code&&"ENFILE"!==a.code?"function"==typeof i&&i.apply(this,arguments):r([e,[p,t,i],a,d||Date.now(),Date.now()])})}(e,p,t)};var p=e.writeFile;e.writeFile=function(e,a,t,i){return"function"==typeof t&&(i=t,t=null),function e(a,t,i,d,s){return p(a,t,i,function(p){!p||"EMFILE"!==p.code&&"ENFILE"!==p.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,t,i,d],p,s||Date.now(),Date.now()])})}(e,a,t,i)};var t=e.appendFile;t&&(e.appendFile=function(e,a,p,i){return"function"==typeof p&&(i=p,p=null),function e(a,p,i,d,s){return t(a,p,i,function(t){!t||"EMFILE"!==t.code&&"ENFILE"!==t.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,p,i,d],t,s||Date.now(),Date.now()])})}(e,a,p,i)});var i=e.copyFile;i&&(e.copyFile=function(e,a,p,t){return"function"==typeof p&&(t=p,p=0),function e(a,p,t,d,s){return i(a,p,t,function(i){!i||"EMFILE"!==i.code&&"ENFILE"!==i.code?"function"==typeof d&&d.apply(this,arguments):r([e,[a,p,t,d],i,s||Date.now(),Date.now()])})}(e,a,p,t)});var d=e.readdir;e.readdir=function(e,a,p){"function"==typeof a&&(p=a,a=null);var t=n.test(process.version)?function(e,a,p,t){return d(e,i(e,a,p,t))}:function(e,a,p,t){return d(e,a,i(e,a,p,t))};return t(e,a,p);function i(e,a,p,i){return function(d,s){!d||"EMFILE"!==d.code&&"ENFILE"!==d.code?(s&&s.sort&&s.sort(),"function"==typeof p&&p.call(this,d,s)):r([t,[e,a,p],d,i||Date.now(),Date.now()])}}};var n=/^v[0-5]\./;if("v0.8"===process.version.substr(0,4)){var l=function(e){return{ReadStream:function a(p,t){if(!(this instanceof a))return new a(p,t);Qp.call(this);var i=this;this.path=p,this.fd=null,this.readable=!0,this.paused=!1,this.flags="r",this.mode=438,this.bufferSize=65536,t=t||{};for(var d=Object.keys(t),s=0,r=d.length;s<r;s++){var n=d[s];this[n]=t[n]}if(this.encoding&&this.setEncoding(this.encoding),void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(void 0===this.end)this.end=Infinity;else if("number"!=typeof this.end)throw TypeError("end must be a Number");if(this.start>this.end)throw new Error("start must be <= end");this.pos=this.start}null===this.fd?e.open(this.path,this.flags,this.mode,function(e,a){if(e)return i.emit("error",e),void(i.readable=!1);i.fd=a,i.emit("open",a),i._read()}):process.nextTick(function(){i._read()})},WriteStream:function a(p,t){if(!(this instanceof a))return new a(p,t);Qp.call(this),this.path=p,this.fd=null,this.writable=!0,this.flags="w",this.encoding="binary",this.mode=438,this.bytesWritten=0,t=t||{};for(var i=Object.keys(t),d=0,s=i.length;d<s;d++){var r=i[d];this[r]=t[r]}if(void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(this.start<0)throw new Error("start must be >= zero");this.pos=this.start}this.busy=!1,this._queue=[],null===this.fd&&(this._open=e.open,this._queue.push([this._open,this.path,this.flags,this.mode,void 0]),this.flush())}}}(e);h=l.ReadStream,f=l.WriteStream}var o=e.ReadStream;o&&(h.prototype=Object.create(o.prototype),h.prototype.open=function(){var e=this;w(e.path,e.flags,e.mode,function(a,p){a?(e.autoClose&&e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p),e.read())})});var m=e.WriteStream;m&&(f.prototype=Object.create(m.prototype),f.prototype.open=function(){var e=this;w(e.path,e.flags,e.mode,function(a,p){a?(e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p))})}),Object.defineProperty(e,"ReadStream",{get:function(){return h},set:function(e){h=e},enumerable:!0,configurable:!0}),Object.defineProperty(e,"WriteStream",{get:function(){return f},set:function(e){f=e},enumerable:!0,configurable:!0});var u=h;Object.defineProperty(e,"FileReadStream",{get:function(){return u},set:function(e){u=e},enumerable:!0,configurable:!0});var c=f;function h(e,a){return this instanceof h?(o.apply(this,arguments),this):h.apply(Object.create(h.prototype),arguments)}function f(e,a){return this instanceof f?(m.apply(this,arguments),this):f.apply(Object.create(f.prototype),arguments)}Object.defineProperty(e,"FileWriteStream",{get:function(){return c},set:function(e){c=e},enumerable:!0,configurable:!0});var v=e.open;function w(e,a,p,t){return"function"==typeof p&&(t=p,p=null),function e(a,p,t,i,d){return v(a,p,t,function(s,n){!s||"EMFILE"!==s.code&&"ENFILE"!==s.code?"function"==typeof i&&i.apply(this,arguments):r([e,[a,p,t,i],s,d||Date.now(),Date.now()])})}(e,a,p,t)}return e.open=w,e}function r(e){d("ENQUEUE",e[0].name,e[1]),_.default[a].push(e),l()}function n(){for(var e=Date.now(),p=0;p<_.default[a].length;++p)_.default[a][p].length>2&&(_.default[a][p][3]=e,_.default[a][p][4]=e);l()}function l(){if(clearTimeout(i),i=void 0,0!==_.default[a].length){var e=_.default[a].shift(),p=e[0],t=e[1],s=e[2],r=e[3],n=e[4];if(void 0===r)d("RETRY",p.name,t),p.apply(null,t);else if(Date.now()-r>=6e4){d("TIMEOUT",p.name,t);var o=t.pop();"function"==typeof o&&o.call(null,s)}else{var m=Date.now()-n,u=Math.max(n-r,1);m>=Math.min(1.2*u,100)?(d("RETRY",p.name,t),p.apply(null,t.concat([r]))):_.default[a].push(e)}void 0===i&&(i=setTimeout(l,0))}}V.default.debuglog?d=V.default.debuglog("gfs4"):/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&(d=function(){var e=V.default.format.apply(V.default,arguments);e="GFS4: "+e.split(/\n/).join("\nGFS4: "),console.error(e)}),_.default[a]||(t(_.default,j[a]||[]),_.default.close=function(e){function a(a,p){return e.call(_.default,a,function(e){e||n(),"function"==typeof p&&p.apply(this,arguments)})}return Object.defineProperty(a,p,{value:e}),a}(_.default.close),_.default.closeSync=function(e){function a(a){e.apply(_.default,arguments),n()}return Object.defineProperty(a,p,{value:e}),a}(_.default.closeSync),/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&process.on("exit",function(){d(_.default[a]),y.default.equal(_.default[a].length,0)})),j[a]||t(j,_.default[a]),e.exports=s(function(e){if(null===e||"object"!=typeof e)return e;if(e instanceof Object)var a={__proto__:et(e)};else a=Object.create(null);return Object.getOwnPropertyNames(e).forEach(function(p){Object.defineProperty(a,p,Object.getOwnPropertyDescriptor(e,p))}),a}(_.default)),process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!_.default.__patched&&(e.exports=s(_.default),_.default.__patched=!0)}),pt={checkPath:function(e){if("win32"===process.platform&&/[<>:"|?*]/.test(e.replace(N.default.parse(e).root,""))){const a=new Error(`Path contains invalid characters: ${e}`);throw a.code="EINVAL",a}}},tt=B(function(e,a){const p=Yp,t=["access","appendFile","chmod","chown","close","copyFile","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","opendir","readdir","readFile","readlink","realpath","rename","rm","rmdir","stat","symlink","truncate","unlink","utimes","writeFile"].filter(e=>"function"==typeof at[e]);Object.assign(a,at),t.forEach(e=>{a[e]=p(at[e])}),a.exists=function(e,a){return"function"==typeof a?at.exists(e,a):new Promise(a=>at.exists(e,a))},a.read=function(e,a,p,t,i,d){return"function"==typeof d?at.read(e,a,p,t,i,d):new Promise((d,s)=>{at.read(e,a,p,t,i,(e,a,p)=>{if(e)return s(e);d({bytesRead:a,buffer:p})})})},a.write=function(e,a,...p){return"function"==typeof p[p.length-1]?at.write(e,a,...p):new Promise((t,i)=>{at.write(e,a,...p,(e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffer:p})})})},"function"==typeof at.writev&&(a.writev=function(e,a,...p){return"function"==typeof p[p.length-1]?at.writev(e,a,...p):new Promise((t,i)=>{at.writev(e,a,...p,(e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffers:p})})})}),"function"==typeof at.realpath.native?a.realpath.native=p(at.realpath.native):process.emitWarning("fs.realpath.native is not a function. Is fs being monkey-patched?","Warning","fs-extra-WARN0003")}),it=pt;const{checkPath:dt}=it,st=e=>"number"==typeof e?e:{mode:511,...e}.mode;var rt={makeDir:async(e,a)=>(dt(e),tt.mkdir(e,{mode:st(a),recursive:!0})),makeDirSync:(e,a)=>(dt(e),tt.mkdirSync(e,{mode:st(a),recursive:!0}))};const nt=Wp,{makeDir:lt,makeDirSync:ot}=rt,mt=nt(lt);var ut={mkdirs:mt,mkdirsSync:ot,mkdirp:mt,mkdirpSync:ot,ensureDir:mt,ensureDirSync:ot},ct={pathExists:Wp(function(e){return tt.access(e).then(()=>!0).catch(()=>!1)}),pathExistsSync:tt.existsSync};function ht(e,a,p){const t=p.dereference?e=>tt.stat(e,{bigint:!0}):e=>tt.lstat(e,{bigint:!0});return Promise.all([t(e),t(a).catch(e=>{if("ENOENT"===e.code)return null;throw e})]).then(([e,a])=>({srcStat:e,destStat:a}))}function ft(e,a){return a.ino&&a.dev&&a.ino===e.ino&&a.dev===e.dev}function vt(e,a){const p=N.default.resolve(e).split(N.default.sep).filter(e=>e),t=N.default.resolve(a).split(N.default.sep).filter(e=>e);return p.reduce((e,a,p)=>e&&t[p]===a,!0)}function wt(e,a,p){return`Cannot ${p} '${e}' to a subdirectory of itself, '${a}'.`}var gt={checkPaths:function(e,a,p,t,i){V.default.callbackify(ht)(e,a,t,(t,d)=>{if(t)return i(t);const{srcStat:s,destStat:r}=d;if(r){if(ft(s,r)){const t=N.default.basename(e),d=N.default.basename(a);return"move"===p&&t!==d&&t.toLowerCase()===d.toLowerCase()?i(null,{srcStat:s,destStat:r,isChangingCase:!0}):i(new Error("Source and destination must not be the same."))}if(s.isDirectory()&&!r.isDirectory())return i(new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`));if(!s.isDirectory()&&r.isDirectory())return i(new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`))}return s.isDirectory()&&vt(e,a)?i(new Error(wt(e,a,p))):i(null,{srcStat:s,destStat:r})})},checkPathsSync:function(e,a,p,t){const{srcStat:i,destStat:d}=function(e,a,p){let t;const i=p.dereference?e=>tt.statSync(e,{bigint:!0}):e=>tt.lstatSync(e,{bigint:!0}),d=i(e);try{t=i(a)}catch(e){if("ENOENT"===e.code)return{srcStat:d,destStat:null};throw e}return{srcStat:d,destStat:t}}(e,a,t);if(d){if(ft(i,d)){const t=N.default.basename(e),s=N.default.basename(a);if("move"===p&&t!==s&&t.toLowerCase()===s.toLowerCase())return{srcStat:i,destStat:d,isChangingCase:!0};throw new Error("Source and destination must not be the same.")}if(i.isDirectory()&&!d.isDirectory())throw new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`);if(!i.isDirectory()&&d.isDirectory())throw new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`)}if(i.isDirectory()&&vt(e,a))throw new Error(wt(e,a,p));return{srcStat:i,destStat:d}},checkParentPaths:function e(a,p,t,i,d){const s=N.default.resolve(N.default.dirname(a)),r=N.default.resolve(N.default.dirname(t));if(r===s||r===N.default.parse(r).root)return d();tt.stat(r,{bigint:!0},(s,n)=>s?"ENOENT"===s.code?d():d(s):ft(p,n)?d(new Error(wt(a,t,i))):e(a,p,r,i,d))},checkParentPathsSync:function e(a,p,t,i){const d=N.default.resolve(N.default.dirname(a)),s=N.default.resolve(N.default.dirname(t));if(s===d||s===N.default.parse(s).root)return;let r;try{r=tt.statSync(s,{bigint:!0})}catch(e){if("ENOENT"===e.code)return;throw e}if(ft(p,r))throw new Error(wt(a,t,i));return e(a,p,s,i)},isSrcSubdir:vt,areIdentical:ft},yt=ut,bt=ct,St=gt;const Et=yt.mkdirs,Nt=bt.pathExists;function _t(e,a,p,t,i){const d=N.default.dirname(p);Nt(d,(s,r)=>s?i(s):r?Dt(e,a,p,t,i):void Et(d,d=>d?i(d):Dt(e,a,p,t,i)))}function Tt(e,a,p,t,i,d){Promise.resolve(i.filter(p,t)).then(s=>s?e(a,p,t,i,d):d(),e=>d(e))}function Dt(e,a,p,t,i){(t.dereference?at.stat:at.lstat)(a,(d,s)=>d?i(d):s.isDirectory()?function(e,a,p,t,i,d){return a?Ot(p,t,i,d):function(e,a,p,t,i){at.mkdir(p,d=>{if(d)return i(d);Ot(a,p,t,a=>a?i(a):Ct(p,e,i))})}(e.mode,p,t,i,d)}(s,e,a,p,t,i):s.isFile()||s.isCharacterDevice()||s.isBlockDevice()?function(e,a,p,t,i,d){return a?function(e,a,p,t,i){if(!t.overwrite)return t.errorOnExist?i(new Error(`'${p}' already exists`)):i();at.unlink(p,d=>d?i(d):At(e,a,p,t,i))}(e,p,t,i,d):At(e,p,t,i,d)}(s,e,a,p,t,i):s.isSymbolicLink()?function(e,a,p,t,i){at.readlink(a,(a,d)=>a?i(a):(t.dereference&&(d=N.default.resolve(process.cwd(),d)),e?void at.readlink(p,(a,s)=>a?"EINVAL"===a.code||"UNKNOWN"===a.code?at.symlink(d,p,i):i(a):(t.dereference&&(s=N.default.resolve(process.cwd(),s)),St.isSrcSubdir(d,s)?i(new Error(`Cannot copy '${d}' to a subdirectory of itself, '${s}'.`)):e.isDirectory()&&St.isSrcSubdir(s,d)?i(new Error(`Cannot overwrite '${s}' with '${d}'.`)):function(e,a,p){at.unlink(a,t=>t?p(t):at.symlink(e,a,p))}(d,p,i))):at.symlink(d,p,i)))}(e,a,p,t,i):s.isSocket()?i(new Error(`Cannot copy a socket file: ${a}`)):s.isFIFO()?i(new Error(`Cannot copy a FIFO pipe: ${a}`)):i(new Error(`Unknown file: ${a}`)))}function At(e,a,p,t,i){at.copyFile(a,p,d=>d?i(d):t.preserveTimestamps?function(e,a,p,t){return function(e){return 0==(128&e)}(e)?function(e,a,p){return Ct(e,128|a,p)}(p,e,i=>i?t(i):Vt(e,a,p,t)):Vt(e,a,p,t)}(e.mode,a,p,i):Ct(p,e.mode,i))}function Vt(e,a,p,t){!function(e,a,p){at.stat(e,(e,t)=>e?p(e):function(e,a,p,t){at.open(e,"r+",(e,i)=>{if(e)return t(e);at.futimes(i,a,p,e=>{at.close(i,a=>{t&&t(e||a)})})})}(a,t.atime,t.mtime,p))}(a,p,a=>a?t(a):Ct(p,e,t))}function Ct(e,a,p){return at.chmod(e,a,p)}function Ot(e,a,p,t){at.readdir(e,(i,d)=>i?t(i):It(d,e,a,p,t))}function It(e,a,p,t,i){const d=e.pop();return d?function(e,a,p,t,i,d){const s=N.default.join(p,a),r=N.default.join(t,a);St.checkPaths(s,r,"copy",i,(a,n)=>{if(a)return d(a);const{destStat:l}=n;!function(e,a,p,t,i){t.filter?Tt(Dt,e,a,p,t,i):Dt(e,a,p,t,i)}(l,s,r,i,a=>a?d(a):It(e,p,t,i,d))})}(e,d,a,p,t,i):i()}const xt=yt.mkdirsSync;function Rt(e,a,p,t){const i=(t.dereference?at.statSync:at.lstatSync)(a);if(i.isDirectory())return function(e,a,p,t,i){return a?Lt(p,t,i):function(e,a,p,t){return at.mkdirSync(p),Lt(a,p,t),kt(p,e)}(e.mode,p,t,i)}(i,e,a,p,t);if(i.isFile()||i.isCharacterDevice()||i.isBlockDevice())return function(e,a,p,t,i){return a?function(e,a,p,t){if(t.overwrite)return at.unlinkSync(p),Pt(e,a,p,t);if(t.errorOnExist)throw new Error(`'${p}' already exists`)}(e,p,t,i):Pt(e,p,t,i)}(i,e,a,p,t);if(i.isSymbolicLink())return function(e,a,p,t){let i=at.readlinkSync(a);if(t.dereference&&(i=N.default.resolve(process.cwd(),i)),e){let e;try{e=at.readlinkSync(p)}catch(e){if("EINVAL"===e.code||"UNKNOWN"===e.code)return at.symlinkSync(i,p);throw e}if(t.dereference&&(e=N.default.resolve(process.cwd(),e)),St.isSrcSubdir(i,e))throw new Error(`Cannot copy '${i}' to a subdirectory of itself, '${e}'.`);if(at.statSync(p).isDirectory()&&St.isSrcSubdir(e,i))throw new Error(`Cannot overwrite '${e}' with '${i}'.`);return function(e,a){return at.unlinkSync(a),at.symlinkSync(e,a)}(i,p)}return at.symlinkSync(i,p)}(e,a,p,t);if(i.isSocket())throw new Error(`Cannot copy a socket file: ${a}`);if(i.isFIFO())throw new Error(`Cannot copy a FIFO pipe: ${a}`);throw new Error(`Unknown file: ${a}`)}function Pt(e,a,p,t){return at.copyFileSync(a,p),t.preserveTimestamps&&function(e,a,p){(function(e){return 0==(128&e)})(e)&&function(e,a){kt(e,128|a)}(p,e),function(e,a){const p=at.statSync(e);!function(e,a,p){const t=at.openSync(e,"r+");at.futimesSync(t,a,p),at.closeSync(t)}(a,p.atime,p.mtime)}(a,p)}(e.mode,a,p),kt(p,e.mode)}function kt(e,a){return at.chmodSync(e,a)}function Lt(e,a,p){at.readdirSync(e).forEach(t=>function(e,a,p,t){const i=N.default.join(a,e),d=N.default.join(p,e),{destStat:s}=St.checkPathsSync(i,d,"copy",t);return function(e,a,p,t){if(!t.filter||t.filter(a,p))return Rt(e,a,p,t)}(s,i,d,t)}(t,e,a,p))}var jt={copy:Yp(function(e,a,p,t){"function"!=typeof p||t?"function"==typeof p&&(p={filter:p}):(t=p,p={}),t=t||function(){},(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0001"),St.checkPaths(e,a,"copy",p,(i,d)=>{if(i)return t(i);const{srcStat:s,destStat:r}=d;St.checkParentPaths(e,s,a,"copy",i=>i?t(i):p.filter?Tt(_t,r,e,a,p,t):_t(r,e,a,p,t))})}),copySync:function(e,a,p){"function"==typeof p&&(p={filter:p}),(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0002");const{srcStat:t,destStat:i}=St.checkPathsSync(e,a,"copy",p);return St.checkParentPathsSync(e,t,a,"copy"),function(e,a,p,t){if(t.filter&&!t.filter(a,p))return;const i=N.default.dirname(p);return at.existsSync(i)||xt(i),Rt(e,a,p,t)}(i,e,a,p)}};const Bt="win32"===process.platform;function Ft(e){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach(a=>{e[a]=e[a]||at[a],e[a+="Sync"]=e[a]||at[a]}),e.maxBusyTries=e.maxBusyTries||3}function $t(e,a,p){let t=0;"function"==typeof a&&(p=a,a={}),y.default(e,"rimraf: missing path"),y.default.strictEqual(typeof e,"string","rimraf: path should be a string"),y.default.strictEqual(typeof p,"function","rimraf: callback function required"),y.default(a,"rimraf: invalid options argument provided"),y.default.strictEqual(typeof a,"object","rimraf: options should be object"),Ft(a),Mt(e,a,function i(d){if(d){if(("EBUSY"===d.code||"ENOTEMPTY"===d.code||"EPERM"===d.code)&&t<a.maxBusyTries)return t++,setTimeout(()=>Mt(e,a,i),100*t);"ENOENT"===d.code&&(d=null)}p(d)})}function Mt(e,a,p){y.default(e),y.default(a),y.default("function"==typeof p),a.lstat(e,(t,i)=>t&&"ENOENT"===t.code?p(null):t&&"EPERM"===t.code&&Bt?Ut(e,a,t,p):i&&i.isDirectory()?qt(e,a,t,p):void a.unlink(e,t=>{if(t){if("ENOENT"===t.code)return p(null);if("EPERM"===t.code)return Bt?Ut(e,a,t,p):qt(e,a,t,p);if("EISDIR"===t.code)return qt(e,a,t,p)}return p(t)}))}function Ut(e,a,p,t){y.default(e),y.default(a),y.default("function"==typeof t),a.chmod(e,438,i=>{i?t("ENOENT"===i.code?null:p):a.stat(e,(i,d)=>{i?t("ENOENT"===i.code?null:p):d.isDirectory()?qt(e,a,p,t):a.unlink(e,t)})})}function Gt(e,a,p){let t;y.default(e),y.default(a);try{a.chmodSync(e,438)}catch(e){if("ENOENT"===e.code)return;throw p}try{t=a.statSync(e)}catch(e){if("ENOENT"===e.code)return;throw p}t.isDirectory()?Ht(e,a,p):a.unlinkSync(e)}function qt(e,a,p,t){y.default(e),y.default(a),y.default("function"==typeof t),a.rmdir(e,i=>{!i||"ENOTEMPTY"!==i.code&&"EEXIST"!==i.code&&"EPERM"!==i.code?t(i&&"ENOTDIR"===i.code?p:i):function(e,a,p){y.default(e),y.default(a),y.default("function"==typeof p),a.readdir(e,(t,i)=>{if(t)return p(t);let d,s=i.length;if(0===s)return a.rmdir(e,p);i.forEach(t=>{$t(N.default.join(e,t),a,t=>{if(!d)return t?p(d=t):void(0==--s&&a.rmdir(e,p))})})})}(e,a,t)})}function zt(e,a){let p;Ft(a=a||{}),y.default(e,"rimraf: missing path"),y.default.strictEqual(typeof e,"string","rimraf: path should be a string"),y.default(a,"rimraf: missing options"),y.default.strictEqual(typeof a,"object","rimraf: options should be object");try{p=a.lstatSync(e)}catch(p){if("ENOENT"===p.code)return;"EPERM"===p.code&&Bt&&Gt(e,a,p)}try{p&&p.isDirectory()?Ht(e,a,null):a.unlinkSync(e)}catch(p){if("ENOENT"===p.code)return;if("EPERM"===p.code)return Bt?Gt(e,a,p):Ht(e,a,p);if("EISDIR"!==p.code)throw p;Ht(e,a,p)}}function Ht(e,a,p){y.default(e),y.default(a);try{a.rmdirSync(e)}catch(t){if("ENOTDIR"===t.code)throw p;if("ENOTEMPTY"===t.code||"EEXIST"===t.code||"EPERM"===t.code)!function(e,a){if(y.default(e),y.default(a),a.readdirSync(e).forEach(p=>zt(N.default.join(e,p),a)),!Bt)return a.rmdirSync(e,a);{const p=Date.now();do{try{return a.rmdirSync(e,a)}catch{}}while(Date.now()-p<500)}}(e,a);else if("ENOENT"!==t.code)throw t}}var Yt=$t;$t.sync=zt;var Wt=Yt,Xt={remove:Yp(function(e,a){if(at.rm)return at.rm(e,{recursive:!0,force:!0},a);Wt(e,a)}),removeSync:function(e){if(at.rmSync)return at.rmSync(e,{recursive:!0,force:!0});Wt.sync(e)}},Kt=Xt;const Jt=Wp(async function(e){let a;try{a=await tt.readdir(e)}catch{return yt.mkdirs(e)}return Promise.all(a.map(a=>Kt.remove(N.default.join(e,a))))});function Zt(e){let a;try{a=tt.readdirSync(e)}catch{return yt.mkdirsSync(e)}a.forEach(a=>{a=N.default.join(e,a),Kt.removeSync(a)})}var Qt={emptyDirSync:Zt,emptydirSync:Zt,emptyDir:Jt,emptydir:Jt},ei={createFile:Yp(function(e,a){function p(){at.writeFile(e,"",e=>{if(e)return a(e);a()})}at.stat(e,(t,i)=>{if(!t&&i.isFile())return a();const d=N.default.dirname(e);at.stat(d,(e,t)=>{if(e)return"ENOENT"===e.code?yt.mkdirs(d,e=>{if(e)return a(e);p()}):a(e);t.isDirectory()?p():at.readdir(d,e=>{if(e)return a(e)})})})}),createFileSync:function(e){let a;try{a=at.statSync(e)}catch{}if(a&&a.isFile())return;const p=N.default.dirname(e);try{at.statSync(p).isDirectory()||at.readdirSync(p)}catch(e){if(!e||"ENOENT"!==e.code)throw e;yt.mkdirsSync(p)}at.writeFileSync(e,"")}};const ai=Yp,pi=bt.pathExists,{areIdentical:ti}=St;var ii={createLink:ai(function(e,a,p){function t(e,a){at.link(e,a,e=>{if(e)return p(e);p(null)})}at.lstat(a,(i,d)=>{at.lstat(e,(i,s)=>{if(i)return i.message=i.message.replace("lstat","ensureLink"),p(i);if(d&&ti(s,d))return p(null);const r=N.default.dirname(a);pi(r,(i,d)=>i?p(i):d?t(e,a):void yt.mkdirs(r,i=>{if(i)return p(i);t(e,a)}))})})}),createLinkSync:function(e,a){let p;try{p=at.lstatSync(a)}catch{}try{const a=at.lstatSync(e);if(p&&ti(a,p))return}catch(e){throw e.message=e.message.replace("lstat","ensureLink"),e}const t=N.default.dirname(a);return at.existsSync(t)||yt.mkdirsSync(t),at.linkSync(e,a)}};const di=bt.pathExists,si=Yp,ri=yt.mkdirs,ni=yt.mkdirsSync,li=bt.pathExists,{areIdentical:oi}=St;function mi(e,a,p,t){!function(e,a,p){if(N.default.isAbsolute(e))return at.lstat(e,a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:e}));{const t=N.default.dirname(a),i=N.default.join(t,e);di(i,(a,d)=>a?p(a):d?p(null,{toCwd:i,toDst:e}):at.lstat(e,a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:N.default.relative(t,e)})))}}(e,a,(i,d)=>{if(i)return t(i);e=d.toDst,function(e,a,p){if(p="function"==typeof a?a:p,a="function"!=typeof a&&a)return p(null,a);at.lstat(e,(e,t)=>{if(e)return p(null,"file");a=t&&t.isDirectory()?"dir":"file",p(null,a)})}(d.toCwd,p,(p,i)=>{if(p)return t(p);const d=N.default.dirname(a);li(d,(p,s)=>p?t(p):s?tt.symlink(e,a,i,t):void ri(d,p=>{if(p)return t(p);tt.symlink(e,a,i,t)}))})})}var ui=ei,ci=ii,hi={createSymlink:si(function(e,a,p,t){t="function"==typeof p?p:t,p="function"!=typeof p&&p,tt.lstat(a,(i,d)=>{!i&&d.isSymbolicLink()?Promise.all([tt.stat(e),tt.stat(a)]).then(([i,d])=>{if(oi(i,d))return t(null);mi(e,a,p,t)}):mi(e,a,p,t)})}),createSymlinkSync:function(e,a,p){let t;try{t=tt.lstatSync(a)}catch{}if(t&&t.isSymbolicLink()){const p=tt.statSync(e),t=tt.statSync(a);if(oi(p,t))return}const i=function(e,a){let p;if(N.default.isAbsolute(e)){if(p=at.existsSync(e),!p)throw new Error("absolute srcpath does not exist");return{toCwd:e,toDst:e}}{const t=N.default.dirname(a),i=N.default.join(t,e);if(p=at.existsSync(i),p)return{toCwd:i,toDst:e};if(p=at.existsSync(e),!p)throw new Error("relative srcpath does not exist");return{toCwd:e,toDst:N.default.relative(t,e)}}}(e,a);e=i.toDst,p=function(e,a){let p;if(a)return a;try{p=at.lstatSync(e)}catch{return"file"}return p&&p.isDirectory()?"dir":"file"}(i.toCwd,p);const d=N.default.dirname(a);return tt.existsSync(d)||ni(d),tt.symlinkSync(e,a,p)}};const{createFile:fi,createFileSync:vi}=ui,{createLink:wi,createLinkSync:gi}=ci,{createSymlink:yi,createSymlinkSync:bi}=hi;var Si={createFile:fi,createFileSync:vi,ensureFile:fi,ensureFileSync:vi,createLink:wi,createLinkSync:gi,ensureLink:wi,ensureLinkSync:gi,createSymlink:yi,createSymlinkSync:bi,ensureSymlink:yi,ensureSymlinkSync:bi},Ei={stringify:function(e,a={}){const p=a.EOL||"\n";return JSON.stringify(e,a?a.replacer:null,a.spaces).replace(/\n/g,p)+p},stripBom:function(e){return Buffer.isBuffer(e)&&(e=e.toString("utf8")),e.replace(/^\uFEFF/,"")}},Ni=function(e){return Object.defineProperty(function(...a){if("function"!=typeof a[a.length-1])return new Promise((p,t)=>{e.apply(this,a.concat([(e,a)=>e?t(e):p(a)]))});e.apply(this,a)},"name",{value:e.name})},_i=function(e){return Object.defineProperty(function(...a){const p=a[a.length-1];if("function"!=typeof p)return e.apply(this,a);e.apply(this,a.slice(0,-1)).then(e=>p(null,e),p)},"name",{value:e.name})};let Ti;try{Ti=at}catch(e){Ti=_.default}const{stringify:Di,stripBom:Ai}=Ei,Vi=_i(async function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||Ti,t=!("throws"in a)||a.throws;let i,d=await Ni(p.readFile)(e,a);d=Ai(d);try{i=JSON.parse(d,a?a.reviver:null)}catch(a){if(t)throw a.message=`${e}: ${a.message}`,a;return null}return i}),Ci=_i(async function(e,a,p={}){const t=p.fs||Ti,i=Di(a,p);await Ni(t.writeFile)(e,i,p)}),Oi={readFile:Vi,readFileSync:function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||Ti,t=!("throws"in a)||a.throws;try{let t=p.readFileSync(e,a);return t=Ai(t),JSON.parse(t,a.reviver)}catch(a){if(t)throw a.message=`${e}: ${a.message}`,a;return null}},writeFile:Ci,writeFileSync:function(e,a,p={}){const t=p.fs||Ti,i=Di(a,p);return t.writeFileSync(e,i,p)}};var Ii={readJson:Oi.readFile,readJsonSync:Oi.readFileSync,writeJson:Oi.writeFile,writeJsonSync:Oi.writeFileSync};const xi=bt.pathExists;var Ri={outputFile:Yp(function(e,a,p,t){"function"==typeof p&&(t=p,p="utf8");const i=N.default.dirname(e);xi(i,(d,s)=>d?t(d):s?at.writeFile(e,a,p,t):void yt.mkdirs(i,i=>{if(i)return t(i);at.writeFile(e,a,p,t)}))}),outputFileSync:function(e,...a){const p=N.default.dirname(e);if(at.existsSync(p))return at.writeFileSync(e,...a);yt.mkdirsSync(p),at.writeFileSync(e,...a)}},Pi=Ri;const{stringify:ki}=Ei,{outputFile:Li}=Pi,{stringify:ji}=Ei,{outputFileSync:Bi}=Pi;var Fi=Ii;Fi.outputJson=Wp(async function(e,a,p={}){const t=ki(a,p);await Li(e,t,p)}),Fi.outputJsonSync=function(e,a,p){const t=ji(a,p);Bi(e,t,p)},Fi.outputJSON=Fi.outputJson,Fi.outputJSONSync=Fi.outputJsonSync,Fi.writeJSON=Fi.writeJson,Fi.writeJSONSync=Fi.writeJsonSync,Fi.readJSON=Fi.readJson,Fi.readJSONSync=Fi.readJsonSync;var $i=jt;const Mi=$i.copy,Ui=Kt.remove,Gi=yt.mkdirp,qi=bt.pathExists;function zi(e,a,p,t,i){return t?Hi(e,a,p,i):p?Ui(a,t=>t?i(t):Hi(e,a,p,i)):void qi(a,(t,d)=>t?i(t):d?i(new Error("dest already exists.")):Hi(e,a,p,i))}function Hi(e,a,p,t){at.rename(e,a,i=>i?"EXDEV"!==i.code?t(i):function(e,a,p,t){Mi(e,a,{overwrite:p,errorOnExist:!0},a=>a?t(a):Ui(e,t))}(e,a,p,t):t())}const Yi=$i.copySync,Wi=Kt.removeSync,Xi=yt.mkdirpSync;function Ki(e,a,p){try{at.renameSync(e,a)}catch(t){if("EXDEV"!==t.code)throw t;return function(e,a,p){return Yi(e,a,{overwrite:p,errorOnExist:!0}),Wi(e)}(e,a,p)}}var Ji=Qt,Zi=Si,Qi=Fi,ed={move:Yp(function(e,a,p,t){"function"==typeof p&&(t=p,p={});const i=(p=p||{}).overwrite||p.clobber||!1;St.checkPaths(e,a,"move",p,(p,d)=>{if(p)return t(p);const{srcStat:s,isChangingCase:r=!1}=d;St.checkParentPaths(e,s,a,"move",p=>p?t(p):function(e){const a=N.default.dirname(e);return N.default.parse(a).root===a}(a)?zi(e,a,i,r,t):void Gi(N.default.dirname(a),p=>p?t(p):zi(e,a,i,r,t)))})}),moveSync:function(e,a,p){const t=(p=p||{}).overwrite||p.clobber||!1,{srcStat:i,isChangingCase:d=!1}=St.checkPathsSync(e,a,"move",p);return St.checkParentPathsSync(e,i,a,"move"),function(e){const a=N.default.dirname(e);return N.default.parse(a).root===a}(a)||Xi(N.default.dirname(a)),function(e,a,p,t){if(t)return Ki(e,a,p);if(p)return Wi(a),Ki(e,a,p);if(at.existsSync(a))throw new Error("dest already exists.");return Ki(e,a,p)}(e,a,t,d)}},ad={...tt,...$i,...Ji,...Zi,...Qi,...yt,...ed,...Pi,...bt,...Kt};const pd=e=>console.log(e),td=e=>console.log(U.green(U.symbols.check+" ")+e),id=e=>{console.error(e),process.exit(1)},dd=e=>console.warn(U.yellow(e)),sd="win32"===process.platform?["-","\\","|","/"]:["‚†ã","‚†ô","‚†π","‚†∏","‚†º","‚†¥","‚†¶","‚†ß","‚†á","‚†è"],rd=process.stderr;var nd=B(function(e,a){var p;a=e.exports=m,p="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER"),console.log.apply(console,e)}:function(){},a.SEMVER_SPEC_VERSION="2.0.0";var t=Number.MAX_SAFE_INTEGER||9007199254740991,i=a.re=[],d=a.src=[],s=a.tokens={},r=0;function n(e){s[e]=r++}n("NUMERICIDENTIFIER"),d[s.NUMERICIDENTIFIER]="0|[1-9]\\d*",n("NUMERICIDENTIFIERLOOSE"),d[s.NUMERICIDENTIFIERLOOSE]="[0-9]+",n("NONNUMERICIDENTIFIER"),d[s.NONNUMERICIDENTIFIER]="\\d*[a-zA-Z-][a-zA-Z0-9-]*",n("MAINVERSION"),d[s.MAINVERSION]="("+d[s.NUMERICIDENTIFIER]+")\\.("+d[s.NUMERICIDENTIFIER]+")\\.("+d[s.NUMERICIDENTIFIER]+")",n("MAINVERSIONLOOSE"),d[s.MAINVERSIONLOOSE]="("+d[s.NUMERICIDENTIFIERLOOSE]+")\\.("+d[s.NUMERICIDENTIFIERLOOSE]+")\\.("+d[s.NUMERICIDENTIFIERLOOSE]+")",n("PRERELEASEIDENTIFIER"),d[s.PRERELEASEIDENTIFIER]="(?:"+d[s.NUMERICIDENTIFIER]+"|"+d[s.NONNUMERICIDENTIFIER]+")",n("PRERELEASEIDENTIFIERLOOSE"),d[s.PRERELEASEIDENTIFIERLOOSE]="(?:"+d[s.NUMERICIDENTIFIERLOOSE]+"|"+d[s.NONNUMERICIDENTIFIER]+")",n("PRERELEASE"),d[s.PRERELEASE]="(?:-("+d[s.PRERELEASEIDENTIFIER]+"(?:\\."+d[s.PRERELEASEIDENTIFIER]+")*))",n("PRERELEASELOOSE"),d[s.PRERELEASELOOSE]="(?:-?("+d[s.PRERELEASEIDENTIFIERLOOSE]+"(?:\\."+d[s.PRERELEASEIDENTIFIERLOOSE]+")*))",n("BUILDIDENTIFIER"),d[s.BUILDIDENTIFIER]="[0-9A-Za-z-]+",n("BUILD"),d[s.BUILD]="(?:\\+("+d[s.BUILDIDENTIFIER]+"(?:\\."+d[s.BUILDIDENTIFIER]+")*))",n("FULL"),n("FULLPLAIN"),d[s.FULLPLAIN]="v?"+d[s.MAINVERSION]+d[s.PRERELEASE]+"?"+d[s.BUILD]+"?",d[s.FULL]="^"+d[s.FULLPLAIN]+"$",n("LOOSEPLAIN"),d[s.LOOSEPLAIN]="[v=\\s]*"+d[s.MAINVERSIONLOOSE]+d[s.PRERELEASELOOSE]+"?"+d[s.BUILD]+"?",n("LOOSE"),d[s.LOOSE]="^"+d[s.LOOSEPLAIN]+"$",n("GTLT"),d[s.GTLT]="((?:<|>)?=?)",n("XRANGEIDENTIFIERLOOSE"),d[s.XRANGEIDENTIFIERLOOSE]=d[s.NUMERICIDENTIFIERLOOSE]+"|x|X|\\*",n("XRANGEIDENTIFIER"),d[s.XRANGEIDENTIFIER]=d[s.NUMERICIDENTIFIER]+"|x|X|\\*",n("XRANGEPLAIN"),d[s.XRANGEPLAIN]="[v=\\s]*("+d[s.XRANGEIDENTIFIER]+")(?:\\.("+d[s.XRANGEIDENTIFIER]+")(?:\\.("+d[s.XRANGEIDENTIFIER]+")(?:"+d[s.PRERELEASE]+")?"+d[s.BUILD]+"?)?)?",n("XRANGEPLAINLOOSE"),d[s.XRANGEPLAINLOOSE]="[v=\\s]*("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+d[s.XRANGEIDENTIFIERLOOSE]+")(?:"+d[s.PRERELEASELOOSE]+")?"+d[s.BUILD]+"?)?)?",n("XRANGE"),d[s.XRANGE]="^"+d[s.GTLT]+"\\s*"+d[s.XRANGEPLAIN]+"$",n("XRANGELOOSE"),d[s.XRANGELOOSE]="^"+d[s.GTLT]+"\\s*"+d[s.XRANGEPLAINLOOSE]+"$",n("COERCE"),d[s.COERCE]="(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])",n("COERCERTL"),i[s.COERCERTL]=new RegExp(d[s.COERCE],"g"),n("LONETILDE"),d[s.LONETILDE]="(?:~>?)",n("TILDETRIM"),d[s.TILDETRIM]="(\\s*)"+d[s.LONETILDE]+"\\s+",i[s.TILDETRIM]=new RegExp(d[s.TILDETRIM],"g"),n("TILDE"),d[s.TILDE]="^"+d[s.LONETILDE]+d[s.XRANGEPLAIN]+"$",n("TILDELOOSE"),d[s.TILDELOOSE]="^"+d[s.LONETILDE]+d[s.XRANGEPLAINLOOSE]+"$",n("LONECARET"),d[s.LONECARET]="(?:\\^)",n("CARETTRIM"),d[s.CARETTRIM]="(\\s*)"+d[s.LONECARET]+"\\s+",i[s.CARETTRIM]=new RegExp(d[s.CARETTRIM],"g"),n("CARET"),d[s.CARET]="^"+d[s.LONECARET]+d[s.XRANGEPLAIN]+"$",n("CARETLOOSE"),d[s.CARETLOOSE]="^"+d[s.LONECARET]+d[s.XRANGEPLAINLOOSE]+"$",n("COMPARATORLOOSE"),d[s.COMPARATORLOOSE]="^"+d[s.GTLT]+"\\s*("+d[s.LOOSEPLAIN]+")$|^$",n("COMPARATOR"),d[s.COMPARATOR]="^"+d[s.GTLT]+"\\s*("+d[s.FULLPLAIN]+")$|^$",n("COMPARATORTRIM"),d[s.COMPARATORTRIM]="(\\s*)"+d[s.GTLT]+"\\s*("+d[s.LOOSEPLAIN]+"|"+d[s.XRANGEPLAIN]+")",i[s.COMPARATORTRIM]=new RegExp(d[s.COMPARATORTRIM],"g"),n("HYPHENRANGE"),d[s.HYPHENRANGE]="^\\s*("+d[s.XRANGEPLAIN]+")\\s+-\\s+("+d[s.XRANGEPLAIN]+")\\s*$",n("HYPHENRANGELOOSE"),d[s.HYPHENRANGELOOSE]="^\\s*("+d[s.XRANGEPLAINLOOSE]+")\\s+-\\s+("+d[s.XRANGEPLAINLOOSE]+")\\s*$",n("STAR"),d[s.STAR]="(<|>)?=?\\s*\\*";for(var l=0;l<r;l++)p(l,d[l]),i[l]||(i[l]=new RegExp(d[l]));function o(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof m)return e;if("string"!=typeof e)return null;if(e.length>256)return null;if(!(a.loose?i[s.LOOSE]:i[s.FULL]).test(e))return null;try{return new m(e,a)}catch(e){return null}}function m(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof m){if(e.loose===a.loose)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: "+e);if(e.length>256)throw new TypeError("version is longer than 256 characters");if(!(this instanceof m))return new m(e,a);p("SemVer",e,a),this.options=a,this.loose=!!a.loose;var d=e.trim().match(a.loose?i[s.LOOSE]:i[s.FULL]);if(!d)throw new TypeError("Invalid Version: "+e);if(this.raw=e,this.major=+d[1],this.minor=+d[2],this.patch=+d[3],this.major>t||this.major<0)throw new TypeError("Invalid major version");if(this.minor>t||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>t||this.patch<0)throw new TypeError("Invalid patch version");this.prerelease=d[4]?d[4].split(".").map(function(e){if(/^[0-9]+$/.test(e)){var a=+e;if(a>=0&&a<t)return a}return e}):[],this.build=d[5]?d[5].split("."):[],this.format()}a.parse=o,a.valid=function(e,a){var p=o(e,a);return p?p.version:null},a.clean=function(e,a){var p=o(e.trim().replace(/^[=v]+/,""),a);return p?p.version:null},a.SemVer=m,m.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},m.prototype.toString=function(){return this.version},m.prototype.compare=function(e){return p("SemVer.compare",this.version,this.options,e),e instanceof m||(e=new m(e,this.options)),this.compareMain(e)||this.comparePre(e)},m.prototype.compareMain=function(e){return e instanceof m||(e=new m(e,this.options)),c(this.major,e.major)||c(this.minor,e.minor)||c(this.patch,e.patch)},m.prototype.comparePre=function(e){if(e instanceof m||(e=new m(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var a=0;do{var t=this.prerelease[a],i=e.prerelease[a];if(p("prerelease compare",a,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++a)},m.prototype.compareBuild=function(e){e instanceof m||(e=new m(e,this.options));var a=0;do{var t=this.build[a],i=e.build[a];if(p("prerelease compare",a,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++a)},m.prototype.inc=function(e,a){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",a);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",a);break;case"prepatch":this.prerelease.length=0,this.inc("patch",a),this.inc("pre",a);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",a),this.inc("pre",a);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var p=this.prerelease.length;--p>=0;)"number"==typeof this.prerelease[p]&&(this.prerelease[p]++,p=-2);-1===p&&this.prerelease.push(0)}a&&(this.prerelease[0]===a?isNaN(this.prerelease[1])&&(this.prerelease=[a,0]):this.prerelease=[a,0]);break;default:throw new Error("invalid increment argument: "+e)}return this.format(),this.raw=this.version,this},a.inc=function(e,a,p,t){"string"==typeof p&&(t=p,p=void 0);try{return new m(e,p).inc(a,t).version}catch(e){return null}},a.diff=function(e,a){if(w(e,a))return null;var p=o(e),t=o(a),i="";if(p.prerelease.length||t.prerelease.length){i="pre";var d="prerelease"}for(var s in p)if(("major"===s||"minor"===s||"patch"===s)&&p[s]!==t[s])return i+s;return d},a.compareIdentifiers=c;var u=/^[0-9]+$/;function c(e,a){var p=u.test(e),t=u.test(a);return p&&t&&(e=+e,a=+a),e===a?0:p&&!t?-1:t&&!p?1:e<a?-1:1}function h(e,a,p){return new m(e,p).compare(new m(a,p))}function f(e,a,p){return h(e,a,p)>0}function v(e,a,p){return h(e,a,p)<0}function w(e,a,p){return 0===h(e,a,p)}function g(e,a,p){return 0!==h(e,a,p)}function y(e,a,p){return h(e,a,p)>=0}function b(e,a,p){return h(e,a,p)<=0}function S(e,a,p,t){switch(a){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e===p;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e!==p;case"":case"=":case"==":return w(e,p,t);case"!=":return g(e,p,t);case">":return f(e,p,t);case">=":return y(e,p,t);case"<":return v(e,p,t);case"<=":return b(e,p,t);default:throw new TypeError("Invalid operator: "+a)}}function E(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof E){if(e.loose===!!a.loose)return e;e=e.value}if(!(this instanceof E))return new E(e,a);p("comparator",e,a),this.options=a,this.loose=!!a.loose,this.parse(e),this.value=this.semver===N?"":this.operator+this.semver.version,p("comp",this)}a.rcompareIdentifiers=function(e,a){return c(a,e)},a.major=function(e,a){return new m(e,a).major},a.minor=function(e,a){return new m(e,a).minor},a.patch=function(e,a){return new m(e,a).patch},a.compare=h,a.compareLoose=function(e,a){return h(e,a,!0)},a.compareBuild=function(e,a,p){var t=new m(e,p),i=new m(a,p);return t.compare(i)||t.compareBuild(i)},a.rcompare=function(e,a,p){return h(a,e,p)},a.sort=function(e,p){return e.sort(function(e,t){return a.compareBuild(e,t,p)})},a.rsort=function(e,p){return e.sort(function(e,t){return a.compareBuild(t,e,p)})},a.gt=f,a.lt=v,a.eq=w,a.neq=g,a.gte=y,a.lte=b,a.cmp=S,a.Comparator=E;var N={};function _(e,a){if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),e instanceof _)return e.loose===!!a.loose&&e.includePrerelease===!!a.includePrerelease?e:new _(e.raw,a);if(e instanceof E)return new _(e.value,a);if(!(this instanceof _))return new _(e,a);if(this.options=a,this.loose=!!a.loose,this.includePrerelease=!!a.includePrerelease,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError("Invalid SemVer Range: "+e);this.format()}function T(e,a){for(var p=!0,t=e.slice(),i=t.pop();p&&t.length;)p=t.every(function(e){return i.intersects(e,a)}),i=t.pop();return p}function D(e){return!e||"x"===e.toLowerCase()||"*"===e}function A(e,a,p,t,i,d,s,r,n,l,o,m,u){return((a=D(p)?"":D(t)?">="+p+".0.0":D(i)?">="+p+"."+t+".0":">="+a)+" "+(r=D(n)?"":D(l)?"<"+(+n+1)+".0.0":D(o)?"<"+n+"."+(+l+1)+".0":m?"<="+n+"."+l+"."+o+"-"+m:"<="+r)).trim()}function V(e,a,t){for(var i=0;i<e.length;i++)if(!e[i].test(a))return!1;if(a.prerelease.length&&!t.includePrerelease){for(i=0;i<e.length;i++)if(p(e[i].semver),e[i].semver!==N&&e[i].semver.prerelease.length>0){var d=e[i].semver;if(d.major===a.major&&d.minor===a.minor&&d.patch===a.patch)return!0}return!1}return!0}function C(e,a,p){try{a=new _(a,p)}catch(e){return!1}return a.test(e)}function O(e,a,p,t){var i,d,s,r,n;switch(e=new m(e,t),a=new _(a,t),p){case">":i=f,d=b,s=v,r=">",n=">=";break;case"<":i=v,d=y,s=f,r="<",n="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(C(e,a,t))return!1;for(var l=0;l<a.set.length;++l){var o=null,u=null;if(a.set[l].forEach(function(e){e.semver===N&&(e=new E(">=0.0.0")),u=u||e,i(e.semver,(o=o||e).semver,t)?o=e:s(e.semver,u.semver,t)&&(u=e)}),o.operator===r||o.operator===n)return!1;if((!u.operator||u.operator===r)&&d(e,u.semver))return!1;if(u.operator===n&&s(e,u.semver))return!1}return!0}E.prototype.parse=function(e){var a=e.match(this.options.loose?i[s.COMPARATORLOOSE]:i[s.COMPARATOR]);if(!a)throw new TypeError("Invalid comparator: "+e);this.operator=void 0!==a[1]?a[1]:"","="===this.operator&&(this.operator=""),this.semver=a[2]?new m(a[2],this.options.loose):N},E.prototype.toString=function(){return this.value},E.prototype.test=function(e){if(p("Comparator.test",e,this.options.loose),this.semver===N||e===N)return!0;if("string"==typeof e)try{e=new m(e,this.options)}catch(e){return!1}return S(e,this.operator,this.semver,this.options)},E.prototype.intersects=function(e,a){if(!(e instanceof E))throw new TypeError("a Comparator is required");var p;if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),""===this.operator)return""===this.value||(p=new _(e.value,a),C(this.value,p,a));if(""===e.operator)return""===e.value||(p=new _(this.value,a),C(e.semver,p,a));var t=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),i=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),d=this.semver.version===e.semver.version,s=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),r=S(this.semver,"<",e.semver,a)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),n=S(this.semver,">",e.semver,a)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return t||i||d&&s||r||n},a.Range=_,_.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim(),this.range},_.prototype.toString=function(){return this.range},_.prototype.parseRange=function(e){var a=this.options.loose;e=(e=e.trim()).replace(a?i[s.HYPHENRANGELOOSE]:i[s.HYPHENRANGE],A),p("hyphen replace",e),e=e.replace(i[s.COMPARATORTRIM],"$1$2$3"),p("comparator trim",e,i[s.COMPARATORTRIM]),e=(e=(e=e.replace(i[s.TILDETRIM],"$1~")).replace(i[s.CARETTRIM],"$1^")).split(/\s+/).join(" ");var t=a?i[s.COMPARATORLOOSE]:i[s.COMPARATOR],d=e.split(" ").map(function(e){return function(e,a){return p("comp",e,a),e=function(e,a){return e.trim().split(/\s+/).map(function(e){return function(e,a){return p("caret",e,a),e.replace(a.loose?i[s.CARETLOOSE]:i[s.CARET],function(a,t,i,d,s){var r;return p("caret",e,a,t,i,d,s),D(t)?r="":D(i)?r=">="+t+".0.0 <"+(+t+1)+".0.0":D(d)?r="0"===t?">="+t+"."+i+".0 <"+t+"."+(+i+1)+".0":">="+t+"."+i+".0 <"+(+t+1)+".0.0":s?(p("replaceCaret pr",s),r="0"===t?"0"===i?">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+i+"."+(+d+1):">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+(+i+1)+".0":">="+t+"."+i+"."+d+"-"+s+" <"+(+t+1)+".0.0"):(p("no pr"),r="0"===t?"0"===i?">="+t+"."+i+"."+d+" <"+t+"."+i+"."+(+d+1):">="+t+"."+i+"."+d+" <"+t+"."+(+i+1)+".0":">="+t+"."+i+"."+d+" <"+(+t+1)+".0.0"),p("caret return",r),r})}(e,a)}).join(" ")}(e,a),p("caret",e),e=function(e,a){return e.trim().split(/\s+/).map(function(e){return function(e,a){return e.replace(a.loose?i[s.TILDELOOSE]:i[s.TILDE],function(a,t,i,d,s){var r;return p("tilde",e,a,t,i,d,s),D(t)?r="":D(i)?r=">="+t+".0.0 <"+(+t+1)+".0.0":D(d)?r=">="+t+"."+i+".0 <"+t+"."+(+i+1)+".0":s?(p("replaceTilde pr",s),r=">="+t+"."+i+"."+d+"-"+s+" <"+t+"."+(+i+1)+".0"):r=">="+t+"."+i+"."+d+" <"+t+"."+(+i+1)+".0",p("tilde return",r),r})}(e,a)}).join(" ")}(e,a),p("tildes",e),e=function(e,a){return p("replaceXRanges",e,a),e.split(/\s+/).map(function(e){return function(e,a){return(e=e.trim()).replace(a.loose?i[s.XRANGELOOSE]:i[s.XRANGE],function(t,i,d,s,r,n){p("xRange",e,t,i,d,s,r,n);var l=D(d),o=l||D(s),m=o||D(r);return"="===i&&m&&(i=""),n=a.includePrerelease?"-0":"",l?t=">"===i||"<"===i?"<0.0.0-0":"*":i&&m?(o&&(s=0),r=0,">"===i?(i=">=",o?(d=+d+1,s=0,r=0):(s=+s+1,r=0)):"<="===i&&(i="<",o?d=+d+1:s=+s+1),t=i+d+"."+s+"."+r+n):o?t=">="+d+".0.0"+n+" <"+(+d+1)+".0.0"+n:m&&(t=">="+d+"."+s+".0"+n+" <"+d+"."+(+s+1)+".0"+n),p("xRange return",t),t})}(e,a)}).join(" ")}(e,a),p("xrange",e),e=function(e,a){return p("replaceStars",e,a),e.trim().replace(i[s.STAR],"")}(e,a),p("stars",e),e}(e,this.options)},this).join(" ").split(/\s+/);return this.options.loose&&(d=d.filter(function(e){return!!e.match(t)})),d.map(function(e){return new E(e,this.options)},this)},_.prototype.intersects=function(e,a){if(!(e instanceof _))throw new TypeError("a Range is required");return this.set.some(function(p){return T(p,a)&&e.set.some(function(e){return T(e,a)&&p.every(function(p){return e.every(function(e){return p.intersects(e,a)})})})})},a.toComparators=function(e,a){return new _(e,a).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})},_.prototype.test=function(e){if(!e)return!1;if("string"==typeof e)try{e=new m(e,this.options)}catch(e){return!1}for(var a=0;a<this.set.length;a++)if(V(this.set[a],e,this.options))return!0;return!1},a.satisfies=C,a.maxSatisfying=function(e,a,p){var t=null,i=null;try{var d=new _(a,p)}catch(e){return null}return e.forEach(function(e){d.test(e)&&(t&&-1!==i.compare(e)||(i=new m(t=e,p)))}),t},a.minSatisfying=function(e,a,p){var t=null,i=null;try{var d=new _(a,p)}catch(e){return null}return e.forEach(function(e){d.test(e)&&(t&&1!==i.compare(e)||(i=new m(t=e,p)))}),t},a.minVersion=function(e,a){e=new _(e,a);var p=new m("0.0.0");if(e.test(p))return p;if(p=new m("0.0.0-0"),e.test(p))return p;p=null;for(var t=0;t<e.set.length;++t)e.set[t].forEach(function(e){var a=new m(e.semver.version);switch(e.operator){case">":0===a.prerelease.length?a.patch++:a.prerelease.push(0),a.raw=a.format();case"":case">=":p&&!f(p,a)||(p=a);break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+e.operator)}});return p&&e.test(p)?p:null},a.validRange=function(e,a){try{return new _(e,a).range||"*"}catch(e){return null}},a.ltr=function(e,a,p){return O(e,a,"<",p)},a.gtr=function(e,a,p){return O(e,a,">",p)},a.outside=O,a.prerelease=function(e,a){var p=o(e,a);return p&&p.prerelease.length?p.prerelease:null},a.intersects=function(e,a,p){return e=new _(e,p),a=new _(a,p),e.intersects(a)},a.coerce=function(e,a){if(e instanceof m)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;var p=null;if((a=a||{}).rtl){for(var t;(t=i[s.COERCERTL].exec(e))&&(!p||p.index+p[0].length!==e.length);)p&&t.index+t[0].length===p.index+p[0].length||(p=t),i[s.COERCERTL].lastIndex=t.index+t[1].length+t[2].length;i[s.COERCERTL].lastIndex=-1}else p=e.match(i[s.COERCE]);return null===p?null:o(p[2]+"."+(p[3]||"0")+"."+(p[4]||"0"),a)}});const{promisify:ld}=V.default,od=nd.satisfies(process.version,">=10.12.0"),md=e=>{if("win32"===process.platform&&/[<>:"|?*]/.test(e.replace(N.default.parse(e).root,""))){const a=new Error(`Path contains invalid characters: ${e}`);throw a.code="EINVAL",a}},ud=e=>({mode:511,fs:_.default,...e}),cd=e=>{const a=new Error(`operation not permitted, mkdir '${e}'`);return a.code="EPERM",a.errno=-4048,a.path=e,a.syscall="mkdir",a};var hd=async(e,a)=>{md(e),a=ud(a);const p=ld(a.fs.mkdir),t=ld(a.fs.stat);if(od&&a.fs.mkdir===_.default.mkdir){const t=N.default.resolve(e);return await p(t,{mode:a.mode,recursive:!0}),t}const i=async e=>{try{return await p(e,a.mode),e}catch(a){if("EPERM"===a.code)throw a;if("ENOENT"===a.code){if(N.default.dirname(e)===e)throw cd(e);if(a.message.includes("null bytes"))throw a;return await i(N.default.dirname(e)),i(e)}try{if(!(await t(e)).isDirectory())throw new Error("The path is not a directory")}catch(e){throw a}return e}};return i(N.default.resolve(e))};hd.sync=(e,a)=>{if(md(e),a=ud(a),od&&a.fs.mkdirSync===_.default.mkdirSync){const p=N.default.resolve(e);return _.default.mkdirSync(p,{mode:a.mode,recursive:!0}),p}const p=e=>{try{a.fs.mkdirSync(e,a.mode)}catch(t){if("EPERM"===t.code)throw t;if("ENOENT"===t.code){if(N.default.dirname(e)===e)throw cd(e);if(t.message.includes("null bytes"))throw t;return p(N.default.dirname(e)),p(e)}try{if(!a.fs.statSync(e).isDirectory())throw new Error("The path is not a directory")}catch(e){throw t}}return e};return p(N.default.resolve(e))};var fd=B(function(e,a){const p=T.default.homedir(),{env:t}=process;a.data=t.XDG_DATA_HOME||(p?N.default.join(p,".local","share"):void 0),a.config=t.XDG_CONFIG_HOME||(p?N.default.join(p,".config"):void 0),a.cache=t.XDG_CACHE_HOME||(p?N.default.join(p,".cache"):void 0),a.runtime=t.XDG_RUNTIME_DIR||void 0,a.dataDirs=(t.XDG_DATA_DIRS||"/usr/local/share/:/usr/share/").split(":"),a.data&&a.dataDirs.unshift(a.data),a.configDirs=(t.XDG_CONFIG_DIRS||"/etc/xdg").split(":"),a.config&&a.configDirs.unshift(a.config)}),vd=B(function(e){!function(){var a;function p(e,t){var i=this instanceof p?this:a;if(i.reset(t),"string"==typeof e&&e.length>0&&i.hash(e),i!==this)return i}p.prototype.hash=function(e){var a,p,t,i,d;switch(this.len+=d=e.length,p=this.k1,t=0,this.rem){case 0:p^=d>t?65535&e.charCodeAt(t++):0;case 1:p^=d>t?(65535&e.charCodeAt(t++))<<8:0;case 2:p^=d>t?(65535&e.charCodeAt(t++))<<16:0;case 3:p^=d>t?(255&e.charCodeAt(t))<<24:0,p^=d>t?(65280&e.charCodeAt(t++))>>8:0}if(this.rem=d+this.rem&3,(d-=this.rem)>0){for(a=this.h1;a=5*(a=(a^=p=13715*(p=(p=11601*p+3432906752*(65535&p)&4294967295)<<15|p>>>17)+461832192*(65535&p)&4294967295)<<13|a>>>19)+3864292196&4294967295,!(t>=d);)p=65535&e.charCodeAt(t++)^(65535&e.charCodeAt(t++))<<8^(65535&e.charCodeAt(t++))<<16,p^=(255&(i=e.charCodeAt(t++)))<<24^(65280&i)>>8;switch(p=0,this.rem){case 3:p^=(65535&e.charCodeAt(t+2))<<16;case 2:p^=(65535&e.charCodeAt(t+1))<<8;case 1:p^=65535&e.charCodeAt(t)}this.h1=a}return this.k1=p,this},p.prototype.result=function(){var e,a;return a=this.h1,(e=this.k1)>0&&(a^=e=13715*(e=(e=11601*e+3432906752*(65535&e)&4294967295)<<15|e>>>17)+461832192*(65535&e)&4294967295),a^=this.len,a=51819*(a^=a>>>16)+2246770688*(65535&a)&4294967295,a=44597*(a^=a>>>13)+3266445312*(65535&a)&4294967295,(a^=a>>>16)>>>0},p.prototype.reset=function(e){return this.h1="number"==typeof e?e:0,this.rem=this.k1=this.len=0,this},a=new p,e.exports=p}()}),wd=bd;bd.strict=Sd,bd.loose=Ed;var gd=Object.prototype.toString,yd={"[object Int8Array]":!0,"[object Int16Array]":!0,"[object Int32Array]":!0,"[object Uint8Array]":!0,"[object Uint8ClampedArray]":!0,"[object Uint16Array]":!0,"[object Uint32Array]":!0,"[object Float32Array]":!0,"[object Float64Array]":!0};function bd(e){return Sd(e)||Ed(e)}function Sd(e){return e instanceof Int8Array||e instanceof Int16Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Uint16Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array}function Ed(e){return yd[gd.call(e)]}var Nd=wd.strict,_d=function(e){if(Nd(e)){var a=Buffer.from(e.buffer);return e.byteLength!==e.buffer.byteLength&&(a=a.slice(e.byteOffset,e.byteOffset+e.byteLength)),a}return Buffer.from(e)},Td=function(e,a,p,t){p instanceof Function&&(t=p,p={});const i=async function(e,a,p={}){let t,i;"string"==typeof p&&(p={encoding:p});const d=dp(Rd(()=>i)),s=N.default.resolve(e);try{await function(e){return new Promise(a=>{Cd[e]||(Cd[e]=[]),Cd[e].push(a),1===Cd[e].length&&a()})}(s);const r=await Vd(_.default.realpath)(e).catch(()=>e);if(i=xd(r),!p.mode||!p.chown){const e=await Vd(_.default.stat)(r).catch(()=>{});e&&(null==p.mode&&(p.mode=e.mode),null==p.chown&&process.getuid&&(p.chown={uid:e.uid,gid:e.gid}))}t=await Vd(_.default.open)(i,"w",p.mode),p.tmpfileCreated&&await p.tmpfileCreated(i),wd(a)&&(a=_d(a)),Buffer.isBuffer(a)?await Vd(_.default.write)(t,a,0,a.length,0):null!=a&&await Vd(_.default.write)(t,String(a),0,String(p.encoding||"utf8")),!1!==p.fsync&&await Vd(_.default.fsync)(t),await Vd(_.default.close)(t),t=null,p.chown&&await Vd(_.default.chown)(i,p.chown.uid,p.chown.gid).catch(e=>{if(!Pd(e))throw e}),p.mode&&await Vd(_.default.chmod)(i,p.mode).catch(e=>{if(!Pd(e))throw e}),await Vd(_.default.rename)(i,r)}finally{t&&await Vd(_.default.close)(t).catch(()=>{}),d(),await Vd(_.default.unlink)(i).catch(()=>{}),Cd[s].shift(),Cd[s].length>0?Cd[s][0]():delete Cd[s]}}(e,a,p);return t&&i.then(t,t),i},Dd=xd,Ad=Rd;const{promisify:Vd}=V.default,Cd={},Od=function(){try{return 0}catch(e){return 0}}();let Id=0;function xd(e){return e+"."+vd(__filename).hash(String(process.pid)).hash(String(Od)).hash(String(++Id)).result()}function Rd(e){return()=>{try{_.default.unlinkSync("function"==typeof e?e():e)}catch(e){}}}function Pd(e){return"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}Td.sync=function(e,a,p){"string"==typeof p?p={encoding:p}:p||(p={});try{e=_.default.realpathSync(e)}catch(e){}const t=xd(e);if(!p.mode||!p.chown)try{const a=_.default.statSync(e);(p=Object.assign({},p)).mode||(p.mode=a.mode),!p.chown&&process.getuid&&(p.chown={uid:a.uid,gid:a.gid})}catch(e){}let i;const d=Rd(t),s=dp(d);let r=!0;try{if(i=_.default.openSync(t,"w",p.mode||438),p.tmpfileCreated&&p.tmpfileCreated(t),wd(a)&&(a=_d(a)),Buffer.isBuffer(a)?_.default.writeSync(i,a,0,a.length,0):null!=a&&_.default.writeSync(i,String(a),0,String(p.encoding||"utf8")),!1!==p.fsync&&_.default.fsyncSync(i),_.default.closeSync(i),i=null,p.chown)try{_.default.chownSync(t,p.chown.uid,p.chown.gid)}catch(e){if(!Pd(e))throw e}if(p.mode)try{_.default.chmodSync(t,p.mode)}catch(e){if(!Pd(e))throw e}_.default.renameSync(t,e),r=!1}finally{if(i)try{_.default.closeSync(i)}catch(e){}s(),r&&d()}},Td._getTmpname=Dd,Td._cleanupOnExit=Ad;var kd=e=>{const a=typeof e;return null!==e&&("object"===a||"function"===a)};const Ld=["__proto__","prototype","constructor"];function jd(e){const a=e.split("."),p=[];for(let e=0;e<a.length;e++){let t=a[e];for(;"\\"===t[t.length-1]&&void 0!==a[e+1];)t=t.slice(0,-1)+".",t+=a[++e];p.push(t)}return p.some(e=>Ld.includes(e))?[]:p}var Bd={get(e,a,p){if(!kd(e)||"string"!=typeof a)return void 0===p?e:p;const t=jd(a);if(0!==t.length){for(let a=0;a<t.length;a++){if(!Object.prototype.propertyIsEnumerable.call(e,t[a]))return p;if(null==(e=e[t[a]])){if(a!==t.length-1)return p;break}}return e}},set(e,a,p){if(!kd(e)||"string"!=typeof a)return e;const t=e,i=jd(a);for(let a=0;a<i.length;a++){const t=i[a];kd(e[t])||(e[t]={}),a===i.length-1&&(e[t]=p),e=e[t]}return t},delete(e,a){if(!kd(e)||"string"!=typeof a)return!1;const p=jd(a);for(let a=0;a<p.length;a++){const t=p[a];if(a===p.length-1)return delete e[t],!0;if(!kd(e=e[t]))return!1}},has(e,a){if(!kd(e)||"string"!=typeof a)return!1;const p=jd(a);if(0===p.length)return!1;for(let a=0;a<p.length;a++){if(!kd(e))return!1;if(!(p[a]in e))return!1;e=e[p[a]]}return!0}};const Fd=fd.config||N.default.join(T.default.tmpdir(),(e=>{if(!Number.isFinite(32))throw new TypeError("Expected a finite number");return O.default.randomBytes(Math.ceil(16)).toString("hex").slice(0,32)})()),$d={mode:448},Md={mode:384};let Ud;const Gd=()=>(Ud||(Ud=new class{constructor(e,a,p={}){const t=p.globalConfigPath?N.default.join(e,"config.json"):N.default.join("configstore",`${e}.json`);this.path=p.configPath||N.default.join(Fd,t),a&&(this.all={...a,...this.all})}get all(){try{return JSON.parse(at.readFileSync(this.path,"utf8"))}catch(e){if("ENOENT"===e.code)return{};if("EACCES"===e.code&&(e.message=`${e.message}\nYou don't have access to this file.\n`),"SyntaxError"===e.name)return Td.sync(this.path,"",Md),{};throw e}}set all(e){try{hd.sync(N.default.dirname(this.path),$d),Td.sync(this.path,JSON.stringify(e,void 0,"\t"),Md)}catch(e){throw"EACCES"===e.code&&(e.message=`${e.message}\nYou don't have access to this file.\n`),e}}get size(){return Object.keys(this.all||{}).length}get(e){return Bd.get(this.all,e)}set(e,a){const p=this.all;if(1===arguments.length)for(const a of Object.keys(e))Bd.set(p,a,e[a]);else Bd.set(p,e,a);this.all=p}has(e){return Bd.has(this.all,e)}delete(e){const a=this.all;Bd.delete(a,e),this.all=a}clear(){this.all={}}}("gatsby",{},{globalConfigPath:!0})),Ud),qd=(e=1)=>new Promise(a=>{process.stderr.moveCursor(0,-e,()=>{process.stderr.write("[2K"),a()})}),zd=e=>{const a=Gd();return a.get("cli.packageManager")||(null!=e&&e.includes("yarn")?(a.set("cli.packageManager","yarn"),"yarn"):(a.set("cli.packageManager","npm"),"npm"))},Hd=(e,a)=>require.resolve(e,a),Yd=e=>null!=e&&"object"!=typeof e&&"function"!=typeof e;class Wd extends ia.Form{async renderChoice(e,a){await this.onChoice(e,a);const{state:p,styles:t}=this;let{cursor:i,initial:d="",name:s,input:r=""}=e;const{muted:n,submitted:l,primary:o,danger:m}=t,u=this.index===a,c=e.validate||(()=>!0),h=await this.choiceSeparator(e,a);let f=e.message;"right"===this.align&&(f=f.padStart(this.longest+1," ")),"left"===this.align&&(f=f.padEnd(this.longest+1," "));const v=this.values[s]=r||d;let w=r?"success":"dark";!0!==await c.call(e,v,this.state)&&(w="danger");const g=(0,t[w])(await this.indicator(e,a))+(e.pad||""),y=this.indent(e),b=()=>[y,g,f+h,r].filter(Boolean).join(" ");return p.submitted?(f=U.unstyle(f),r=l(r),b()):(r=e.format?await e.format.call(this,r,e,a):((e,a={})=>{e.cursorHide();let{input:p="",initial:t="",pos:i,showCursor:d=!0,color:s}=a;const r=s||e.styles.placeholder,n=e.styles.primary.inverse;let l=e=>n(e),o=p,m=l(" ");if(e.blink&&!0===e.blink.off&&(l=e=>e,m=""),d&&0===i&&""===t&&""===p)return l(" ");if(d&&0===i&&(p===t||""===p))return l(t[0])+r(t.slice(1));t=Yd(t)?`${t}`:"",p=Yd(p)?`${p}`:"";const u=t&&t.startsWith(p)&&t!==p;let c=u?l(t[p.length]):m;if(i!==p.length&&!0===d&&(o=p.slice(0,i)+l(p[i])+p.slice(i+1),c=""),!1===d&&(c=""),u){const a=e.styles.unstyle(o+c);return o+c+r(t.slice(a.length))}return o+c})(this,{input:r,initial:d,pos:i,showCursor:u,color:this.styles.muted}),this.isValue(r)||(r=this.styles.muted(this.symbols.ellipsis)),e.result&&(this.values[s]=await e.result.call(this,v,e,a)),u&&(f=o(f)),e.error?r+=(r?" ":"")+m(e.error.trim()):e.hint&&u&&(r+=(r?`\n${" ".repeat(this.longest+6)}`:"")+n(e.hint.trim())),b())}}class Xd extends ia.Input{constructor(e){super(e),this.cursorShow()}async render(){var e;const a=this.state.size,p=await this.prefix(),t=await this.separator(),i=await this.message();let d=[p," ",this.styles.muted(await this.element("hint")),t].filter(Boolean).join("");this.state.prompt=d;const s=await this.header();let r=await this.format();const n=this.styles.unstyle(r);null!=(e=this.input)&&e.length||!n.length?this.cursorShow():(this.cursorHide(),r=this.styles.highlight(n[0])+this.styles.placeholder(n.slice(1)));const l=await this.footer();d+=" "+r,this.clear(a),this.write([s,i,d,await this.error(),l].filter(Boolean).join("\n")),this.restore()}}class Kd extends ia.Select{format(){return!this.state.submitted||this.state.cancelled?"":Array.isArray(this.selected)?this.selected.map(e=>this.styles.primary(this.symbols.middot+" "+e.message)).join("\n"):this.styles.primary(this.symbols.middot+" "+this.selected.message)}async indicator(e){return this.multiple&&"separator"!==e.role&&"___done"!==e.name?this.symbols.radio[e.enabled?"on":"off"]:""}async pointer(e,a){const p=await this.element("pointer",e,a);if(!p)return;const t=this.index===a,i=t?this.styles.primary:e=>e,d=await this.resolve(p[t?"on":"off"]||p,this.state);return t?i(d):" ".repeat(d.length)}async render(){const{submitted:e,size:a}=this.state;let p="";const t=await this.header(),i=await this.prefix(),d=await this.message();!1!==this.options.promptLine&&(p=[i,d].join(" "),this.state.prompt=p);const s=await this.format(),r=await this.error()||await this.hint(),n=await this.renderChoices(),l=await this.footer();s&&(p+="\n"+s),r&&!p.includes(r)&&(p+="\n"+r),e&&!s&&!n.trim()&&this.multiple&&null!=this.emptyError&&(p+=this.styles.danger(this.emptyError)),this.clear(a),this.write([t,p,n,l].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}}class Jd extends Kd{constructor(e){super({...e,multiple:!0})}toggle(e,a){super.toggle(e,a)}async toChoices(e,a){const p=[{role:"separator"},{message:this.styles.bold("Done"),name:"___done"}];return"function"==typeof e&&(e=await e.call(this)),e instanceof Promise&&(e=await e),super.toChoices([...e,...p],a)}submit(){return"___done"===this.focused.name?super.submit():this.space()}next(){return this.index===this.choices.length-1?super.next():this.end()}}const Zd=e=>(e.register("textinput",Xd),e.register("selectinput",Kd),e.register("multiselectinput",Jd),e.register("forminput",Wd),e);var Qd=function(){function e(e,a){for(var p=0;p<a.length;p++){var t=a[p];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(a,p,t){return p&&e(a.prototype,p),t&&e(a,t),a}}(),es=Object.freeze(Object.defineProperties(["",""],{raw:{value:Object.freeze(["",""])}}));function as(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}var ps=function(){function e(){for(var a=this,p=arguments.length,t=Array(p),i=0;i<p;i++)t[i]=arguments[i];return as(this,e),this.tag=function(e){for(var p=arguments.length,t=Array(p>1?p-1:0),i=1;i<p;i++)t[i-1]=arguments[i];return"function"==typeof e?a.interimTag.bind(a,e):"string"==typeof e?a.transformEndResult(e):(e=e.map(a.transformString.bind(a)),a.transformEndResult(e.reduce(a.processSubstitutions.bind(a,t))))},t.length>0&&Array.isArray(t[0])&&(t=t[0]),this.transformers=t.map(function(e){return"function"==typeof e?e():e}),this.tag}return Qd(e,[{key:"interimTag",value:function(e,a){for(var p=arguments.length,t=Array(p>2?p-2:0),i=2;i<p;i++)t[i-2]=arguments[i];return this.tag(es,e.apply(void 0,[a].concat(t)))}},{key:"processSubstitutions",value:function(e,a,p){var t=this.transformSubstitution(e.shift(),a);return"".concat(a,t,p)}},{key:"transformString",value:function(e){return this.transformers.reduce(function(e,a){return a.onString?a.onString(e):e},e)}},{key:"transformSubstitution",value:function(e,a){return this.transformers.reduce(function(e,p){return p.onSubstitution?p.onSubstitution(e,a):e},e)}},{key:"transformEndResult",value:function(e){return this.transformers.reduce(function(e,a){return a.onEndResult?a.onEndResult(e):e},e)}}]),e}(),ts=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{onEndResult:function(a){if(""===e)return a.trim();if("start"===(e=e.toLowerCase())||"left"===e)return a.replace(/^\s*/,"");if("end"===e||"right"===e)return a.replace(/\s*$/,"");throw new Error("Side not supported: "+e)}}};function is(e){if(Array.isArray(e)){for(var a=0,p=Array(e.length);a<e.length;a++)p[a]=e[a];return p}return Array.from(e)}var ds=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"initial";return{onEndResult:function(a){if("initial"===e){var p=a.match(/^[^\S\n]*(?=\S)/gm),t=p&&Math.min.apply(Math,is(p.map(function(e){return e.length})));if(t){var i=new RegExp("^.{"+t+"}","gm");return a.replace(i,"")}return a}if("all"===e)return a.replace(/^[^\S\n]+/gm,"");throw new Error("Unknown type: "+e)}}},ss=function(e,a){return{onEndResult:function(p){if(null==e||null==a)throw new Error("replaceResultTransformer requires at least 2 arguments.");return p.replace(e,a)}}},rs=function(e,a){return{onSubstitution:function(p,t){if(null==e||null==a)throw new Error("replaceSubstitutionTransformer requires at least 2 arguments.");return null==p?p:p.toString().replace(e,a)}}},ns={separator:"",conjunction:"",serial:!1},ls=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ns;return{onSubstitution:function(a,p){if(Array.isArray(a)){var t=a.length,i=e.separator,d=e.conjunction,s=e.serial,r=p.match(/(\n?[^\S\n]+)$/);if(a=a.join(r?i+r[1]:i+" "),d&&t>1){var n=a.lastIndexOf(i);a=a.slice(0,n)+(s?i:"")+" "+d+a.slice(n+1)}}return a}}},os=function(e){return{onSubstitution:function(a,p){if(null==e||"string"!=typeof e)throw new Error("You need to specify a string character to split by.");return"string"==typeof a&&a.includes(e)&&(a=a.split(e)),a}}},ms=function(e){return null!=e&&!Number.isNaN(e)&&"boolean"!=typeof e};new ps(ls({separator:","}),ds,ts),new ps(ls({separator:",",conjunction:"and"}),ds,ts),new ps(ls({separator:",",conjunction:"or"}),ds,ts),new ps(os("\n"),function(){return{onSubstitution:function(e){return Array.isArray(e)?e.filter(ms):ms(e)?e:""}}},ls,ds,ts),new ps(os("\n"),ls,ds,ts,rs(/&/g,"&amp;"),rs(/</g,"&lt;"),rs(/>/g,"&gt;"),rs(/"/g,"&quot;"),rs(/'/g,"&#x27;"),rs(/`/g,"&#x60;")),new ps(ss(/(?:\n(?:\s*))+/g," "),ts),new ps(ss(/(?:\n\s*)/g,""),ts),new ps(ls({separator:","}),ss(/(?:\s+)/g," "),ts),new ps(ls({separator:",",conjunction:"or"}),ss(/(?:\s+)/g," "),ts),new ps(ls({separator:",",conjunction:"and"}),ss(/(?:\s+)/g," "),ts),new ps(ls,ds,ts),new ps(ls,ss(/(?:\s+)/g," "),ts);var us=new ps(ds,ts);new ps(ds("all"),ts);var cs=B(function(e){const a=e.exports;e.exports.default=a;const p="[",t="]",i="",d=";",s="Apple_Terminal"===process.env.TERM_PROGRAM;a.cursorTo=(e,a)=>{if("number"!=typeof e)throw new TypeError("The `x` argument is required");return"number"!=typeof a?p+(e+1)+"G":p+(a+1)+";"+(e+1)+"H"},a.cursorMove=(e,a)=>{if("number"!=typeof e)throw new TypeError("The `x` argument is required");let t="";return e<0?t+=p+-e+"D":e>0&&(t+=p+e+"C"),a<0?t+=p+-a+"A":a>0&&(t+=p+a+"B"),t},a.cursorUp=(e=1)=>p+e+"A",a.cursorDown=(e=1)=>p+e+"B",a.cursorForward=(e=1)=>p+e+"C",a.cursorBackward=(e=1)=>p+e+"D",a.cursorLeft="[G",a.cursorSavePosition=s?"7":"[s",a.cursorRestorePosition=s?"8":"[u",a.cursorGetPosition="[6n",a.cursorNextLine="[E",a.cursorPrevLine="[F",a.cursorHide="[?25l",a.cursorShow="[?25h",a.eraseLines=e=>{let p="";for(let t=0;t<e;t++)p+=a.eraseLine+(t<e-1?a.cursorUp():"");return e&&(p+=a.cursorLeft),p},a.eraseEndLine="[K",a.eraseStartLine="[1K",a.eraseLine="[2K",a.eraseDown="[J",a.eraseUp="[1J",a.eraseScreen="[2J",a.scrollUp="[S",a.scrollDown="[T",a.clearScreen="c",a.clearTerminal="win32"===process.platform?`${a.eraseScreen}[0f`:`${a.eraseScreen}[3J[H`,a.beep=i,a.link=(e,a)=>[t,"8",d,d,a,i,e,t,"8",d,d,i].join(""),a.image=(e,a={})=>{let p=`${t}1337;File=inline=1`;return a.width&&(p+=`;width=${a.width}`),a.height&&(p+=`;height=${a.height}`),!1===a.preserveAspectRatio&&(p+=";preserveAspectRatio=0"),p+":"+e.toString("base64")+i},a.iTerm={setCwd:(e=process.cwd())=>`${t}50;CurrentDir=${e}${i}`,annotation:(e,a={})=>{let p=`${t}1337;`;const d=void 0!==a.x,s=void 0!==a.y;if((d||s)&&(!d||!s||void 0===a.length))throw new Error("`x`, `y` and `length` must be defined when `x` or `y` is defined");return e=e.replace(/\|/g,""),p+=a.isHidden?"AddHiddenAnnotation=":"AddAnnotation=",p+=a.length>0?(d?[e,a.length,a.x,a.y]:[a.length,e]).join("|"):e,p+i}}}),hs=(e,a=process.argv)=>{const p=e.startsWith("-")?"":1===e.length?"-":"--",t=a.indexOf(p+e),i=a.indexOf("--");return-1!==t&&(-1===i||t<i)};const{env:fs}=process;let vs;function ws(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function gs(e,a){if(0===vs)return 0;if(hs("color=16m")||hs("color=full")||hs("color=truecolor"))return 3;if(hs("color=256"))return 2;if(e&&!a&&void 0===vs)return 0;const p=vs||0;if("dumb"===fs.TERM)return p;if("win32"===process.platform){const e=T.default.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in fs)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in fs)||"codeship"===fs.CI_NAME?1:p;if("TEAMCITY_VERSION"in fs)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(fs.TEAMCITY_VERSION)?1:0;if("GITHUB_ACTIONS"in fs)return 1;if("truecolor"===fs.COLORTERM)return 3;if("TERM_PROGRAM"in fs){const e=parseInt((fs.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(fs.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(fs.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(fs.TERM)||"COLORTERM"in fs?1:p}function ys(e){if(/^\d{3,4}$/.test(e)){const a=/(\d{1,2})(\d{2})/.exec(e);return{major:0,minor:parseInt(a[1],10),patch:parseInt(a[2],10)}}const a=(e||"").split(".").map(e=>parseInt(e,10));return{major:a[0],minor:a[1],patch:a[2]}}function bs(e){const{env:a}=process;if("FORCE_HYPERLINK"in a)return!(a.FORCE_HYPERLINK.length>0&&0===parseInt(a.FORCE_HYPERLINK,10));if(hs("no-hyperlink")||hs("no-hyperlinks")||hs("hyperlink=false")||hs("hyperlink=never"))return!1;if(hs("hyperlink=true")||hs("hyperlink=always"))return!0;if(!function(e){return ws(gs(e,e&&e.isTTY))}(e))return!1;if(e&&!e.isTTY)return!1;if("win32"===process.platform)return!1;if("CI"in a)return!1;if("TEAMCITY_VERSION"in a)return!1;if("TERM_PROGRAM"in a){const e=ys(a.TERM_PROGRAM_VERSION);if("iTerm.app"===a.TERM_PROGRAM)return 3===e.major?e.minor>=1:e.major>3}if("VTE_VERSION"in a){if("0.50.0"===a.VTE_VERSION)return!1;const e=ys(a.VTE_VERSION);return e.major>0||e.minor>=50}return!1}hs("no-color")||hs("no-colors")||hs("color=false")||hs("color=never")?vs=0:(hs("color")||hs("colors")||hs("color=true")||hs("color=always"))&&(vs=1),"FORCE_COLOR"in fs&&(vs="true"===fs.FORCE_COLOR?1:"false"===fs.FORCE_COLOR?0:0===fs.FORCE_COLOR.length?1:Math.min(parseInt(fs.FORCE_COLOR,10),3)),ws(gs(!0,I.default.isatty(1))),ws(gs(!0,I.default.isatty(2)));var Ss={supportsHyperlink:bs,stdout:bs(process.stdout),stderr:bs(process.stderr)},Es=B(function(e){const a=(e,a,{target:p="stdout",...t}={})=>Ss[p]?cs.link(e,a):!1===t.fallback?e:"function"==typeof t.fallback?t.fallback(e,a):`${e} (‚Äã${a}‚Äã)`;e.exports=(e,p,t={})=>a(e,p,t),e.exports.stderr=(e,p,t={})=>a(e,p,{target:"stderr",...t}),e.exports.isSupported=Ss.stdout,e.exports.stderr.isSupported=Ss.stderr}),Ns={"gatsby-source-wordpress":{type:"object",keys:{url:{type:"string",flags:{description:"This should be the full url of your GraphQL endpoint set up by WP GraphQL",presence:"required"}}}},"gatsby-source-contentful":{type:"object",externals:[{}],keys:{accessToken:{type:"string",flags:{description:"Contentful delivery api key, when using the Preview API use your Preview API key",presence:"required"}},spaceId:{type:"string",flags:{description:"Contentful spaceId",presence:"required"}},host:{type:"string",flags:{description:"The base host for all the API requests, by default it's 'cdn.contentful.com', if you want to use the Preview API set it to 'preview.contentful.com'. You can use your own host for debugging/testing purposes as long as you respect the same Contentful JSON structure.",default:"cdn.contentful.com"}},environment:{type:"string",flags:{description:"The environment to pull the content from, for more info on environments check out this [Guide](https://www.contentful.com/developers/docs/concepts/multiple-environments/).",default:"master"}},downloadLocal:{type:"boolean",flags:{description:"Downloads and caches ContentfulAsset's to the local filesystem. Allows you to query a ContentfulAsset's localFile field, which is not linked to Contentful's CDN. Useful for reducing data usage.\nYou can pass in any other options available in the [contentful.js SDK](https://github.com/contentful/contentful.js#configuration).",default:!1}},localeFilter:{type:"function",flags:{description:"Possibility to limit how many locales/nodes are created in GraphQL. This can limit the memory usage by reducing the amount of nodes created. Useful if you have a large space in contentful and only want to get the data from one selected locale.\nFor example, to filter locales on only germany `localeFilter: locale => locale.code === 'de-DE'`\n\nList of locales and their codes can be found in Contentful app -> Settings -> Locales"}},forceFullSync:{type:"boolean",flags:{description:"Prevents the use of sync tokens when accessing the Contentful API.",default:!1}},pageLimit:{type:"number",flags:{description:"Number of entries to retrieve from Contentful at a time. Due to some technical limitations, the response payload should not be greater than 7MB when pulling content from Contentful. If you encounter this issue you can set this param to a lower number than 100, e.g 50.",default:100},rules:[{name:"integer"}]},assetDownloadWorkers:{type:"number",flags:{description:"Number of workers to use when downloading contentful assets. Due to technical limitations, opening too many concurrent requests can cause stalled downloads. If you encounter this issue you can set this param to a lower number than 50, e.g 25.",default:50},rules:[{name:"integer"}]},proxy:{type:"object",flags:{description:"Axios proxy configuration. See the [axios request config documentation](https://github.com/mzabriskie/axios#request-config) for further information about the supported values."},keys:{host:{type:"string",flags:{presence:"required"}},port:{type:"number",flags:{presence:"required"}},auth:{type:"object",keys:{username:{type:"string"},password:{type:"string"}}}}},useNameForId:{type:"boolean",flags:{description:"Use the content's `name` when generating the GraphQL schema e.g. a Content Type called `[Component] Navigation bar` will be named `contentfulComponentNavigationBar`.\n    When set to `false`, the content's internal ID will be used instead e.g. a Content Type with the ID `navigationBar` will be called `contentfulNavigationBar`.\n\n    Using the ID is a much more stable property to work with as it will change less often. However, in some scenarios, Content Types' IDs will be auto-generated (e.g. when creating a new Content Type without specifying an ID) which means the name in the GraphQL schema will be something like `contentfulC6XwpTaSiiI2Ak2Ww0oi6qa`. This won't change and will still function perfectly as a valid field name but it is obviously pretty ugly to work with.\n\n    If you are confident your Content Types will have natural-language IDs (e.g. `blogPost`), then you should set this option to `false`. If you are unable to ensure this, then you should leave this option set to `true` (the default).",default:!0}},plugins:{type:"array"},richText:{type:"object",flags:{default:{}},keys:{resolveFieldLocales:{type:"boolean",flags:{description:"If you want to resolve the locales in fields of assets and entries that are referenced by rich text (e.g., via embedded entries or entry hyperlinks), set this to `true`. Otherwise, fields of referenced assets or entries will be objects keyed by locale.",default:!1}}}}}},"gatsby-source-sanity":{type:"object",keys:{projectId:{type:"string",flags:{description:"Your Sanity project's ID",presence:"required"}},dataset:{type:"string",flags:{description:"The dataset to fetch from",presence:"required"}}}},"gatsby-source-shopify":{type:"object",keys:{shopName:{type:"string",flags:{description:"The domain name of your Shopify shop",presence:"required"}},accessToken:{type:"string",flags:{description:"An API access token to your Shopify shop",presence:"required"}}}},"gatsby-source-datocms":{type:"object",keys:{apiToken:{type:"string",flags:{description:"Your read-only API token under the Settings > API tokens section of your administrative area in DatoCMS",presence:"required"}}}},"gatsby-source-agility":{type:"object",keys:{guid:{type:"string",flags:{description:"your Agility Content Fetch API Guid",presence:"required"}}}},"gatsby-plugin-postcss":{},"gatsby-plugin-styled-components":{},"gatsby-plugin-emotion":{},"gatsby-plugin-sass":{},"gatsby-plugin-theme-ui":{},"gatsby-plugin-google-analytics":{type:"object",keys:{trackingId:{type:"string",flags:{description:"The property ID; the tracking code won't be generated without it",presence:"required"}},head:{type:"boolean",flags:{default:!1,description:"Defines where to place the tracking script - `true` in the head and `false` in the body"}},anonymize:{type:"boolean",flags:{default:!1}},respectDNT:{type:"boolean",flags:{default:!1}},exclude:{type:"array",flags:{default:[],description:"Avoids sending pageview hits from custom paths"},items:[{type:"string"}]},pageTransitionDelay:{type:"number",flags:{default:0,description:"Delays sending pageview hits on route update (in milliseconds)"}},optimizeId:{type:"string",flags:{description:"Enables Google Optimize using your container Id"}},experimentId:{type:"string",flags:{description:"Enables Google Optimize Experiment ID"}},variationId:{type:"string",flags:{description:"Set Variation ID. 0 for original 1,2,3...."}},defer:{type:"boolean",flags:{description:"Defers execution of google analytics script after page load"}},sampleRate:{type:"number"},siteSpeedSampleRate:{type:"number"},cookieDomain:{type:"string"}}},"gatsby-plugin-sitemap":{},"gatsby-plugin-mdx":{},"gatsby-plugin-offline":{},"gatsby-plugin-manifest":{type:"object",keys:{name:{type:"string"},short_name:{type:"string"},description:{type:"string"},lang:{type:"string"},localize:{type:"array",items:[{type:"object",keys:{start_url:{type:"string"},name:{type:"string"},short_name:{type:"string"},description:{type:"string"},lang:{type:"string"}}}]},start_url:{type:"string"},background_color:{type:"string"},theme_color:{type:"string"},display:{type:"string"},legacy:{type:"boolean"},include_favicon:{type:"boolean"},icon:{type:"string"},theme_color_in_head:{type:"boolean"},crossOrigin:{type:"string",flags:{only:!0},allow:["use-credentials","anonymous"]},cache_busting_mode:{type:"string",flags:{only:!0},allow:["query","name","none"]},icons:{type:"array",items:[{type:"object",keys:{src:{type:"string"},sizes:{type:"string"},type:{type:"string"},purpose:{type:"string"}}}]},icon_options:{type:"object",keys:{purpose:{type:"string"}}}}}};const _s=["string","boolean","number"];function Ts(e){const a=[da,sa];for(const p of a)if(e in p)return p[e].message;return e}function Ds(e){return U.blueBright(Es("the plugin docs",`https://www.gatsbyjs.com/plugins/${e}/`,{fallback:(e,a)=>a}))}const As=([e,a])=>{var p;return"required"===(null==a||null==(p=a.flags)?void 0:p.presence)},Vs=([e,a])=>{var p,t,i,d;return{name:e,initial:(null==(p=a.flags)?void 0:p.default)&&_s.includes(typeof(null==(t=a.flags)?void 0:t.default))?null==(i=a.flags)?void 0:i.default.toString():void 0,message:e,hint:null==(d=a.flags)?void 0:d.description}};function Cs(e,a){let p=0;for(let t of a.patterns){let a=e.match(t);if(a)for(let e of a)p+=e.length}return e.length-p}const Os=process.stdout.columns;var Is={},xs=Is;function Rs(e){return e<0?-1:1}function Ps(e,a){a.unsigned||--e;const p=a.unsigned?0:-Math.pow(2,e),t=Math.pow(2,e)-1,i=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),d=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,s){s||(s={});let r=+e;if(s.enforceRange){if(!Number.isFinite(r))throw new TypeError("Argument is not a finite number");if(r=Rs(r)*Math.floor(Math.abs(r)),r<p||r>t)throw new TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&s.clamp)return r=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(r),r<p&&(r=p),r>t&&(r=t),r;if(!Number.isFinite(r)||0===r)return 0;if(r=Rs(r)*Math.floor(Math.abs(r)),r%=i,!a.unsigned&&r>=d)return r-i;if(a.unsigned)if(r<0)r+=i;else if(-0===r)return 0;return r}}Is.void=function(){},Is.boolean=function(e){return!!e},Is.byte=Ps(8,{unsigned:!1}),Is.octet=Ps(8,{unsigned:!0}),Is.short=Ps(16,{unsigned:!1}),Is["unsigned short"]=Ps(16,{unsigned:!0}),Is.long=Ps(32,{unsigned:!1}),Is["unsigned long"]=Ps(32,{unsigned:!0}),Is["long long"]=Ps(32,{unsigned:!1,moduloBitLength:64}),Is["unsigned long long"]=Ps(32,{unsigned:!0,moduloBitLength:64}),Is.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},Is["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},Is.float=Is.double,Is["unrestricted float"]=Is["unrestricted double"],Is.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},Is.ByteString=function(e,a){const p=String(e);let t;for(let e=0;void 0!==(t=p.codePointAt(e));++e)if(t>255)throw new TypeError("Argument is not a valid bytestring");return p},Is.USVString=function(e){const a=String(e),p=a.length,t=[];for(let e=0;e<p;++e){const i=a.charCodeAt(e);if(i<55296||i>57343)t.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)t.push(String.fromCodePoint(65533));else if(e===p-1)t.push(String.fromCodePoint(65533));else{const p=a.charCodeAt(e+1);56320<=p&&p<=57343?(t.push(String.fromCodePoint(65536+1024*(1023&i)+(1023&p))),++e):t.push(String.fromCodePoint(65533))}}return t.join("")},Is.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},Is.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e};var ks=B(function(e){e.exports.mixin=function(e,a){const p=Object.getOwnPropertyNames(a);for(let t=0;t<p.length;++t)Object.defineProperty(e,p[t],Object.getOwnPropertyDescriptor(a,p[t]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}}),Ls=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]],js={TRANSITIONAL:0,NONTRANSITIONAL:1};function Bs(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function Fs(e){for(var a=0,p=Ls.length-1;a<=p;){var t=Math.floor((a+p)/2),i=Ls[t];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?p=t-1:a=t+1}return null}var $s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Ms(e){return e.replace($s,"_").length}var Us=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function Gs(e,a){"xn--"===e.substr(0,4)&&(e=P.default.toUnicode(e));var p=!1;(Bs(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(Us))&&(p=!0);for(var t=Ms(e),i=0;i<t;++i){var d=Fs(e.codePointAt(i));if(qs===js.TRANSITIONAL&&"valid"!==d[1]||qs===js.NONTRANSITIONAL&&"valid"!==d[1]&&"deviation"!==d[1]){p=!0;break}}return{label:e,error:p}}function qs(e,a,p){var t=function(e,a,p){for(var t=!1,i="",d=Ms(e),s=0;s<d;++s){var r=e.codePointAt(s),n=Fs(r);switch(n[1]){case"disallowed":t=!0,i+=String.fromCodePoint(r);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,n[2]);break;case"deviation":i+=p===js.TRANSITIONAL?String.fromCodePoint.apply(String,n[2]):String.fromCodePoint(r);break;case"valid":i+=String.fromCodePoint(r);break;case"disallowed_STD3_mapped":a?(t=!0,i+=String.fromCodePoint(r)):i+=String.fromCodePoint.apply(String,n[2]);break;case"disallowed_STD3_valid":a&&(t=!0),i+=String.fromCodePoint(r)}}return{string:i,error:t}}(e,a,p);t.string=Bs(t.string);for(var i=t.string.split("."),d=0;d<i.length;++d)try{var s=Gs(i[d]);i[d]=s.label,t.error=t.error||s.error}catch(e){t.error=!0}return{string:i.join("."),error:t.error}}var zs=js,Hs=B(function(e){const a={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},p=Symbol("failure");function t(e){return P.default.ucs2.decode(e).length}function i(e,a){const p=e[a];return isNaN(p)?void 0:String.fromCodePoint(p)}function d(e){return e>=48&&e<=57}function s(e){return e>=65&&e<=90||e>=97&&e<=122}function r(e){return d(e)||e>=65&&e<=70||e>=97&&e<=102}function n(e){return"."===e||"%2e"===e.toLowerCase()}function l(e){return 2===e.length&&s(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function o(e){return void 0!==a[e]}function m(e){return o(e.scheme)}function u(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function c(e){return e<=31||e>126}const h=new Set([32,34,35,60,62,63,96,123,125]);function f(e){return c(e)||h.has(e)}const v=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return f(e)||v.has(e)}function g(e,a){const p=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let p="";for(let e=0;e<a.length;++e)p+=u(a[e]);return p}(p):p}function y(e){let a=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e?0:(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?p:parseInt(e,a)}function b(e,a){if("["===e[0])return"]"!==e[e.length-1]?p:function(e){const a=[0,0,0,0,0,0,0,0];let t=0,s=null,n=0;if(58===(e=P.default.ucs2.decode(e))[n]){if(58!==e[n+1])return p;n+=2,++t,s=t}for(;n<e.length;){if(8===t)return p;if(58===e[n]){if(null!==s)return p;++n,++t,s=t;continue}let l=0,o=0;for(;o<4&&r(e[n]);)l=16*l+parseInt(i(e,n),16),++n,++o;if(46===e[n]){if(0===o)return p;if(n-=o,t>6)return p;let s=0;for(;void 0!==e[n];){let r=null;if(s>0){if(!(46===e[n]&&s<4))return p;++n}if(!d(e[n]))return p;for(;d(e[n]);){const a=parseInt(i(e,n));if(null===r)r=a;else{if(0===r)return p;r=10*r+a}if(r>255)return p;++n}a[t]=256*a[t]+r,++s,2!==s&&4!==s||++t}if(4!==s)return p;break}if(58===e[n]){if(++n,void 0===e[n])return p}else if(void 0!==e[n])return p;a[t]=l,++t}if(null!==s){let e=t-s;for(t=7;0!==t&&e>0;){const p=a[s+e-1];a[s+e-1]=a[t],a[t]=p,--t,--e}}else if(null===s&&8!==t)return p;return a}(e.substring(1,e.length-1));if(!a)return function(e){if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)}(e))return p;let a="";const t=P.default.ucs2.decode(e);for(let e=0;e<t.length;++e)a+=g(t[e],c);return a}(e);const t=function(e){const a=new Buffer(e),p=[];for(let e=0;e<a.length;++e)37!==a[e]?p.push(a[e]):37===a[e]&&r(a[e+1])&&r(a[e+2])?(p.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):p.push(a[e]);return new Buffer(p).toString()}(e),s=(l=(l=(n=qs(t,!1,zs.NONTRANSITIONAL)).string.split(".")).map(function(e){try{return P.default.toASCII(e)}catch(a){return n.error=!0,e}}),n.error?null:l.join("."));var n,l;if(null===s)return p;if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)}(s))return p;const o=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const t=[];for(const i of a){if(""===i)return e;const a=y(i);if(a===p)return e;t.push(a)}for(let e=0;e<t.length-1;++e)if(t[e]>255)return p;if(t[t.length-1]>=Math.pow(256,5-t.length))return p;let i=t.pop(),d=0;for(const e of t)i+=e*Math.pow(256,3-d),++d;return i}(s);return"number"==typeof o||o===p?o:s}function S(e){return"number"==typeof e?function(e){let a="",p=e;for(let e=1;e<=4;++e)a=String(p%256)+a,4!==e&&(a="."+a),p=Math.floor(p/256);return a}(e):e instanceof Array?"["+function(e){let a="";const p=function(e){let a=null,p=1,t=null,i=0;for(let d=0;d<e.length;++d)0!==e[d]?(i>p&&(a=t,p=i),t=null,i=0):(null===t&&(t=d),++i);return i>p&&(a=t,p=i),{idx:a,len:p}}(e).idx;let t=!1;for(let i=0;i<=7;++i)t&&0===e[i]||(t&&(t=!1),p!==i?(a+=e[i].toString(16),7!==i&&(a+=":")):(a+=0===i?"::":":",t=!0));return a}(e)+"]":e}function E(e){const a=e.path;0!==a.length&&("file"===e.scheme&&1===a.length&&function(e){return/^[A-Za-z]:$/.test(e)}(a[0])||a.pop())}function N(e){return""!==e.username||""!==e.password}function _(e,a,t,i,d){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=t||"utf-8",this.stateOverride=d,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const s=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(s!==this.input&&(this.parseError=!0),this.input=s,this.state=d||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=P.default.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),t=this["parse "+this.state](e,a);if(!t)break;if(t===p){this.failure=!0;break}}}_.prototype["parse scheme start"]=function(e,a){if(s(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,p;this.state="no scheme",--this.pointer}return!0},_.prototype["parse scheme"]=function(e,a){if(function(e){return s(e)||d(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(m(this.url)&&!o(this.buffer))return!1;if(!m(this.url)&&o(this.buffer))return!1;if((N(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):m(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":m(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,p;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},_.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?p:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},_.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},_.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},_.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):m(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},_.prototype["parse relative slash"]=function(e){return!m(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},_.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},_.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},_.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=t(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const p=g(e,w);this.passwordTokenSeenFlag?this.url.password+=p:this.url.username+=p}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,p;this.pointer-=t(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},_.prototype["parse hostname"]=_.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(--this.pointer,m(this.url)&&""===this.buffer)return this.parseError=!0,p;if(this.stateOverride&&""===this.buffer&&(N(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=b(this.buffer,m(this.url));if(e===p)return p;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,p;const e=b(this.buffer,m(this.url));if(e===p)return p;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},_.prototype["parse port"]=function(e,t){if(d(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e||this.stateOverride))return this.parseError=!0,p;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,p;this.url.port=e===a[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};const T=new Set([47,92,63,35]);_.prototype["parse file"]=function(e){var a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=this.input[this.pointer+1],!s(e)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!T.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),E(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},_.prototype["parse file slash"]=function(e){return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(function(e){return 2===e.length&&s(e.codePointAt(0))&&":"===e[1]}(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},_.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&l(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=b(this.buffer,m(this.url));if(e===p)return p;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},_.prototype["parse path start"]=function(e){return m(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},_.prototype["parse path"]=function(e){if(isNaN(e)||47===e||m(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(m(this.url)&&92===e&&(this.parseError=!0),".."!==(a=(a=this.buffer).toLowerCase())&&"%2e."!==a&&".%2e"!==a&&"%2e%2e"!==a?!n(this.buffer)||47===e||m(this.url)&&92===e?n(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&l(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""):(E(this.url),47===e||m(this.url)&&92===e||this.url.path.push("")),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=g(e,f);var a;return!0},_.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+g(e,c))),!0},_.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){m(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)this.url.query+=a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?u(a[e]):String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},_.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||r(this.input[this.pointer+1])&&r(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=g(e,c))),!0},e.exports.serializeURL=function(e,a){let p=e.scheme+":";if(null!==e.host?(p+="//",""===e.username&&""===e.password||(p+=e.username,""!==e.password&&(p+=":"+e.password),p+="@"),p+=S(e.host),null!==e.port&&(p+=":"+e.port)):null===e.host&&"file"===e.scheme&&(p+="//"),e.cannotBeABaseURL)p+=e.path[0];else for(const a of e.path)p+="/"+a;return null!==e.query&&(p+="?"+e.query),a||null===e.fragment||(p+="#"+e.fragment),p},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=S(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const p=new _(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return p.failure?"failure":p.url},e.exports.setTheUsername=function(e,a){e.username="";const p=P.default.ucs2.decode(a);for(let a=0;a<p.length;++a)e.username+=g(p[a],w)},e.exports.setThePassword=function(e,a){e.password="";const p=P.default.ucs2.decode(a);for(let a=0;a<p.length;++a)e.password+=g(p[a],w)},e.exports.serializeHost=S,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,p){return void 0===p&&(p={}),e.exports.basicURLParse(a,{baseURL:p.baseURL,encodingOverride:p.encodingOverride})}}),Ys=class{constructor(e){const a=e[0],p=e[1];let t=null;if(void 0!==p&&(t=Hs.basicURLParse(p),"failure"===t))throw new TypeError("Invalid base URL");const i=Hs.basicURLParse(a,{baseURL:t});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return Hs.serializeURL(this._url)}set href(e){const a=Hs.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return Hs.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){Hs.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||Hs.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||Hs.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?Hs.serializeHost(e.host):Hs.serializeHost(e.host)+":"+Hs.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||Hs.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":Hs.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||Hs.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":Hs.serializeInteger(this._url.port)}set port(e){Hs.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:Hs.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],Hs.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const p="?"===e[0]?e.substring(1):e;a.query="",Hs.basicURLParse(p,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",Hs.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},Ws=B(function(e){const a=ks.implSymbol;function p(t){if(!this||this[a]||!(this instanceof p))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const i=[];for(let e=0;e<arguments.length&&e<2;++e)i[e]=arguments[e];i[0]=xs.USVString(i[0]),void 0!==i[1]&&(i[1]=xs.USVString(i[1])),e.exports.setup(this,i)}p.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const p=[];for(let e=0;e<arguments.length&&e<0;++e)p[e]=arguments[e];return this[a].toJSON.apply(this[a],p)},Object.defineProperty(p.prototype,"href",{get(){return this[a].href},set(e){e=xs.USVString(e),this[a].href=e},enumerable:!0,configurable:!0}),p.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(p.prototype,"origin",{get(){return this[a].origin},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"protocol",{get(){return this[a].protocol},set(e){e=xs.USVString(e),this[a].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"username",{get(){return this[a].username},set(e){e=xs.USVString(e),this[a].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"password",{get(){return this[a].password},set(e){e=xs.USVString(e),this[a].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"host",{get(){return this[a].host},set(e){e=xs.USVString(e),this[a].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hostname",{get(){return this[a].hostname},set(e){e=xs.USVString(e),this[a].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"port",{get(){return this[a].port},set(e){e=xs.USVString(e),this[a].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"pathname",{get(){return this[a].pathname},set(e){e=xs.USVString(e),this[a].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"search",{get(){return this[a].search},set(e){e=xs.USVString(e),this[a].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hash",{get(){return this[a].hash},set(e){e=xs.USVString(e),this[a].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[a]instanceof Ys,create(e,a){let t=Object.create(p.prototype);return this.setup(t,e,a),t},setup(e,p,t){t||(t={}),t.wrapper=e,e[a]=new Ys(p,t),e[a][ks.wrapperSymbol]=e},interface:p,expose:{Window:{URL:p},Worker:{URL:p}}}}),Xs={URL:Ws.interface,serializeURL:Hs.serializeURL,serializeURLOrigin:Hs.serializeURLOrigin,basicURLParse:Hs.basicURLParse,setTheUsername:Hs.setTheUsername,setThePassword:Hs.setThePassword,serializeHost:Hs.serializeHost,serializeInteger:Hs.serializeInteger,parseURL:Hs.parseURL};const Ks=A.default.Readable,Js=Symbol("buffer"),Zs=Symbol("type");class Qs{constructor(){this[Zs]="";const e=arguments[0],a=arguments[1],p=[];if(e){const a=e,t=Number(a.length);for(let e=0;e<t;e++){const t=a[e];let i;i=t instanceof Buffer?t:ArrayBuffer.isView(t)?Buffer.from(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?Buffer.from(t):t instanceof Qs?t[Js]:Buffer.from("string"==typeof t?t:String(t)),p.push(i)}}this[Js]=Buffer.concat(p);let t=a&&void 0!==a.type&&String(a.type).toLowerCase();t&&!/[^\u0020-\u007E]/.test(t)&&(this[Zs]=t)}get size(){return this[Js].length}get type(){return this[Zs]}text(){return Promise.resolve(this[Js].toString())}arrayBuffer(){const e=this[Js],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new Ks;return e._read=function(){},e.push(this[Js]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,a=arguments[0],p=arguments[1];let t,i;t=void 0===a?0:a<0?Math.max(e+a,0):Math.min(a,e),i=void 0===p?e:p<0?Math.max(e+p,0):Math.min(p,e);const d=Math.max(i-t,0),s=this[Js].slice(t,t+d),r=new Qs([],{type:arguments[2]});return r[Js]=s,r}}function er(e,a,p){Error.call(this,e),this.message=e,this.type=a,p&&(this.code=this.errno=p.code),Error.captureStackTrace(this,this.constructor)}let ar;Object.defineProperties(Qs.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Qs.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),(er.prototype=Object.create(Error.prototype)).constructor=er,er.prototype.name="FetchError";try{ar=require("encoding").convert}catch(e){}const pr=Symbol("Body internals"),tr=A.default.PassThrough;function ir(e){var a=this,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=p.size;let i=void 0===t?0:t;var d=p.timeout;let s=void 0===d?0:d;null==e?e=null:sr(e)?e=Buffer.from(e.toString()):rr(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof A.default||(e=Buffer.from(String(e)))),this[pr]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=s,e instanceof A.default&&e.on("error",function(e){const p="AbortError"===e.name?e:new er(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[pr].error=p})}function dr(){var e=this;if(this[pr].disturbed)return ir.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[pr].disturbed=!0,this[pr].error)return ir.Promise.reject(this[pr].error);let a=this.body;if(null===a)return ir.Promise.resolve(Buffer.alloc(0));if(rr(a)&&(a=a.stream()),Buffer.isBuffer(a))return ir.Promise.resolve(a);if(!(a instanceof A.default))return ir.Promise.resolve(Buffer.alloc(0));let p=[],t=0,i=!1;return new ir.Promise(function(d,s){let r;e.timeout&&(r=setTimeout(function(){i=!0,s(new er(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(a){"AbortError"===a.name?(i=!0,s(a)):s(new er(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}),a.on("data",function(a){if(!i&&null!==a){if(e.size&&t+a.length>e.size)return i=!0,void s(new er(`content size at ${e.url} over limit: ${e.size}`,"max-size"));t+=a.length,p.push(a)}}),a.on("end",function(){if(!i){clearTimeout(r);try{d(Buffer.concat(p,t))}catch(a){s(new er(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}})})}function sr(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function rr(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function nr(e){let a,p,t=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return t instanceof A.default&&"function"!=typeof t.getBoundary&&(a=new tr,p=new tr,t.pipe(a),t.pipe(p),e[pr].body=a,t=p),t}function lr(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":sr(e)?"application/x-www-form-urlencoded;charset=UTF-8":rr(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof A.default?null:"text/plain;charset=UTF-8"}function or(e){const a=e.body;return null===a?0:rr(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}ir.prototype={get body(){return this[pr].body},get bodyUsed(){return this[pr].disturbed},arrayBuffer(){return dr.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return dr.call(this).then(function(a){return Object.assign(new Qs([],{type:e.toLowerCase()}),{[Js]:a})})},json(){var e=this;return dr.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(a){return ir.Promise.reject(new er(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}})},text(){return dr.call(this).then(function(e){return e.toString()})},buffer(){return dr.call(this)},textConverted(){var e=this;return dr.call(this).then(function(a){return function(e,a){if("function"!=typeof ar)throw new Error("The package `encoding` must be installed to use the textConverted() function");const p=a.get("content-type");let t,i,d="utf-8";return p&&(t=/charset=([^;]*)/i.exec(p)),i=e.slice(0,1024).toString(),!t&&i&&(t=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!t&&i&&(t=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),t||(t=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),t&&t.pop()),t&&(t=/charset=(.*)/i.exec(t.pop()))),!t&&i&&(t=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),t&&(d=t.pop(),"gb2312"!==d&&"gbk"!==d||(d="gb18030")),ar(e,"UTF-8",d).toString()}(a,e.headers)})}},Object.defineProperties(ir.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),ir.mixIn=function(e){for(const a of Object.getOwnPropertyNames(ir.prototype))if(!(a in e)){const p=Object.getOwnPropertyDescriptor(ir.prototype,a);Object.defineProperty(e,a,p)}},ir.Promise=global.Promise;const mr=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,ur=/[^\t\x20-\x7e\x80-\xff]/;function cr(e){if(mr.test(e=`${e}`)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function hr(e){if(ur.test(e=`${e}`))throw new TypeError(`${e} is not a legal HTTP header value`)}function fr(e,a){a=a.toLowerCase();for(const p in e)if(p.toLowerCase()===a)return p}const vr=Symbol("map");class wr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[vr]=Object.create(null),e instanceof wr){const a=e.raw(),p=Object.keys(a);for(const e of p)for(const p of a[e])this.append(e,p)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw new TypeError("Header pairs must be iterable");const p=[];for(const a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw new TypeError("Each header pair must be iterable");p.push(Array.from(a))}for(const e of p){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const a of Object.keys(e))this.append(a,e[a])}}}get(e){cr(e=`${e}`);const a=fr(this[vr],e);return void 0===a?null:this[vr][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,p=gr(this),t=0;for(;t<p.length;){var i=p[t];e.call(a,i[1],i[0],this),p=gr(this),t++}}set(e,a){a=`${a}`,cr(e=`${e}`),hr(a);const p=fr(this[vr],e);this[vr][void 0!==p?p:e]=[a]}append(e,a){a=`${a}`,cr(e=`${e}`),hr(a);const p=fr(this[vr],e);void 0!==p?this[vr][p].push(a):this[vr][e]=[a]}has(e){return cr(e=`${e}`),void 0!==fr(this[vr],e)}delete(e){cr(e=`${e}`);const a=fr(this[vr],e);void 0!==a&&delete this[vr][a]}raw(){return this[vr]}keys(){return br(this,"key")}values(){return br(this,"value")}[Symbol.iterator](){return br(this,"key+value")}}function gr(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const p=Object.keys(e[vr]).sort();return p.map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[vr][a].join(", ")}:function(a){return[a.toLowerCase(),e[vr][a].join(", ")]})}wr.prototype.entries=wr.prototype[Symbol.iterator],Object.defineProperty(wr.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(wr.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const yr=Symbol("internal");function br(e,a){const p=Object.create(Sr);return p[yr]={target:e,kind:a,index:0},p}const Sr=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==Sr)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[yr];const a=e.index,p=gr(e.target,e.kind);return a>=p.length?{value:void 0,done:!0}:(this[yr].index=a+1,{value:p[a],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function Er(e){const a=Object.assign({__proto__:null},e[vr]),p=fr(e[vr],"Host");return void 0!==p&&(a[p]=a[p][0]),a}Object.defineProperty(Sr,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Nr=Symbol("Response internals"),_r=x.default.STATUS_CODES;class Tr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ir.call(this,e,a);const p=a.status||200,t=new wr(a.headers);if(null!=e&&!t.has("Content-Type")){const a=lr(e);a&&t.append("Content-Type",a)}this[Nr]={url:a.url,status:p,statusText:a.statusText||_r[p],headers:t,counter:a.counter}}get url(){return this[Nr].url||""}get status(){return this[Nr].status}get ok(){return this[Nr].status>=200&&this[Nr].status<300}get redirected(){return this[Nr].counter>0}get statusText(){return this[Nr].statusText}get headers(){return this[Nr].headers}clone(){return new Tr(nr(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}ir.mixIn(Tr.prototype),Object.defineProperties(Tr.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Tr.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const Dr=Symbol("Request internals"),Ar=R.default.URL||Xs.URL,Vr=R.default.parse,Cr=R.default.format;function Or(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new Ar(e).toString()),Vr(e)}const Ir="destroy"in A.default.Readable.prototype;function xr(e){return"object"==typeof e&&"object"==typeof e[Dr]}class Rr{constructor(e){let a,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};xr(e)?a=Or(e.url):(a=Or(e&&e.href?e.href:`${e}`),e={});let t=p.method||e.method||"GET";if(t=t.toUpperCase(),(null!=p.body||xr(e)&&null!==e.body)&&("GET"===t||"HEAD"===t))throw new TypeError("Request with GET/HEAD method cannot have body");let i=null!=p.body?p.body:xr(e)&&null!==e.body?nr(e):null;ir.call(this,i,{timeout:p.timeout||e.timeout||0,size:p.size||e.size||0});const d=new wr(p.headers||e.headers||{});if(null!=i&&!d.has("Content-Type")){const e=lr(i);e&&d.append("Content-Type",e)}let s=xr(e)?e.signal:null;if("signal"in p&&(s=p.signal),null!=s&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(s))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[Dr]={method:t,redirect:p.redirect||e.redirect||"follow",headers:d,parsedURL:a,signal:s},this.follow=void 0!==p.follow?p.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==p.compress?p.compress:void 0===e.compress||e.compress,this.counter=p.counter||e.counter||0,this.agent=p.agent||e.agent}get method(){return this[Dr].method}get url(){return Cr(this[Dr].parsedURL)}get headers(){return this[Dr].headers}get redirect(){return this[Dr].redirect}get signal(){return this[Dr].signal}clone(){return new Rr(this)}}function Pr(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}ir.mixIn(Rr.prototype),Object.defineProperty(Rr.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Rr.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),(Pr.prototype=Object.create(Error.prototype)).constructor=Pr,Pr.prototype.name="AbortError";const kr=R.default.URL||Xs.URL,Lr=A.default.PassThrough;function jr(e,a){if(!jr.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return ir.Promise=jr.Promise,new jr.Promise(function(p,t){const i=new Rr(e,a),d=function(e){const a=e[Dr].parsedURL,p=new wr(e[Dr].headers);if(p.has("Accept")||p.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof A.default.Readable&&!Ir)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let t=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(t="0"),null!=e.body){const a=or(e);"number"==typeof a&&(t=String(a))}t&&p.set("Content-Length",t),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(a)),p.has("Connection")||i||p.set("Connection","close"),Object.assign({},a,{method:e.method,headers:Er(p),agent:i})}(i),s=("https:"===d.protocol?k.default:x.default).request,r=i.signal;let n=null;const l=function(){let e=new Pr("The user aborted a request.");t(e),i.body&&i.body instanceof A.default.Readable&&i.body.destroy(e),n&&n.body&&n.body.emit("error",e)};if(r&&r.aborted)return void l();const o=function(){l(),c()},m=s(d);let u;function c(){m.abort(),r&&r.removeEventListener("abort",o),clearTimeout(u)}r&&r.addEventListener("abort",o),i.timeout&&m.once("socket",function(e){u=setTimeout(function(){t(new er(`network timeout at: ${i.url}`,"request-timeout")),c()},i.timeout)}),m.on("error",function(e){t(new er(`request to ${i.url} failed, reason: ${e.message}`,"system",e)),c()}),m.on("response",function(e){clearTimeout(u);const a=function(e){const a=new wr;for(const p of Object.keys(e))if(!mr.test(p))if(Array.isArray(e[p]))for(const t of e[p])ur.test(t)||(void 0===a[vr][p]?a[vr][p]=[t]:a[vr][p].push(t));else ur.test(e[p])||(a[vr][p]=[e[p]]);return a}(e.headers);if(jr.isRedirect(e.statusCode)){const d=a.get("Location");let s=null;try{s=null===d?null:new kr(d,i.url).toString()}catch(e){if("manual"!==i.redirect)return t(new er(`uri requested responds with an invalid redirect URL: ${d}`,"invalid-redirect")),void c()}switch(i.redirect){case"error":return t(new er(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect")),void c();case"manual":if(null!==s)try{a.set("Location",s)}catch(e){t(e)}break;case"follow":if(null===s)break;if(i.counter>=i.follow)return t(new er(`maximum redirect reached at: ${i.url}`,"max-redirect")),void c();const d={headers:new wr(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!function(e,a){const p=new kr(a).hostname,t=new kr(e).hostname;return p===t||"."===p[p.length-t.length-1]&&p.endsWith(t)}(i.url,s))for(const e of["authorization","www-authenticate","cookie","cookie2"])d.headers.delete(e);return 303!==e.statusCode&&i.body&&null===or(i)?(t(new er("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void c()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==i.method)||(d.method="GET",d.body=void 0,d.headers.delete("content-length")),p(jr(new Rr(s,d))),void c())}}e.once("end",function(){r&&r.removeEventListener("abort",o)});let d=e.pipe(new Lr);const s={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:i.size,timeout:i.timeout,counter:i.counter},l=a.get("Content-Encoding");if(!i.compress||"HEAD"===i.method||null===l||204===e.statusCode||304===e.statusCode)return n=new Tr(d,s),void p(n);if("gzip"==l||"x-gzip"==l)return d=d.pipe(L.default.createGunzip({flush:L.default.Z_SYNC_FLUSH,finishFlush:L.default.Z_SYNC_FLUSH})),n=new Tr(d,s),void p(n);if("deflate"!=l&&"x-deflate"!=l){if("br"==l&&"function"==typeof L.default.createBrotliDecompress)return d=d.pipe(L.default.createBrotliDecompress()),n=new Tr(d,s),void p(n);n=new Tr(d,s),p(n)}else e.pipe(new Lr).once("data",function(e){d=d.pipe(8==(15&e[0])?L.default.createInflate():L.default.createInflateRaw()),n=new Tr(d,s),p(n)})}),function(e,a){const p=a.body;null===p?e.end():rr(p)?p.stream().pipe(e):Buffer.isBuffer(p)?(e.write(p),e.end()):p.pipe(e)}(m,i)})}jr.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},jr.Promise=global.Promise;for(var Br,Fr=256,$r=[];Fr--;)$r[Fr]=(Fr+256).toString(16).substring(1);function Mr(){var e,a=0,p="";if(!Br||Fr+16>256){for(Br=Array(a=256);a--;)Br[a]=256*Math.random()|0;a=Fr=0}for(;a<16;a++)e=Br[Fr+a],p+=6==a?$r[15&e|64]:8==a?$r[63&e|128]:$r[e],1&a&&a>1&&a<11&&(p+="-");return Fr++,p}const Ur=Gd(),Gr=require("../package.json").version,qr=process.env.GATSBY_TELEMETRY_API||"https://analytics.gatsbyjs.com/events";let zr;const Hr=function(e){if("boolean"==typeof e)return e;if(null==e)return!1;if("true"===e.toLowerCase())return!0;if("false"===e.toLowerCase())return!1;const a=parseInt(e,10);return!isNaN(a)&&a>0}(process.env.GATSBY_TELEMETRY_DISABLED),Yr=()=>{let e=Ur.get("telemetry.machineId");return"string"!=typeof e&&(e=Mr(),Ur.set("telemetry.machineId",e)),e},Wr=Mr(),Xr=(e,a)=>{(function(){if(void 0!==zr)return zr;let e=Ur.get("telemetry.enabled");return null==e&&(e=!0,Ur.set("telemetry.enabled",e)),Hr&&(e=!1),zr=e,e})()&&jr(qr,{method:"POST",headers:{"content-type":"application/json","user-agent":`create-gatsby:${Gr}`},body:JSON.stringify({eventType:e,time:new Date,sessionId:Wr,machineId:Yr(),componentId:"create-gatsby",componentVersion:1,gatsbyCliVersion:Gr,...a})}).catch(()=>{})},Kr=e=>e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase().replace(/[^a-z0-9_.]+/g,"-").replace(/^[_\-.]+|[_\-.]+$/g,"");var Jr={js:{message:"JavaScript"},ts:{message:"TypeScript"}};const Zr=/[<>:"/\\|?*\u0000-\u001F]/g,Qr=/^(con|prn|aux|nul|com\d|lpt\d)$/i,en=(e,a=!1)=>{const p=Object.entries(e).map(([e,a])=>({name:e,message:a.message}));return a?p:[{name:"none",message:"No (or I'll add it later)"},{name:"‚Äì",role:"separator",message:"‚Äì"},...p]};function an(e){return e?(e=e.trim(),Zr.test(e)?(dd(`The destination "${e}" is not a valid filename. Please try again, avoiding special characters.`),!1):"win32"===process.platform&&Qr.test(e)?(dd(`The destination "${e}" is not a valid Windows filename. Please try another name`),!1):!_.default.existsSync(N.default.resolve(e))||(dd(`The destination "${e}" already exists. Please choose a different name`),!1)):(dd("You have not provided a directory name for your site. Please do so when running with the 'y' flag."),!1)}const pn=e=>"win32"===process.platform?"":e;var tn;!function(e){e.yes="-y",e.ts="-ts"}(tn||(tn={}));const dn={js:"https://github.com/gatsbyjs/gatsby-starter-minimal.git",ts:"https://github.com/gatsbyjs/gatsby-starter-minimal-ts.git"};process.on("exit",e=>{Xr("CREATE_GATSBY_END",{exitCode:e}),-1===e&&Xr("CREATE_GATSBY_ERROR")}),exports.DEFAULT_STARTERS=dn,exports.run=async function(){var e;const{flags:a,dirName:p}=function(e){const{flags:a,dirName:p}=e.reduce((e,a)=>{switch(a){case tn.yes:e.flags.yes=!0;break;case tn.ts:e.flags.ts=!0;break;default:if(a.startsWith("-")){dd(`Found unknown argument "${a}", ignoring. Known arguments are: ${tn.yes}, ${tn.ts}`);break}e.dirName=a}return e},{flags:{yes:!1,ts:!1},dirName:""});return{flags:a,dirName:p}}(process.argv.slice(2));Xr("CREATE_GATSBY_START");const{version:i}=require("../package.json");pd(U.grey(`create-gatsby version ${i}`)),pd(`\n\n\n${function(e,a=" ",p=Os){return a.repeat(Math.round((p-(e=>{if(""===e)return 0;const a=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const a=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(a,e?void 0:"g")})(),""):e)(e);return""===a?0:a.match((()=>{const e="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff]",a="\\ud83c[\\udffb-\\udfff]",p="[^\\ud800-\\udfff]",t="(?:\\uD83C[\\uDDE6-\\uDDFF]){2}",i="[\\ud800-\\udbff][\\udc00-\\udfff]",d=`(?:${e}|${a})?`,s="[\\ufe0e\\ufe0f]?",r=s+d+`(?:\\u200d(?:${[p,t,i].join("|")})${s+d})*`,n=`(?:${[`${p}${e}?`,e,t,i,"[\\ud800-\\udfff]","[\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF93]"].join("|")})`;return new RegExp(`(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40(?:\\udc65|\\udc73|\\udc77)\\udb40(?:\\udc6e|\\udc63|\\udc6c)\\udb40(?:\\udc67|\\udc74|\\udc73)\\udb40\\udc7f)|${a}(?=${a})|${n+r}`,"g")})()).length})(e))/2))+e}(U.blueBright.bold.underline("Welcome to Gatsby!"))}\n\n\n`),a.yes||pd(((e,a=Os)=>function(e,a){(a=a||{}).width=a.hasOwnProperty("width")?a.width:80,a.ignoreAnsi=!a.hasOwnProperty("ignoreAnsi")||a.ignoreAnsi,a.patterns=a.hasOwnProperty("patterns")?a.patterns:[],a.ignoreAnsi&&(a.patterns=[/\u001b.*?m/g].concat(a.patterns));let p=e.split("\n"),t=[];for(let e of p){let p=e.split(" "),i="";for(let e of p)Cs(e,a)+Cs(i,a)+1>a.width&&(t.push(i),i=""),i&&(i+=" "),i+=e;t.push(i)}return t.join("\n")}(e,{width:a}))(`This command will generate a new Gatsby site for you in ${U.bold(process.cwd())} with the setup you select. ${U.white.bold("Let's answer some questions:\n\n")}`,process.stdout.columns));const d=new ia;let s;d.use(Zd);let r="";if(a.yes){if(r=p,!an(p))return;s=Kr(p)}else{const{name:e}=await d.prompt({type:"textinput",name:"name",message:"What would you like to call your site?",initial:"My Gatsby Site",format:e=>U.cyan(e)});s=Kr(e),r=e}const n=((e,a)=>{const p={type:"textinput",name:"project",message:"What would you like to name the folder where your site will be created?",hint:N.default.basename(process.cwd()),separator:"/",initial:e,format:e=>U.cyan(e),validate:an,skip:a.yes},t={type:"selectinput",name:"language",message:"Will you be using JavaScript or TypeScript?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(Jr,!0)},i=[{type:"selectinput",name:"cms",message:"Will you be using a CMS?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(da)},{type:"selectinput",name:"styling",message:"Would you like to install a styling system?",hint:"(Single choice) Arrow keys to move, enter to confirm",choices:en(sa)},{type:"multiselectinput",name:"features",message:"Would you like to install additional features with other plugins?",hint:'(Multiple choice) Use arrow keys to move, spacebar to select, and confirm with an enter on "Done"',choices:en(ra,!0)}];return a.yes?p:a.ts?[p,...i]:[p,t,...i]})(s,a),l=await d.prompt(n);var o;l.project=l.project.trim(),a.yes&&(l.language="js"),a.ts&&(l.language="ts"),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"project_name",valueString:(o=l.project,O.default.createHash("sha256").update(o).digest("hex"))}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"LANGUAGE",valueString:l.language}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"CMS",valueString:l.cms||"none"}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"CSS_TOOLS",valueString:l.styling||"none"}),Xr("CREATE_GATSBY_SELECT_OPTION",{name:"PLUGIN",valueStringArray:l.features||[]});const m=[`${pn("üõ†  ")}Create a new Gatsby site in the folder ${U.magenta(l.project)}`],u=[],c=[];let h={};if(l.cms&&"none"!==l.cms){m.push(`${pn("üìö ")}Install and configure the plugin for ${U.magenta(da[l.cms].message)}`);const e=da[l.cms].plugins||[];u.push(l.cms,...e),c.push(l.cms,...da[l.cms].dependencies||[],...e),h={...h,...da[l.cms].options}}if(l.styling&&"none"!==l.styling){m.push(`${pn("üé® ")}Get you set up to use ${U.magenta(sa[l.styling].message)} for styling your site`);const e=sa[l.styling].plugins||[];u.push(l.styling,...e),c.push(l.styling,...sa[l.styling].dependencies||[],...e),h={...h,...sa[l.styling].options}}if(null!=(e=l.features)&&e.length){var f,v;m.push(`${pn("üîå ")}Install ${null==(f=l.features)?void 0:f.map(e=>U.magenta(e)).join(", ")}`),u.push(...l.features);const e=null==(v=l.features)?void 0:v.map(e=>{const a=ra[e].plugins||[];return u.push(...a),[...ra[e].dependencies||[],...a]}),a=[].concat.apply([],e);c.push(...l.features,...a),h=l.features.reduce((e,a)=>({...e,...ra[a].options}),h)}const w=(e=>{const a=[];return e.forEach(e=>{const p=Ns[e];if(!p||"string"==typeof p||!("keys"in p))return;const t=null==p?void 0:p.keys;if(!t)return;const i=Object.entries(t).filter(As).map(Vs);i.length>0&&a.push({type:"forminput",name:e,multiple:!0,message:us`
           Configure the ${Ts(e)} plugin.
           See ${Ds(e)} for help.
           ${i.length>1?U.green("Use arrow keys to move between fields, and enter to finish"):""}
